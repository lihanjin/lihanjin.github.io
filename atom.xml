<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>_sUper.LEE的个人空间</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-02-26T04:13:28.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>_sUper.LEE</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2018/03/29/programming-basics-master/notes/%E9%BB%91%E5%AE%A2%E4%B8%8E%E7%94%BB%E5%AE%B6/"/>
    <id>http://yoursite.com/2018/03/29/programming-basics-master/notes/黑客与画家/</id>
    <published>2018-03-29T14:37:48.215Z</published>
    <updated>2018-02-26T04:13:28.000Z</updated>
    
    <content type="html"><![CDATA[<!-- GFM-TOC --><ul><li><a href="#������">������</a></li><li><a href="#Ϊʲô����Ӳ��ܻ�ӭ">Ϊʲô����Ӳ��ܻ�ӭ</a></li><li><a href="#�ڿ��뻭��">�ڿ��뻭��</a></li><li><a href="#����˵�Ļ�">����˵�Ļ�</a></li><li><a href="#��һ��·">��һ��·</a></li><li><a href="#������о�">������о�</a><!-- GFM-TOC --></li></ul><h1 id="������"><a href="#������" class="headerlink" title="������"></a>������</h1><p>���ߣ�������������ҵ֮��</p><p>�ʼ hack ָ��������Ľ���취����Щ���ܸɵ��˱���Ϊ hacker���ڿͰ������������ص㣺���桢�����̡�̽�����񡣺ڿ͵ĺ��ļ�ֵ�ۣ��������š������������������ʹ�á���������˺ڿ�ָ������Щר�Ҽ�����Ա��</p><p>���ںڿͳ�������ϵͳ����˱�����Щ�ƻ������ϵͳ������ϵ������Ȼ���ƻ������ϵͳ���˳�Ϊ���ͣ������ĺڿͲ���ô�����������������ø��á�</p><h1 id="Ϊʲo����Ӳ��ܻ�ӭ"><a href="#Ϊʲo����Ӳ��ܻ�ӭ" class="headerlink" title="Ϊʲô����Ӳ��ܻ�ӭ"></a>Ϊʲô����Ӳ��ܻ�ӭ</h1><p>������Ϊ��������ӡ��͡������̡�����أ���������ӡ��͡��ܻ�ӭ������ء�</p><p>������⣺��Ȼ��������̸ߣ���ôΪʲô������ܻ�ӭ�ķ�������ΪҪ���ܻ�ӭ����ҪͶ��ܴ��ʱ�侫��ȥ��������������������û����ô���ʱ��;�����������ܻ�ӭ�����Ǹ��ں���������Ȥ���£������������Ļ���ȡ�</p><p>�۸�����ӵ�ԭ��</p><ul><li><p>������ĺ��Ӹ��Ӳ��̣�����Ӳ��ܻ�ӭ��ζ�ű����Ӻ����۸���</p><blockquote><p>11 ����ǰ��С���������ɼҳ��������������ӵ�Ӱ�����ޡ� �����ǲ��ǲ�����Сѧ������ͬѧ���뷨�����Ǻ��߲����о�����Ӱ�졣Сѧ��ҵ�Ժ��������ο�ʼ�����仯������ 11 �����ң��������𽥰Ѽ�ͥ�����Ѱ�����ˡ� ������ͬ���п�����һ���µ����磬����Ϊ�Ǹ����������Ҫ�ģ��ȼ�����������Ҫ��ʵ���ϣ���������ڼ����븸ĸ������ͻ�� ���������Ǹ��µ��������������ӣ�������Ҳȷʵ���ں��Ǹ����硣���ǣ��������ڣ��������Լ����������������һ���ǳ�ԭʼ�����硣�������������ϻ�û�а��Ѷ�ͯ״̬�� ����˶�����̵ضԴ����ˡ�������ĥ����ӵ�ԭ�����ε�һ��֩����һ�������úܺ��档��һ���˲�����֪֮ǰ����ĥ����һ�����֡�</p></blockquote></li><li><p>Ϊ��͹���Լ���</p><blockquote><p>���κ����ȼ��ƶ��У���Щ���Լ�û���ŵ��˾ͻ�ͨ��Ű���������е��µ�����ͻ���Լ�����ݡ����Ѿ���ʶ����������Ϊ���ԭ������������еײ�����ǶԴ�������п��Ⱥ�塣���ܻ�ӭ�ĺ��Ӳ����۸�����ӣ����ǲ���Ҫ���������������������Լ����󲿷ֵ��۸����Դ�����һ�ȼ���ѧ������Щ���ǵ��м�㡣</p></blockquote></li><li><p>Ϊ�˺��ܻ�ӭ���˽��ͬ�ˡ�</p><blockquote><p>û��ʲô��һ����ͬ�ĵ��˸���ʹ�������Ž������ˡ���ͺñ�һ�����ͣ�������ѡ���������Ĺ��ھ��ƣ���������Ϊ�����ҳ�һ�����ˣ����µ��˲�����Ĵ��ڣ���Ҳ���Դ���һ��������һȺ����һ�����һ������ӣ��Ӹ����µ��۸������ͻ�ѱ˴���ϵ������һ�𹥻�һ�����ˣ���������˾Ͷ������Լ��ˡ������Ϊʲô����ӵ���ǿ�������¼����������йص�ԭ�������һ������ӣ�����������㣬һȺ�˵�Ű����һ���˵�Ű���п�öࡣ</p></blockquote></li></ul><p>ѧУ��ʦ��ֻ�ǰѽ��鵱�ɹ�����</p><blockquote><p>����ѧУ����ʦ������������䡣���ܼ���������Ҫ���ĵ��Ƿ��˶������Լ�Ӧ�ô���λ�á�Ȼ���÷����ж����ԣ������ܲ�Ҫ������Ź���˺��¼�����Ϳ����ˡ�</p></blockquote><p>�����֮������ӻᱻ�ѺöԴ�����Ϊ�����������ܹ����������Ӱ�죬���������Ҫ��ЩӰ�졣</p><p>�����˰Ѻ�����ѧУ�ܿ����ѹ��Ϊ�ഺ�ڵļ���Ӱ�죬����ʵ��������ѧУ�������Ƶ����⣬ѧУֻ�ǰѺ���Ȧ���������������ǵ������ܣ�Ȼ��ѧУ�ڲ������źܶ���̡�</p><p>��ȥ�ĺ��Ӹ���Ͷ����ᣬҲ���ܹ�����ѧ�᱾�졣</p><blockquote><p>��ȥ������У������������һ���������Ľ�ɫ����ҵ��ʱ������ǰ�������궼��ĳ����ʽ��ѧͽ��������ĳ��������������ĳ��ũׯ��������ĳ�Ҿ����ϡ����ǲ��ᱻ�ӵ�һ�ԣ������Լ���С��ᡣ�����ǳ��������ĵͼ���Ա����ǰ���������ƺ�Ҳ���𾴳����ˣ���Ϊ�����˶��ǿ��ü���ר�ң��ᴫ��������Ҫѧϰ�ļ��ܡ����Ĵ���������꣬�����ǵļҳ���ңԶ�İ칫�������µĹ�������һ����֪�����ǿ�����ѧУ��ҵ��δ������������µĹ����к���ϵ��</p></blockquote><p>ѧУ��ʹ���ǽ������ˣ�����û������ѹ��ȥ�ල������ô����������ʦ��ѧ��˫���������Ƿ������¡�</p><p>û�����ڵĶ��֣������Ǿͻ���ѶԷ��������֡�</p><p>�����˱���˺ܶ����õĶ��������硰�˸񡱡�</p><blockquote><p>�������ӿ��ܶ�����һ����ֱ�����б�ҵ����󣬲�ȥ����ѧ���ָ��������ǣ��Ҵ���ľ�������ֻ�Ǽ�������ѡ��Ҷ�������õ����۶���֮�Աǣ����硰�˸񡱡�����ֱ������Ϊ�����˱������Щ�ʡ������������Щ���ƺ�����ͬһ����˼��������������һЩ������Ϊ�߱���ν�ġ��˸񡱺͡���ֱ�������ܵ��佱���������ǲ��Ǵ����һͷ��ţ�������ḡ����һ�������Խ�Ĵ�ţ�ߡ�������˸񡱺͡���ֱ�������������ӣ�����Ը��Ҫ���ǡ�</p></blockquote><h1 id="�ڿ��뻭��"><a href="#�ڿ��뻭��" class="headerlink" title="�ڿ��뻭��"></a>�ڿ��뻭��</h1><p>�ڿͺͻ���һ�������������ң����ڽ��д�����</p><p>�ڿͱȽ�ϲ���ű��������ֿ��Զ�̬��չ�����ҿ�����Ǧ�ʻ���һ�����޸ĸġ�</p><blockquote><p>���������Ҫ������Ӧ��������̬��չ��malleable���������������������˼������ģ�����������������Ѿ���õĳ�����Ӧ����һ֧Ǧ�ʣ�������һ֧�ֱʡ������Ҷ���ѧУ�̵�������̣���ô��̬���ͣ�static typing����һ������ĸ�����ǣ�����ʶ�ĺڿͣ�û��һ����ϲ���þ�̬�������Ա�̡�������Ҫ����һ�ֿ�������ͿĨ�������ĸĵ����ԣ����ǲ�������Σ������һ��ʢ�����ֱ������͵Ĳ豭��С����������Լ���ϥ���ϣ�Ϊ����һ˿�����ı���������̸��Ŭ������ѡ���ȷ����������ƥ�䣬�����Լ��Ե���ò���ܵ���</p></blockquote><p>���벢���ǿ�ѧ�о��������ѧ�Ҳ�һ��дһ�ֺô��롣</p><blockquote><p>�����߲�ͬ�ڿ�ѧ�ң�������һ���кܶ�ô������˲���Ϊ��̬���ͷ������⣬��������ȥ��һ����ĥ��ѧ�ҵ����⣬�Ǿ��ǡ�����ѧ�Ķʼɡ�����ѧ���ÿһ���ˣ������ﶼ������ѧ�ұ��Լ��������Ҿ��ã���ѧ���Լ�Ҳ������һ�㡣���Ľ�����ǿ�ѧ����������Լ��Ĺ���������Ū�ÿ���ȥ����ѧ����������ѧ��������������ܲ�����̫����Ӱ�졣���ǣ���Խ����Ȼ��ѧ�ķ���չ������Խ��Ϊһ�����ص����⡣</p></blockquote><p>�ڿ�Ϊ�������Լ�ϲ�������²��ҿ��������Լ����������칤���������Լ����¡�</p><p>�Ȱ���̵��˲��ɱ���ĻῪ���Լ�����Ŀ��</p><blockquote><p>�������Գ���Ա��ʱ����Ҫ��ע���������ҵ��ʱ������д��ʲô�������Ϊ����㲻��һ���£��㲻���ܰ��������������㣬Ҫ������Ȱ���̣���Ͳ��ɱ���ػῪ�����Լ�����Ŀ��</p></blockquote><p>�ڿͲ��ǻ�е�����ļ������ˣ�����һλ�����ߡ�</p><blockquote><p>����ڿ�ֻ��һ������ʵ���쵼��־�ļ������ˣ�ְ����Ǹ��ݹ��˵����д�����룬��ô����ʵ��һ����ˮ���Ĺ�����һ���ģ�����ͷ�ڵ���ͷ�����˶��ѡ����ǣ�����ڿ���һ�������ߣ������µľͲ��ǻ�е�ԵĹ�����������߱���С�</p></blockquote><h1 id="����˵�L�"><a href="#����˵�L�" class="headerlink" title="����˵�Ļ�"></a>����˵�Ļ�</h1><p>���еĵ��¹�����Ȼ�ں����������ǻĵ��ģ�����������ֽ�ȥΥ����Щ���¹��˵һЩ�����ʵ����ۣ������Լ������鷳֮�С�</p><p>�Լ���������ͬ�Լ��Ĺ۵㣬����ȷ�Ż�õ����˵���ͬ���ܿ����ǣ���Щ�۵��Ǳ��˸��Լ�����ģ�����˵ʲô���Լ�������ʲô��</p><p>����˵�Ļ���������ȷ�Ļ�����Ϊ���������ԣ�����ĳЩ�˱������ס�</p><p>��Щ��һ����ȷ�����������Ե����۱���Ϊ�����а˵�������ǳ���������Ǽ��ϱ�ǩ��Ŀ����Ϊ�˷�ɱ���ǡ�</p><blockquote><p>����������ð��ʥ�顢��˶���������ʷ�ϳ����ı�ǩ�������ı�ǩ�������˷绯�������塢�ƻ���������ȡ�</p></blockquote><p>���ɵ��Ƴ�������Щ�����еȽײ���ˣ����ǲ���ߵȽײ��������㹻���ű����Լ������棬�ֲ�ͬ�ڵ͵Ƚײ㣬������ʵ��ȥ���С�</p><p>���й۵�ĵ�һ��׷������Ϊ�����Լ����ڲ�ͬ�����ڶ����������Լ����ڲ�ͬ��</p><p>��ѧ��������Ҫ�������й۵㣬�Ӷ�ȡ��ͻ�ơ�</p><p>�����Ϊ˵��ĳЩ�����ø������Լ��������û��Ǳ�˵��</p><blockquote><p>��ʱ��Ҫ���ף�����˼���ȳ������Ը���Ҫ�������е�һ��Ҫ����Щ�˱�����ף����������������һ��Ҫ�ѻ�˵���������ܿ����ǴӴ�����Ҳ�޷��������Ե�˼���ˡ�����Ϊ����������ȡ�����õķ�������˼�������֮�仮һ����ȷ�Ľ��ߡ��������������룬���ǲ�һ��Ҫ˵�������Ҿ͹����Լ�������ĬĬ˼����Щ���޷�������뷨�����˼����һ��������֯������Ҫ�����﷢��������һ����˵�������������񶷾��ֲ����ĵ�һ�����򣬾��ǲ�Ҫ�ᵽ�񶷾��ֲ���</p></blockquote><p>�����ȷ���������Ĺ۵�ʱ�������˵�Լ���û��á�</p><p>���ǻ�����Ϊ�Լ�˼�뿪�ţ������������������һ�����ޣ���Ϊʲô����ȷ��ʲô�Ǵ���ġ�</p><p>���������ʶ�Լ���</p><blockquote><p>��ͯ��ƣ����ʱ�����ܻ��Ƣ������Ϊ����֪��Ϊ��ʲô������������˽��Ǹ��˵�����״�����⣬������޹أ�˵һ�䡰û��ϵ����ֻ�����ˡ���</p></blockquote><h1 id="��һ��·"><a href="#��һ��·" class="headerlink" title="��һ��·"></a>��һ��·</h1><p>������������ŵ�</p><ol><li>����Ҫ�û�������ϵͳ����˲���Ҫר�ŵļ����֪ʶ��ʹ�����������ʹ�ã�</li><li>��Ҫ��Ӳ����Դ���٣�ֻ��Ҫ����������������������豸���У�</li><li>�����㣬��ʱ��ؾͿ���ʹ�ã�</li><li>���õ������ݶ�ʧ����Ϊ���ݱ������ƶˣ�</li><li>���ڶ�����������������û���������ȫ��֪�������¼���ʹ�ã�</li><li>�����׵� bug ���֣������ bug �޸ģ�</li><li>��ר�ŵļ�����Ա�������������Ϊ���Ӱ�ȫ��</li></ol><p>bug Խ�췢��Խ�ã��������������Ϊ�������ڶ̣��û������죬��� bug �ķ���Ҳ���졣</p><p>�߼��û����������Ѱ�� bug��</p><blockquote><p>��Ϊ��������Ժ󣬴���� bug ���Ǻ�������²Żᷢ���ĸ������ܵ�Ӱ����û��������Ǹ߼�ʹ���ߣ�����ϲ��������Щ�����õġ��Ѷȴ�Ĳ������߼�ʹ���߶� bug �����̶ȱȽϸߣ����������Щ bug ���ڿ����¹��ܵĹ���������ģ�����Щ�¹�����������������Ҫ�ģ����Ǿ͸�������ˡ���ʵ�ϣ���Ϊ bug ���࣬��ֻ�о���һЩ���ӵĹ����Ժ�Ż��������ǣ����Ը߼�ʹ����������Ϊ������ bug �е��ܵ��⡣���Ǵ�绰���ͷ�ʱ�������һ��ʤ���ߵĿ��ǣ�������ŭ���������ӣ��������ǻ������ǵ÷���һ����</p></blockquote><p>�õļ���֧���ǣ��ͷ���Ա�ͼ�����Ա��úܽ������ҵ����޸� bug��</p><p>һ���õ��뷨��ʵ�ֹ���������������뷨����˾���ȥʵ�����Ƚ�����֮�߸��ܹ���������ô���</p><p>���Ṻ��������û�ʹ���˵�������ܹ�������������г�Ӱ������</p><blockquote><p>һ�������ĵ���������˾���кô��ġ��������������۶��٣���Щ�û���Զ�����Ṻ������������û�ʹ�õ��棬�㲢û���κ���ʧ����ʵ�ϣ��㷴��׬���ˣ���Ϊ���������ڶ���һ���û����г�Ӱ�����͸�����һЩ��������û����ܱ�ҵ�Ժ�ͻ��Ǯ������������</p></blockquote><h1 id="������о�"><a href="#������о�" class="headerlink" title="������о�"></a>������о�</h1><p>���׷����Ǻã����о�׷������¡�</p><p>�û�Ҫ����û������������û����ܲ����˽��Լ�Ҫʲô�������û�Ҫ����������������û���������Ķ�����</p><p>�����������Ϊ��������ѧ�о�׷������ȷ��������ѧ�Ҳ���Ϊ���ö��߸����׶�������һ�ָ��鷳��֤�������ǻ�ѡ����ֱ�Ӽ���֤�����������Ҳ������Ϊ���ģ���˱������Ҳ��ͨ����Ʋ����ġ�</p><p>����ʯ�����Ķ���Ư����������������ȴ���ѣ��޷����ϵĽ��е������������Ҳ��Ҫ���ֵ������̣����һ�ֱ�����������ʯһ����ֻ�ǽ���ÿ�����ô���Ͳ���һ�ֺõı�����ԡ�</p><p>������Ӧ�������ó�ԭ���������񻭻�һ���������ü����߻���һ������׼ȷ��������Ȼ�����𲽼ӹ���</p><blockquote><p>������һ��������˼�룬Ҳ����Ա���Ϊ��ʥĸ�����ǡ�ģʽ������Ҫ�󾡿��ó�ԭ�ͣ�Ȼ�������Ż������Ĺ۵�����Ӧ�õȵ������ĳ�Ʒ�����Ժ���һ����¡�ص������г�������ʥĸ�����ǽ���һ������������������������������˶�Ա��;��ϮҲû�й�ϵ���ڻ�������ĭʱ�ڣ�������ҵ��˾��Ϊ����������ģʽ���Ի�ǰ�̡�</p></blockquote><p>���������ĳ���ºܷ�ζ����ô�������Ķ����ͻ�ܷ�ζ�����ٵ�ԭ���ܹ��ó���Ա�и��ߵ�ʿ�����Ӷ������Ǹ�����Ȥȥʵ�֡�Ҳ�������Ϊ���ٷ�������Ҫ��</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- GFM-TOC --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#������&quot;&gt;������&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#Ϊʲô����Ӳ��ܻ�ӭ&quot;&gt;Ϊʲô����Ӳ��ܻ�ӭ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#�ڿ��뻭��&quot;&gt;�ڿ��뻭
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2018/03/29/programming-basics-master/notes/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E6%80%9D%E6%83%B3/"/>
    <id>http://yoursite.com/2018/03/29/programming-basics-master/notes/面向对象思想/</id>
    <published>2018-03-29T14:37:48.214Z</published>
    <updated>2018-02-26T04:13:28.000Z</updated>
    
    <content type="html"><![CDATA[<!-- GFM-TOC --><ul><li><a href="#solid">S.O.L.I.D</a><ul><li><a href="#1-��һ����ԭ��">1. ��һ����ԭ��</a></li><li><a href="#2-���ŷ��ԭ��">2. ���ŷ��ԭ��</a></li><li><a href="#3-�����滻ԭ��">3. �����滻ԭ��</a></li><li><a href="#4-�ӿڷ���ԭ��">4. �ӿڷ���ԭ��</a></li><li><a href="#5-��������ԭ��">5. ��������ԭ��</a></li></ul></li><li><a href="#��װ�̳ж�̬">��װ���̳С���̬</a><ul><li><a href="#1-��װ">1. ��װ</a></li><li><a href="#2-�̳�">2. �̳�</a></li><li><a href="#3-��̬">3. ��̬</a></li></ul></li><li><a href="#uml">UML</a><ul><li><a href="#1-��ͼ">1. ��ͼ</a></li><li><a href="#2-ʱ��ͼ">2. ʱ��ͼ</a></li></ul></li><li><a href="#�ο�����">�ο�����</a><!-- GFM-TOC --></li></ul><h1 id="S-O-L-I-D"><a href="#S-O-L-I-D" class="headerlink" title="S.O.L.I.D"></a>S.O.L.I.D</h1><p>S.O.L.I.D�����������ƺͱ��(OOD&amp;OOP)�м�����Ҫ����ԭ��(Programming Priciple)������ĸ��д��</p><table><thead><tr><th>��д</th><th>ȫƴ</th><th>���ķ���</th></tr></thead><tbody><tr><td>SRP</td><td>The Single Responsibility Principle</td><td>��һ����ԭ��</td></tr><tr><td>OCP</td><td>The Open Closed Principle</td><td>���ŷ��ԭ��</td></tr><tr><td>LSP</td><td>The Liskov Substitution Principle</td><td>�����滻ԭ��</td></tr><tr><td>ISP</td><td>The Interface Segregation Principle</td><td>�ӿڷ���ԭ��</td></tr><tr><td>DIP</td><td>The Dependency Inversion Principle</td><td>��������ԭ��</td></tr></tbody></table><h2 id="1-��һ����ԭ��"><a href="#1-��һ����ԭ��" class="headerlink" title="1. ��һ����ԭ��"></a>1. ��һ����ԭ��</h2><p>����Ҫ�޸�ĳ�����ʱ��ԭ������ֻ��һ�������仰˵������һ����ֻ��һ���������Σ����������Ҫ�е��������͵����ε�ʱ�򣬾���Ҫ�ֽ�����ࡣ</p><h2 id="2-���y��ԭ��"><a href="#2-���y��ԭ��" class="headerlink" title="2. ���ŷ��ԭ��"></a>2. ���ŷ��ԭ��</h2><p>���ʵ��Ӧ���ǿ���չ���������޸ĵġ�Ҳ����˵������չ�ǿ��ŵģ������޸��Ƿ�յġ�</p><h2 id="3-�����滻ԭ��"><a href="#3-�����滻ԭ��" class="headerlink" title="3. �����滻ԭ��"></a>3. �����滻ԭ��</h2><p>��һ�������ʵ��Ӧ���ܹ��滻�κ��䳬���ʵ��ʱ������֮��ž��� is-a ��ϵ��</p><h2 id="4-�ӿڷ���ԭ��"><a href="#4-�ӿڷ���ԭ��" class="headerlink" title="4. �ӿڷ���ԭ��"></a>4. �ӿڷ���ԭ��</h2><p>����ǿ���û�ȥ������Щ���ǲ�ʹ�õĽӿڡ����仰˵��ʹ�ö��ר�ŵĽӿڱ�ʹ�õ�һ���ܽӿ���Ҫ�á�</p><h2 id="5-��������ԭ��"><a href="#5-��������ԭ��" class="headerlink" title="5. ��������ԭ��"></a>5. ��������ԭ��</h2><ol><li>�߲�ģ�鲻Ӧ�������ڵͲ�ģ�飬���߶�Ӧ�������ڳ���</li><li>����Ӧ��������ϸ�ڣ�ϸ��Ӧ�������ڳ���</li></ol><h1 id="��װ���̳С���̬"><a href="#��װ���̳С���̬" class="headerlink" title="��װ���̳С���̬"></a>��װ���̳С���̬</h1><p>��װ���̳С���̬�����������������ԡ�</p><h2 id="1-��װ"><a href="#1-��װ" class="headerlink" title="1. ��װ"></a>1. ��װ</h2><p>���ó����������ͽ����ݺͻ������ݵĲ�����װ��һ��ʹ�乹��һ�����ɷָ�Ķ���ʵ�壬���ݱ������ڳ����������͵��ڲ��������ܵ������ڲ���ϸ�ڣ�ֻ����һЩ����ӿ�ʹ֮���ⲿ������ϵ���û�������֪�������ڲ���ϸ�ڣ�������ͨ���ö��������ṩ�Ľӿ������ʸö���</p><p>��װ������ô���</p><ol><li><p>���õķ�װ�ܹ�������ϡ�</p></li><li><p>���ڲ��Ľṹ���������޸ġ�</p></li><li><p>���ԶԳ�Ա���и���ȷ�Ŀ��ơ�</p></li><li><p>������Ϣ��ʵ��ϸ�ڡ�</p></li></ol><p>���� Person ���װ name��gender��age �����ԣ����ֻ��ͨ�� get() ������ȡһ�� Person ����� name ���Ժ� gender ���ԣ����޷���ȡ age ���ԣ����� age ���Կ��Թ� work() ����ʹ�á�</p><p>ע�⵽ gender ����ʹ�� int �������ͽ��д洢����װʹ���û�ע�ⲻ������ʵ��ϸ�ڡ���������Ҫ�޸�ʹ�õ���������ʱ��Ҳ�����ڲ�Ӱ��ͻ��˴��������½��С�</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> gender;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getGender</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> gender == <span class="number">0</span> ? <span class="string">"man"</span> : <span class="string">"woman"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">work</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="number">18</span> &lt;= age &amp;&amp; age &lt;= <span class="number">50</span>) &#123;</span><br><span class="line">            System.out.println(name + <span class="string">" is working very hard!"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(name + <span class="string">" can't work!"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-�̳�"><a href="#2-�̳�" class="headerlink" title="2. �̳�"></a>2. �̳�</h2><p>�̳�ʵ���� <strong>is-a</strong> ��ϵ������ Cat �� Animal ����һ�� is-a ��ϵ����˿��Խ� Cat �̳��� Animal���Ӷ���� Animal �� private �����Ժͷ�����</p><p>Cat ���Ե��� Animal ��ʹ�ã�Ҳ���ǿ���ʹ�� Animal ���� Cat ������������ת��Ϊ�����Ϊ <strong>����ת��</strong>��</p><p>�̳�Ӧ����ѭ�����滻ԭ�򣺵�һ�������ʵ��Ӧ���ܹ��滻�κ��䳬���ʵ��ʱ������֮��ž��� is-a ��ϵ��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Animal animal = <span class="keyword">new</span> Cat();</span><br></pre></td></tr></table></figure><h2 id="3-��̬"><a href="#3-��̬" class="headerlink" title="3. ��̬"></a>3. ��̬</h2><p>��̬��Ϊ����ʱ��̬������ʱ��̬������ʱ��̬��Ҫָ��������װ������ʱ��ָ̬�����ж���Ķ���������ָ��ľ��������������ڼ��ȷ����</p><p>��̬������������1. �̳У�2. ���Ǹ��෽����3. ����ת�͡�</p><p>����Ĵ����У������ࣨInstrument�����������ࣺWind �� Percussion�����Ƕ������� play() ������������ main() ������ʹ�ø��� Instrument ������ Wind �� Percussion ������ Instrument ���õ��� play() ����ʱ����ִ��ʵ�����ö���������� play() ������������ Instrument ��ķ�����</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Instrument</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">play</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Instument is playing..."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Wind</span> <span class="keyword">extends</span> <span class="title">Instrument</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">play</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Wind is playing..."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Percussion</span> <span class="keyword">extends</span> <span class="title">Instrument</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">play</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"Percussion is playing..."</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Music</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">        List&lt;Instrument&gt; instruments = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        instruments.add(<span class="keyword">new</span> Wind());</span><br><span class="line">        instruments.add(<span class="keyword">new</span> Percussion());</span><br><span class="line">        <span class="keyword">for</span>(Instrument instrument : instruments)&#123;</span><br><span class="line">            instrument.play();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="UML"><a href="#UML" class="headerlink" title="UML"></a>UML</h1><h2 id="1-��ͼ"><a href="#1-��ͼ" class="headerlink" title="1. ��ͼ"></a>1. ��ͼ</h2><p><strong>1.1 �̳����</strong></p><p>�̳���������ʽ: ������generalize����ʵ�֣�realize��������Ϊ is-a ��ϵ��</p><p>�� ������ϵ(generalization)</p><p>�Ӿ������м̳�</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/29badd92-109f-4f29-abb9-9857f5973928.png" alt=""></p><p>�� ʵ�ֹ�ϵ(realize)</p><p>�ӳ�������߽ӿ��м̳�</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/4b16e1d3-3a60-472c-9756-2f31b1c48abe.png" alt=""></p><p><strong>1.2 ����Ͳ���</strong></p><p>�� �ۺϹ�ϵ(aggregation)</p><p>��ʾ�����ɲ�����ɣ���������Ͳ��ֲ���ǿ�����ģ����岻�����˲��ֻ��ǻ���ڡ����±�ʾ B �� A ��ɣ�</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/34259bb8-ca3a-4872-8771-9e946782d9c3.png" alt=""></p><p>�� ��Ϲ�ϵ(composition)</p><p>�;ۺϲ�ͬ�����������Ͳ�����ǿ�����ģ����岻�����˲���Ҳ�������ˡ����繫˾�Ͳ��ţ���˾û�˲��žͲ������ˡ����ǹ�˾��Ա�������ھۺϹ�ϵ�ˣ���Ϊ��˾û��Ա�����ڡ�</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/7dda050d-ac35-4f47-9f51-18f18ed6fa9a.png" alt=""></p><p><strong>1.3 �໥��ϵ</strong></p><p>�� ������ϵ(association)</p><p>��ʾ��ͬ�����֮���й���������һ�־�̬��ϵ�������й��̵�״̬�޹أ����ʼ�Ϳ���ȷ�������Ҳ������ 1 �� 1����� 1����Զ����ֹ�����ϵ����ʾ������ѧ����ѧУ����һ�ֹ�����ϵ��һ��ѧУ�����кܶ�ѧ��������һ��ѧ��ֻ����һ��ѧУ���������һ�ֶ��һ�Ĺ�ϵ�������п�ʼ֮ǰ�Ϳ���ȷ����</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/4ccd294c-d6b2-421b-839e-d88336ff5fb7.png" alt=""></p><p>�� ������ϵ(dependency)</p><p>�͹�����ϵ��ͬ����, ������ϵ�������й����������õġ�һ��������Ϊ��Ĺ��������߷����Ĳ������롣˫������ʱһ�ֲ��õ���ơ�</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/47ca2614-509f-476e-98fc-50ec9f9d43c0.png" alt=""></p><h2 id="2-ʱ��ͼ"><a href="#2-ʱ��ͼ" class="headerlink" title="2. ʱ��ͼ"></a>2. ʱ��ͼ</h2><p><strong>2.1 ����</strong></p><p>ʱ��ͼ�����˶���֮�䴫����Ϣ��ʱ��˳����������ʾ��������Ϊ˳��������Ҫ������ͨ�������Ľ���������������ע���Ƕ��󣩣��Ӷ�Ѱ����Ĳ�����</p><p><strong>2.2 ���֮սʱ��ͼ</strong></p><p>�����ߴ������±�ʾʱ����ƽ���</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/80c5aff8-fc46-4810-aeaa-215b5c60a003.png" alt=""></p><p>�ɼ���ͨ��ʱ��ͼ����֪��ÿ����������²�����</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">publc <span class="class"><span class="keyword">class</span> ���� </span>&#123;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span> Ӧս();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">publc <span class="class"><span class="keyword">class</span>  ���� </span>&#123;</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span>  �ⶨ����();</span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span>  ������Ȩ();</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">void</span> �趫���();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> ���� </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span>  �����G��();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> �ŷ� </span>&#123;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span>  ���ؾ���ǰ��();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> ��Ȩ </span>&#123;</span><br><span class="line">   <span class="keyword">public</span> <span class="keyword">void</span>  �������();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>2.3 �ͼ��ʱ��ͼ֮��Ĺ�ϵ</strong></p><p>�ͼʾ���û��ĽǶ�������������</p><p>ʱ��ͼ�ǴӼ�����ĽǶȣ������Ľ���������������</p><p><strong>2.4 ��ͼ��ʱ��ͼ�Ĺ�ϵ</strong></p><p>��ͼ����ϵͳ�ľ�̬�ṹ��ʱ��ͼ����ϵͳ�Ķ�̬��Ϊ��</p><p><strong>2.5 ʱ��ͼ�����</strong></p><p>�� ����</p><p>�����ֱ�����ʽ</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/25b8adad-2ef6-4f30-9012-c306b4e49897.png" alt=""></p><p>�ڻ�ͼʱ��Ӧ����ѭ����ԭ��</p><ol><li><p>�ѽ���Ƶ���Ķ��󾡿��ܵؿ�£��</p></li><li><p>�ѳ�ʼ������������Ķ�����ʱ��һ�������ߣ�����������ߡ�</p></li></ol><p>�� ������</p><p>�����ߴӶ���Ĵ�����ʼ����������ʱ��ֹ</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/b7b0eac6-e7ea-4fb6-8bfb-95fec6f235e2.png" alt=""></p><p>�� ��Ϣ</p><p>����֮��Ľ���ʽͨ��������Ϣ��ʵ�ֵġ�</p><p>��Ϣ��4�����ͣ�</p><p>1. ����Ϣ��������ͬ���첽��</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/a13b62da-0fa8-4224-a615-4cadacc08871.png" alt=""></p><p>2. ͬ����Ϣ��������Ϣ֮����Ҫ��ͣ����ȴ���Ӧ��</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/33821037-dc40-4266-901c-e5b38e618426.png" alt=""></p><p>3. �첽��Ϣ��������Ϣ֮����Ҫ�ȴ���</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/dec6c6cc-1b5f-44ed-b8fd-464fcf849dac.png" alt=""></p><p>4. ������Ϣ����ѡ��</p><p>�� ����</p><p>�������ϵķ����ʾ����״̬������ʱ�䴦������״̬��</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/6ab5de9b-1c1e-4118-b2c3-fb6c7ed7de6f.png" alt=""></p><h1 id="�ο�����"><a href="#�ο�����" class="headerlink" title="�ο�����"></a>�ο�����</h1><ul><li><p>Java ���˼��</p></li><li><p><a href="http://www.cnblogs.com/shanyou/archive/2009/09/21/1570716.html" target="_blank" rel="noopener">���������Ƶ�SOLIDԭ��</a></p></li><li><p><a href="http://design-patterns.readthedocs.io/zh_CN/latest/read_uml.html#generalization" target="_blank" rel="noopener">����UML��ͼ��ʱ��ͼ</a></p></li><li><p><a href="http://www.cnblogs.com/wolf-sun/p/UML-Sequence-diagram.html" target="_blank" rel="noopener">UMLϵ�С���ʱ��ͼ��˳��ͼ��sequence diagram</a></p></li><li><p><a href="http://blog.csdn.net/jianyuerensheng/article/details/51602015" target="_blank" rel="noopener">�����������������——��װ���̳С���̬</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- GFM-TOC --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#solid&quot;&gt;S.O.L.I.D&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#1-��һ����ԭ��&quot;&gt;1. ��һ����ԭ��&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#2-���ŷ��ԭ��&quot;&gt;2
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2018/03/29/programming-basics-master/notes/%E9%87%8D%E6%9E%84/"/>
    <id>http://yoursite.com/2018/03/29/programming-basics-master/notes/重构/</id>
    <published>2018-03-29T14:37:48.213Z</published>
    <updated>2018-02-26T04:13:28.000Z</updated>
    
    <content type="html"><![CDATA[<!-- GFM-TOC --><ul><li><a href="#��һ��-��һ������">��һ�� ��һ������</a></li><li><a href="#�ڶ���-�ع�ԭ��">�ڶ��� �ع�ԭ��</a></li><li><a href="#������-����Ļ�ζ��">������ ����Ļ�ζ��</a><ul><li><a href="#1-duplicated-code�ظ�����">1. Duplicated Code���ظ����룩</a></li><li><a href="#2-long-method��������">2. Long Method������������</a></li><li><a href="#3-large-class�������">3. Large Class��������ࣩ</a></li><li><a href="#4-long-parameter-list�����Ĳ�����">4. Long Parameter List�������Ĳ����У�</a></li><li><a href="#5-divergent-change��ɢʽ�仯">5. Divergent Change����ɢʽ�仯��</a></li><li><a href="#6-shotgun-surgeryɢ��ʽ�޸�">6. Shotgun Surgery��ɢ��ʽ�޸ģ�</a></li><li><a href="#7-feature-envy�������">7. Feature Envy��������ᣩ</a></li><li><a href="#8-data-clumps��������">8. Data Clumps���������ţ�</a></li><li><a href="#9-primitive-obsession��������ƫִ">9. Primitive Obsession����������ƫִ��</a></li><li><a href="#10-switch-statementsswitch-�������">10. Switch Statements��switch �������</a></li><li><a href="#11-parallel-inheritance-hierarchiesƽ�м̳���ϵ">11. Parallel Inheritance Hierarchies��ƽ�м̳���ϵ��</a></li><li><a href="#12-lazy-class������">12. Lazy Class�������ࣩ</a></li><li><a href="#13-speculative-generality�����̸δ����">13. Speculative Generality�������̸δ���ԣ�</a></li><li><a href="#14-temporary-field�����Ի����ʱ�ֶ�">14. Temporary Field�������Ի����ʱ�ֶΣ�</a></li><li><a href="#15-message-chains������ϵ���Ϣ��">15. Message Chains��������ϵ���Ϣ����</a></li><li><a href="#16-middle-man�м���">16. Middle Man���м��ˣ�</a></li><li><a href="#17-inappropriate-intimacy���ǹ�ϵ">17. Inappropriate Intimacy�����ǹ�ϵ��</a></li><li><a href="#18-alernative-classes-with-different-interfaces����ͬ������">18. Alernative Classes with Different Interfaces������ͬ�����ࣩ</a></li><li><a href="#19-incomplete-library-class�����������">19. Incomplete Library Class������������⣩</a></li><li><a href="#20-data-class���ɵ�������">20. Data Class�����ɵ������ࣩ</a></li><li><a href="#21-refused-bequest���ܾ�������">21. Refused Bequest�����ܾ���������</a></li><li><a href="#22-comments�����ע��">22. Comments�������ע�ͣ�</a></li></ul></li><li><a href="#������-����������ϵ">������ ����������ϵ</a></li><li><a href="#������-�ع��б�">������ �ع��б�</a></li><li><a href="#������-������֯����">������ ������֯����</a><ul><li><a href="#1-extract-method��������">1. Extract Method������������</a></li><li><a href="#2-inline-method��������">2. Inline Method������������</a></li><li><a href="#3-inline-temp������ʱ����">3. Inline Temp��������ʱ������</a></li><li><a href="#4-replace-temp-with-query�Բ�ѯȡ����ʱ����">4. Replace Temp with Query���Բ�ѯȡ����ʱ������</a></li><li><a href="#5-introduce-explaining-variable������ͱ���">5. Introduce Explaining Variable��������ͱ�����</a></li><li><a href="#6-split-temporary-variable�ֽ���ʱ����">6. Split Temporary Variable���ֽ���ʱ������</a></li><li><a href="#7-remove-assigments-to-parameters�Ƴ��Բ����ĸ�ֵ">7. Remove Assigments to Parameters���Ƴ��Բ����ĸ�ֵ��</a></li><li><a href="#8-replace-method-with-method-object�Ժ�������ȡ������">8. Replace Method with Method Object���Ժ�������ȡ��������</a></li><li><a href="#9-subsititute-algorithn�滻�㷨">9. Subsititute Algorithn���滻�㷨��</a></li></ul></li><li><a href="#������-�ڶ���֮���������">������ �ڶ���֮���������</a><ul><li><a href="#1-move-method���ƺ���">1. Move Method�����ƺ�����</a></li><li><a href="#2-move-field�����ֶ�">2. Move Field�������ֶΣ�</a></li><li><a href="#3-extract-class������">3. Extract Class�������ࣩ</a></li><li><a href="#4-inline-class����������">4. Inline Class��������������</a></li><li><a href="#5-hide-delegate���ء�ί�й�ϵ��">5. Hide Delegate�����ء�ί�й�ϵ����</a></li><li><a href="#6-remove-middle-man�Ƴ��м���">6. Remove Middle Man���Ƴ��м��ˣ�</a></li><li><a href="#7-introduce-foreign-method������Ӻ���">7. Introduce Foreign Method��������Ӻ�����</a></li><li><a href="#8-introduce-local-extension���뱾����չ">8. Introduce Local Extension�����뱾����չ��</a></li></ul></li><li><a href="#�ڰ���-������֯����">�ڰ��� ������֯����</a><ul><li><a href="#1-self-encapsulate-field�Է�װ�ֶ�">1. Self Encapsulate Field���Է�װ�ֶΣ�</a></li><li><a href="#2-replace-data-value-with-object�Զ���ȡ������ֵ">2. Replace Data Value with Object���Զ���ȡ������ֵ��</a></li><li><a href="#3-change-value-to-reference��ֵ����ĳ����ö���">3. Change Value to Reference����ֵ����ĳ����ö���</a></li><li><a href="#4-change-reference-to-value�����ö����Ϊֵ����">4. Change Reference to value�������ö����Ϊֵ����</a></li><li><a href="#5-replace-array-with-object�Զ���ȡ������">5. Replace Array with Object���Զ���ȡ�����飩</a></li><li><a href="#6-duplicate-observed-data��ֵ�����������ݡ�">6. Duplicate Observed Data����ֵ�����������ݡ���</a></li><li><a href="#7-change-unidirectional-association-to-bidirectional�����������Ϊ˫�����">7. Change Unidirectional Association to Bidirectional�������������Ϊ˫�������</a></li><li><a href="#8-change-bidirectional-association-to-unidirectional��˫�������Ϊ�������">8. Change Bidirectional Association to Unidirectional����˫�������Ϊ���������</a></li><li><a href="#9-replace-magic-number-with-symbolic-constant�����泣��ȡ��ħ����">9. Replace Magic Number with Symbolic Constant�������泣��ȡ��ħ������</a></li><li><a href="#10-encapsulate-field��װ�ֶ�">10. Encapsulate Field����װ�ֶΣ�</a></li><li><a href="#11-encapsulate-collection��װ����">11. Encapsulate Collection����װ���ϣ�</a></li><li><a href="#12-replace-record-with-data-class��������ȡ����¼">12. Replace Record with Data Class����������ȡ����¼��</a></li><li><a href="#13-replace-type-code-with-class����ȡ��������">13. Replace Type Code with Class������ȡ�������룩</a></li><li><a href="#14-replace-type-code-with-subcalsses������ȡ��������">14. Replace Type Code with Subcalsses��������ȡ�������룩</a></li><li><a href="#15-replace-type-code-with-statestrategy-��-statestrategy-ȡ��������">15. Replace Type Code with State/Strategy ���� State/Strategy ȡ�������룩</a></li><li><a href="#16-replace-subclass-with-fields���ֶ�ȡ������">16. Replace Subclass with Fields�����ֶ�ȡ�����ࣩ</a></li></ul></li><li><a href="#�ھ���-���������ʽ">�ھ��� ���������ʽ</a><ul><li><a href="#1-decompose-conditional�ֽ��������ʽ">1. Decompose Conditional���ֽ��������ʽ��</a></li><li><a href="#2-consolidate-conditional-expression�ϲ��������ʽ">2. Consolidate Conditional Expression���ϲ��������ʽ��</a></li><li><a href="#3-consolidate-duplicate-conditional-fragments-�ϲ��ظ�������Ƭ��">3. Consolidate Duplicate Conditional Fragments ���ϲ��ظ�������Ƭ�Σ�</a></li><li><a href="#4-remove-control-flag�Ƴ����Ʊ��">4. Remove Control Flag���Ƴ����Ʊ�ǣ�</a></li><li><a href="#5-replace-nested-conditional-with-guard-clauses-�������ȡ��Ƕ���������ʽ">5. Replace Nested Conditional with Guard Clauses ���������ȡ��Ƕ���������ʽ��</a></li><li><a href="#6-replace-conditional-with-polymorphism-�Զ�̬ȡ���������ʽ">6. Replace Conditional with Polymorphism ���Զ�̬ȡ���������ʽ��</a></li><li><a href="#7-introduce-null-object����null����">7. Introduce Null Object������Null����</a></li><li><a href="#8-introduce-assertion�������">8. Introduce Assertion��������ԣ�</a></li></ul></li><li><a href="#��ʮ��-�򻯺�������">��ʮ�� �򻯺�������</a><ul><li><a href="#1-rename-method��������">1. Rename Method������������</a></li><li><a href="#2-add-parameter��Ӳ���">2. Add Parameter����Ӳ�����</a></li><li><a href="#3-remove-parameter�Ƴ�����">3. Remove Parameter���Ƴ�������</a></li><li><a href="#4-separate-query-from-modifier����ѯ�������޸ĺ�������">4. Separate Query from Modifier������ѯ�������޸ĺ������룩</a></li><li><a href="#5-parameterize-method���Я������">5. Parameterize Method�����Я��������</a></li><li><a href="#6-replace-parameter-with-explicit-methods����ȷ����ȡ������">6. Replace Parameter with Explicit Methods������ȷ����ȡ��������</a></li><li><a href="#7-preserve-whole-object���ֶ�������">7. Preserve Whole Object�����ֶ���������</a></li><li><a href="#8-replace-parameter-with-methods�Ժ���ȡ������">8. Replace Parameter with Methods���Ժ���ȡ��������</a></li><li><a href="#9-introduce-parameter-object�����������">9. Introduce Parameter Object�������������</a></li><li><a href="#10-remove-setting-method�Ƴ���ֵ����">10. Remove Setting Method���Ƴ���ֵ������</a></li><li><a href="#11-hide-method���غ���">11. Hide Method�����غ�����</a></li><li><a href="#12-replace-constructor-with-factory-method-�Թ�������ȡ�����캯��">12. Replace Constructor with Factory Method ���Թ�������ȡ�����캯����</a></li><li><a href="#13-encapsulate-downcast��װ����ת��">13. Encapsulate Downcast����װ����ת�ͣ�</a></li><li><a href="#14-replace-error-code-with-exception-���쳣ȡ��������">14. Replace Error Code with Exception �����쳣ȡ�������룩</a></li><li><a href="#15-replace-exception-with-test�Բ���ȡ���쳣">15. Replace Exception with Test���Բ���ȡ���쳣��</a></li></ul></li><li><a href="#��ʮһ��-���������ϵ">��ʮһ�� ���������ϵ</a><ul><li><a href="#1-pull-up-field�ֶ�����">1. Pull Up Field���ֶ����ƣ�</a></li><li><a href="#2-pull-up-method��������">2. Pull Up Method���������ƣ�</a></li><li><a href="#3-pull-up-constructor-body���캯����������">3. Pull Up Constructor Body�����캯���������ƣ�</a></li><li><a href="#4-push-down-method��������">4. Push Down Method���������ƣ�</a></li><li><a href="#5-push-down-field�ֶ�����">5. Push Down Field���ֶ����ƣ�</a></li><li><a href="#6-extract-subclass��������">6. Extract Subclass���������ࣩ</a></li><li><a href="#7-extract-superclass��������">7. Extract Superclass���������ࣩ</a></li><li><a href="#8-extract-interface�����ӿ�">8. Extract Interface�������ӿڣ�</a></li><li><a href="#9-collapse-hierarchy�۵��̳���ϵ">9. Collapse Hierarchy���۵��̳���ϵ��</a></li><li><a href="#10-form-template-method����ģ�庯��">10. Form Template Method������ģ�庯����</a></li><li><a href="#11-replace-inheritance-with-delegation-��ί��ȡ���̳�">11. Replace Inheritance with Delegation ����ί��ȡ���̳У�</a></li><li><a href="#12-replace-delegation-with-inheritance-�Լ̳�ȡ��ί��">12. Replace Delegation with Inheritance ���Լ̳�ȡ��ί�У�</a><!-- GFM-TOC --></li></ul></li></ul><h1 id="��һ��-��һ������"><a href="#��һ��-��һ������" class="headerlink" title="��һ�� ��һ������"></a>��һ�� ��һ������</h1><p>����㷢���Լ���ҪΪ�������һ�����ԣ�������ṹʹ���޷��ܷ���ش��Ŀ�ģ��Ǿ����ع��������</p><p>���ع�ǰ����Ҫ�ȹ����ÿɿ��Ĳ��Ի�����ȷ����ȫ���ع���</p><p>�ع�����΢С�Ĳ����޸ĳ���������´��󣬺����ױ���Է�������</p><p><strong>��������</strong></p><p>ӰƬ�����Ӧ�ó��򣬰��������ࣺMovie��Rental �� Customer��Rental �������޵� Movie �Լ�������</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/a758c8b2-0ac7-438f-90c2-3923ffad6328.png" alt=""></p><p>�ʼ��ʵ���ǰ����еļƷѴ��붼���� Customer ���У��ڱ仯����ʱ����Ҫ���ⲿ�ִ�����и��ġ��������п��ܷ����ı仯�У�һ�����ļƷѷ�ʽ�����ı䣻����µĵ�Ӱ��𡣿��ǵ��ƷѴ�����ܴ����ڶദ��һ�������ı�ʱ������Ҫ�����мƷѴ�������޸ġ�</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/9e5e3cc6-3107-4051-b584-8ff077638fe6.png" alt=""></p><p>�����Ǽ̳� Movie �Ķ�̬��������������һ�� Movie �����ᶯ̬�ı䣬������ַ��������С�</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/2a502516-5d34-4eef-8f39-916298a60035.png" alt=""></p><p>���� Price ����Ӧ�����Ϣ��ͨ����ϵķ�ʽ�� Movie �м��� Price ��������ÿ�����ļƷѷ�ʽ����װ�ڲ�ͬ�� Price �����У����� Movie ����Ҳ���Զ�̬�ı�������ַ�ʽ���Ժܺõ���Ӧ�����ᵽ�ı仯��</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/c02a83b8-a6b9-4d00-a509-6f0516beaf5e.png" alt=""></p><p>�ع����ʱ��ͼ����ͼ��</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/95f4559c-3d2a-4176-b365-4fbc46c76cf1.png" alt=""></p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/293b9326-02fc-4ad8-8c79-b4a7b5ba60d3.png" alt=""></p><h1 id="�ڶ���-�ع�ԭ��"><a href="#�ڶ���-�ع�ԭ��" class="headerlink" title="�ڶ��� �ع�ԭ��"></a>�ڶ��� �ع�ԭ��</h1><p>�ع��Ƕ�����ڲ��ṹ��һ�ֵ�����Ŀ�����ڲ��ı�����ɹ۲���Ϊ��ǰ���£�����������ԣ��������޸ĳɱ���</p><p>�ع��ĺô����Ľ������ƣ�ʹ�����������⣻�����ҵ� bug����߱���ٶȡ�</p><p>���η��򣺵�һ����ĳ����ʱֻ��ȥ�����ڶ�������������ʱ����ȥ�����������������Ƶ��£���Ӧ���ع���</p><p>��Ӳ����ع����������ѧ�еĺܶ��������ͨ������һ����Ӳ����������Ӳ�������¼�ֵ�������߼������ֿ�������ͼ��ʵ�֣�����仯����װ�����߼����ع��������Ϊ���ʵ���λ�ò����Ӳ��Լ��ڲ���Ҫʱ�Ƴ���Ӳ㡣</p><p>�޸Ľӿڣ����Ա���ɽӿڣ��þɽӿ�ȥ�����½ӿڣ�����ʹ�� Java �ṩ�� @deprecation ���ɽӿڱ��Ϊ���á��������б�Ҫ����Ҫ�����ӿڣ����Ҳ�Ҫ���緢���ӿڡ�</p><p>�����д�����ڻ���ʱ��Ӧ����д�������ع���һ�����еİ취�ǣ��������װ��һ���������Ȼ��Ը����������д�����ع��ľ�����</p><p>��������޷�Ԥ����ƣ���Ϊ���������кܶ�仯���������ʼ�����ܶ�������������ǽ�ȥ���ع����Լ���ƣ��ع���һ���򵥵�����Ͻ������޸ĸģ����仯����ʱ����һ�����ķ�ʽȥӦ�Ա仯�������������õ���ơ�</p><p>Ϊ��������������⣬�ع����ܻᵼ�����ܼ��͡��ڱ�д����ʱ�����ö����ܹ����ע��ֻ������������Ż��׶��ٿ����������⡣Ӧ��ֻ��ע�ؼ���������ܣ���Ϊֻ��һС���ֵĴ����ǹؼ����롣</p><h1 id="������-����L�ζ��"><a href="#������-����L�ζ��" class="headerlink" title="������ ����Ļ�ζ��"></a>������ ����Ļ�ζ��</h1><h2 id="1-Duplicated-Code���ظ����룩"><a href="#1-Duplicated-Code���ظ����룩" class="headerlink" title="1. Duplicated Code���ظ����룩"></a>1. Duplicated Code���ظ����룩</h2><p>ͬһ�����������������ͬ���ʽ������ Extract Method ��ȡ���ظ����룻</p><p>������Ϊ�ֵܵ����ຬ����ͬ�ı��ʽ����ʹ�� Extract Method��Ȼ�����ȡ�����ĺ��� Pull Up Method ���볬�ࡣ</p><p>���ֻ�ǲ�����ͬ���� Extract Method ��������Ʋ��ֺͲ��첿�֣�Ȼ��ʹ�� Form Template Method ����ģ�巽�����ģʽ��</p><p>�������������ص�������ظ����룬��ʹ�� Extract Class �������ظ�������ȡ��һ���������С�</p><h2 id="2-Long-Method������������"><a href="#2-Long-Method������������" class="headerlink" title="2. Long Method������������"></a>2. Long Method������������</h2><p>��Ӳ�ļ�ֵ����������������������ѡ��������</p><p>�ֽ⺯����ԭ�򣺵���Ҫ��ע����˵��һ�δ���ʱ������Ҫ���ⲿ�ִ���д��һ�������ĺ����С�</p><p>Extract Method ��Ѻܶ��������ʱ���������������������� Replace Temp with Query ������ʱ������Introduce Parameter Object �� Preserve Whole Object ���Խ������Ĳ����б�ø���ࡣ</p><p>������ѭ������Ҳ��Ҫ��ȡ���µĺ����С�</p><h2 id="3-Large-Class��������ࣩ"><a href="#3-Large-Class��������ࣩ" class="headerlink" title="3. Large Class��������ࣩ"></a>3. Large Class��������ࣩ</h2><p>����������˹������飬��Ҫʹ�� Extract Class �� Extract Subclass��</p><p>��ȷ���ͻ������ʹ�����ǣ�Ȼ������ Extract Interface Ϊÿһ��ʹ�÷�ʽ��ȡ��һ���ӿڡ�</p><h2 id="4-Long-Parameter-List�������Ĳ����У�"><a href="#4-Long-Parameter-List�������Ĳ����У�" class="headerlink" title="4. Long Parameter List�������Ĳ����У�"></a>4. Long Parameter List�������Ĳ����У�</h2><h2 id="5-Divergent-Change����ɢʽ�仯��"><a href="#5-Divergent-Change����ɢʽ�仯��" class="headerlink" title="5. Divergent Change����ɢʽ�仯��"></a>5. Divergent Change����ɢʽ�仯��</h2><p>һ�����ܵ����ֱ仯��Ӱ�죻</p><p>���ĳ��ԭ��ı仯��ʹ�� Extract Class ����������һ�����С�</p><h2 id="6-Shotgun-Surgery��ɢ��ʽ�޸g�"><a href="#6-Shotgun-Surgery��ɢ��ʽ�޸g�" class="headerlink" title="6. Shotgun Surgery��ɢ��ʽ�޸ģ�"></a>6. Shotgun Surgery��ɢ��ʽ�޸ģ�</h2><p>һ���仯���������޸ģ�</p><p>ʹ�� Move Method �� Move Field ��������Ҫ�޸ĵش���ŵ�ͬһ�����С�</p><h2 id="7-Feature-Envy��������ᣩ"><a href="#7-Feature-Envy��������ᣩ" class="headerlink" title="7. Feature Envy��������ᣩ"></a>7. Feature Envy��������ᣩ</h2><p>һ��������ĳ�������Ȥ���ڶ��Լ����������Ȥ��ͨ���ǹ����������������ݡ�</p><p>ʹ�� Move Method �����Ƶ���ȥ�ĵط�������Զ���඼�� Feature Envy������ Extract Method ��ȡ�����������</p><h2 id="8-Data-Clumps���������t�"><a href="#8-Data-Clumps���������t�" class="headerlink" title="8. Data Clumps���������ţ�"></a>8. Data Clumps���������ţ�</h2><p>��Щ���ݾ���һ����֣����������������ͬ���ֶΡ���ຯ������ͬ�Ĳ�����ʹ�� Extract Class �����Ƿ���һ��</p><h2 id="9-Primitive-Obsession����������ƫִ��"><a href="#9-Primitive-Obsession����������ƫִ��" class="headerlink" title="9. Primitive Obsession����������ƫִ��"></a>9. Primitive Obsession����������ƫִ��</h2><p>ʹ����������ʹ�û������͸��ã�ʹ�� Replace Data Value with Object ������ֵ�滻Ϊ����</p><h2 id="10-Switch-Statements��switch-�������"><a href="#10-Switch-Statements��switch-�������" class="headerlink" title="10. Switch Statements��switch �������"></a>10. Switch Statements��switch �������</h2><h2 id="11-Parallel-Inheritance-Hierarchies��ƽ�м̳���ϵ��"><a href="#11-Parallel-Inheritance-Hierarchies��ƽ�м̳���ϵ��" class="headerlink" title="11. Parallel Inheritance Hierarchies��ƽ�м̳���ϵ��"></a>11. Parallel Inheritance Hierarchies��ƽ�м̳���ϵ��</h2><p>ÿ��Ϊĳ��������һ�����࣬����ҲΪ��һ������Ӧ����һ�����ࡣ</p><p>���ֽ�������һЩ�ظ��ԣ������ظ��Ե�һ����ԣ���һ���̳���ϵ��ʵ��������һ���̳���ϵ��ʵ����</p><h2 id="12-Lazy-Class�������ࣩ"><a href="#12-Lazy-Class�������ࣩ" class="headerlink" title="12. Lazy Class�������ࣩ"></a>12. Lazy Class�������ࣩ</h2><p>���һ����û�����㹻��Ĺ�������Ӧ����ʧ��</p><h2 id="13-Speculative-Generality�������̸δ���ԣ�"><a href="#13-Speculative-Generality�������̸δ���ԣ�" class="headerlink" title="13. Speculative Generality�������̸δ���ԣ�"></a>13. Speculative Generality�������̸δ���ԣ�</h2><p>��Щ��������������δ�����ܷ����ı仯���������������ϵͳ��������ά��������Ԥ��δ�����ܷ����ĸı�ܿ��ܺ��ʼ�������෴����ˣ�������Ǳ�Ҫ���Ͳ�Ҫ��ô����</p><h2 id="14-Temporary-Field�������Ի����ʱ�ֶΣ�"><a href="#14-Temporary-Field�������Ի����ʱ�ֶΣ�" class="headerlink" title="14. Temporary Field�������Ի����ʱ�ֶΣ�"></a>14. Temporary Field�������Ի����ʱ�ֶΣ�</h2><p>ĳ���ֶν�Ϊĳ���ض�������裬�����Ĵ��벻����⣬��Ϊͨ����Ϊ����������ʱ����Ҫ���������ֶΡ�</p><p>�������ֶκ��ض�����Ĵ������ʹ�� Extract Class ������һ���������С�</p><h2 id="15-Message-Chains��������ϵ���Ϣ����"><a href="#15-Message-Chains��������ϵ���Ϣ����" class="headerlink" title="15. Message Chains��������ϵ���Ϣ����"></a>15. Message Chains��������ϵ���Ϣ����</h2><p>һ������������һ������Ȼ���������������һ������Ȼ��…���������Ϣ�����������ַ�ʽ����ζ�ſͻ����뽫������Ĺ�ϵ������ϡ�</p><p>���ú��������ú���ί����һ������������</p><h2 id="16-Middle-Man���м��ˣ�"><a href="#16-Middle-Man���м��ˣ�" class="headerlink" title="16. Middle Man���м��ˣ�"></a>16. Middle Man���м��ˣ�</h2><p>�м��˸�����ί�и����Ĳ��������һ�������й���ĺ�����ί�и������࣬�Ǿ��ǹ�������ί�У�Ӧ�� Remove Middle Man��ֱ���븺��Ķ���򽻵���</p><h2 id="17-Inappropriate-Intimacy�����n�ϵ��"><a href="#17-Inappropriate-Intimacy�����n�ϵ��" class="headerlink" title="17. Inappropriate Intimacy�����ǹ�ϵ��"></a>17. Inappropriate Intimacy�����ǹ�ϵ��</h2><p>������������ܣ�����̫��ʱ��ȥ̽�ֱ˴˵� private �ɷ֡�</p><h2 id="18-Alernative-Classes-with-Different-Interfaces������ͬ�����ࣩ"><a href="#18-Alernative-Classes-with-Different-Interfaces������ͬ�����ࣩ" class="headerlink" title="18. Alernative Classes with Different Interfaces������ͬ�����ࣩ"></a>18. Alernative Classes with Different Interfaces������ͬ�����ࣩ</h2><h2 id="19-Incomplete-Library-Class������������⣩"><a href="#19-Incomplete-Library-Class������������⣩" class="headerlink" title="19. Incomplete Library Class������������⣩"></a>19. Incomplete Library Class������������⣩</h2><p>��������߲�������Ƴ���������⣬��������Ҫ��������һЩ�޸�ʱ������ʹ���������ַ��������ֻ���޸�һ����������ʹ�� Introduce Foreign Method�����Ҫ���һ��Ѷ�����Ϊ��ʹ�� Introduce Local Extension��</p><h2 id="20-Data-Class�����o������ࣩ"><a href="#20-Data-Class�����o������ࣩ" class="headerlink" title="20. Data Class�����ɵ������ࣩ"></a>20. Data Class�����ɵ������ࣩ</h2><p>��ֻӵ��һЩ�����ֶΡ�</p><p>�ҳ��ֶ�ʹ�õĵط���Ȼ�����Ӧ�Ĳ����Ƶ� Data Class �С�</p><h2 id="21-Refused-Bequest�����ܾ���������"><a href="#21-Refused-Bequest�����ܾ���������" class="headerlink" title="21. Refused Bequest�����ܾ���������"></a>21. Refused Bequest�����ܾ���������</h2><p>����̳г�������к��������ݣ�������ֻ��Ҫһ���֡�</p><p>Ϊ�����½�һ���ֵ��࣬����Ҫ�ĺ���������ʹ�� Push Down Method �� Push Down Field ���Ƹ��Ǹ��ֵܡ�</p><h2 id="22-Comments�������ע�ͣ�"><a href="#22-Comments�������ע�ͣ�" class="headerlink" title="22. Comments�������ע�ͣ�"></a>22. Comments�������ע�ͣ�</h2><p>ʹ�� Extract Method ��������Ҫע�͵Ĳ��֣�Ȼ���ú����������ͺ�������Ϊ��</p><h1 id="������-����������ϵ"><a href="#������-����������ϵ" class="headerlink" title="������ ����������ϵ"></a>������ ����������ϵ</h1><p>Java ����ʹ�� Junit ���е�Ԫ���ԡ�</p><p>��Ԫ���ԵĶ�������ķ����������ܲ��Կͻ��ĽǶȱ�֤����������С�</p><p>Ӧ�����в��Կ��ܳ���ı߽�������</p><h1 id="������-�ع��б�"><a href="#������-�ع��б�" class="headerlink" title="������ �ع��б�"></a>������ �ع��б�</h1><p>С��ǰ����Ƶ�����ԡ�</p><h1 id="������-������֯����"><a href="#������-������֯����" class="headerlink" title="������ ������֯����"></a>������ ������֯����</h1><h2 id="1-Extract-Method������������"><a href="#1-Extract-Method������������" class="headerlink" title="1. Extract Method������������"></a>1. Extract Method������������</h2><p>����δ���Ž�һ�����������У����ú������ƽ��͸ú�������;��</p><h2 id="2-Inline-Method������������"><a href="#2-Inline-Method������������" class="headerlink" title="2. Inline Method������������"></a>2. Inline Method������������</h2><p>һ�������ı���������ͬ������׶���</p><p>�ں������õ���뺯�����壬Ȼ���Ƴ��ú�����</p><h2 id="3-Inline-Temp��������ʱ������"><a href="#3-Inline-Temp��������ʱ������" class="headerlink" title="3. Inline Temp��������ʱ������"></a>3. Inline Temp��������ʱ������</h2><p>һ����ʱ������ֻ���򵥱��ʽ��ֵһ�Σ����������������ع��ַ���</p><p>�����жԸñ����������滻Ϊ������ֵ���Ǹ����ʽ����</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">double</span> basePrice = anOrder.basePrice();</span><br><span class="line"><span class="keyword">return</span> basePrice &gt; <span class="number">1000</span>;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> anOrder.basePrice() &gt; <span class="number">1000</span>;</span><br></pre></td></tr></table></figure><h2 id="4-Replace-Temp-with-Query���Բ�ѯȡ����ʱ������"><a href="#4-Replace-Temp-with-Query���Բ�ѯȡ����ʱ������" class="headerlink" title="4. Replace Temp with Query���Բ�ѯȡ����ʱ������"></a>4. Replace Temp with Query���Բ�ѯȡ����ʱ������</h2><p>����ʱ��������ĳһ���ʽ������������������ʽ������һ�����������У������ж���ʱ���������õ��滻Ϊ���º����ĵ��á�Replace Temp with Query ������ Extract Method ֮ǰ�ز����ٵ�һ�����裬��Ϊ�ֲ�������ʹ��������������</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">double</span> basePrice = quantity * itemPrice;</span><br><span class="line"><span class="keyword">if</span>(basePrice &gt; <span class="number">1000</span>)</span><br><span class="line">    <span class="keyword">return</span> basePrice * <span class="number">0.95</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="keyword">return</span> basePrice * <span class="number">0.98</span>;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(basePrice() &gt; <span class="number">1000</span>)</span><br><span class="line">    <span class="keyword">return</span> basePrice() * <span class="number">0.95</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="keyword">return</span> basePrice() * <span class="number">0.98</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">basePrice</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> quantity * itemPrice;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-Introduce-Explaining-Variable��������ͱ�����"><a href="#5-Introduce-Explaining-Variable��������ͱ�����" class="headerlink" title="5. Introduce Explaining Variable��������ͱ�����"></a>5. Introduce Explaining Variable��������ͱ�����</h2><p>�����ӱ��ʽ��������һ���֣��Ľ���Ž�һ����ʱ�������Դ˱������������ͱ��ʽ��;��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>((platform.toUpperCase().indexOf(<span class="string">"MAC"</span>) &gt; -<span class="number">1</span>) &amp;&amp;</span><br><span class="line">  (browser.toUpperCase().indexOf(<span class="string">"IE"</span>) &gt; -<span class="number">1</span>) &amp;&amp;</span><br><span class="line">  wasInitialized() &amp;&amp; resize &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="comment">// do something</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span> <span class="keyword">boolean</span> isMacOS = platform.toUpperCase().indexOf(<span class="string">"MAC"</span>) &gt; -<span class="number">1</span>;</span><br><span class="line"><span class="keyword">final</span> <span class="keyword">boolean</span> isIEBrower = browser.toUpperCase().indexOf(<span class="string">"IE"</span>) &gt; -<span class="number">1</span>;</span><br><span class="line"><span class="keyword">final</span> <span class="keyword">boolean</span> wasResized = resize &gt; <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(isMacOS &amp;&amp; isIEBrower &amp;&amp; wasInitialized() &amp;&amp; wasResized) &#123;</span><br><span class="line">    <span class="comment">// do something</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-Split-Temporary-Variable���ֽ���ʱ������"><a href="#6-Split-Temporary-Variable���ֽ���ʱ������" class="headerlink" title="6. Split Temporary Variable���ֽ���ʱ������"></a>6. Split Temporary Variable���ֽ���ʱ������</h2><p>ĳ����ʱ��������ֵ����һ�Σ����Ȳ���ѭ��������Ҳ���������ռ���������</p><p>���ÿ�θ�ֵ������һ����������Ӧ����ʱ������ÿ����ʱ����ֻ�е�һ�����Ρ�</p><h2 id="7-Remove-Assigments-to-Parameters���Y��Բ����ĸ�ֵ��"><a href="#7-Remove-Assigments-to-Parameters���Y��Բ����ĸ�ֵ��" class="headerlink" title="7. Remove Assigments to Parameters���Ƴ��Բ����ĸ�ֵ��"></a>7. Remove Assigments to Parameters���Ƴ��Բ����ĸ�ֵ��</h2><p>��һ����ʱ����ȡ���Ըò����ĸ�ֵ��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">discount</span> <span class="params">(<span class="keyword">int</span> inputVal, <span class="keyword">int</span> quentity, <span class="keyword">int</span> yearToDate)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (inputVal &gt; <span class="number">50</span>) inputVal -= <span class="number">2</span>;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">discount</span> <span class="params">(<span class="keyword">int</span> inputVal, <span class="keyword">int</span> quentity, <span class="keyword">int</span> yearToDate)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> result = inputVal;</span><br><span class="line">    <span class="keyword">if</span> (inputVal &gt; <span class="number">50</span>) result -= <span class="number">2</span>;</span><br></pre></td></tr></table></figure><h2 id="8-Replace-Method-with-Method-Object���Ժ�������ȡ��������"><a href="#8-Replace-Method-with-Method-Object���Ժ�������ȡ��������" class="headerlink" title="8. Replace Method with Method Object���Ժ�������ȡ��������"></a>8. Replace Method with Method Object���Ժ�������ȡ��������</h2><p>����һ�����ͺ������� Extract Method ʱ�����ڰ����˾ֲ�����ʹ�ú��ѽ��иò�����</p><p>����������Ž�һ�����������У����һ���ֲ������ͳ��˶����ڵ��ֶΡ�Ȼ�������ͬһ�������н�������ͺ����ֽ�Ϊ���С�ͺ�����</p><h2 id="9-Subsititute-Algorithn���滻�㷨��"><a href="#9-Subsititute-Algorithn���滻�㷨��" class="headerlink" title="9. Subsititute Algorithn���滻�㷨��"></a>9. Subsititute Algorithn���滻�㷨��</h2><h1 id="������-�ڶ���֮���������"><a href="#������-�ڶ���֮���������" class="headerlink" title="������ �ڶ���֮���������"></a>������ �ڶ���֮���������</h1><h2 id="1-Move-Method�����ƺ�����"><a href="#1-Move-Method�����ƺ�����" class="headerlink" title="1. Move Method�����ƺ�����"></a>1. Move Method�����ƺ�����</h2><p>���е�ĳ����������һ������и��ཻ�������ú��߻��߱����ߵ��á�</p><p>������������Ƶ���һ�����С�</p><h2 id="2-Move-Field�������ֶΣ�"><a href="#2-Move-Field�������ֶΣ�" class="headerlink" title="2. Move Field�������ֶΣ�"></a>2. Move Field�������ֶΣ�</h2><p>���е�ĳ���ֶα���һ���������õ���������õ���ָ����ȡֵ��ֵ������Ӧ���Ѹ��ֶ��Ƶ���һ�����С�</p><h2 id="3-Extract-Class�������ࣩ"><a href="#3-Extract-Class�������ࣩ" class="headerlink" title="3. Extract Class�������ࣩ"></a>3. Extract Class�������ࣩ</h2><p>ĳ��������Ӧ���������������¡�</p><p>Ӧ������һ�����࣬����ص��ֶκͺ����Ӿ�����Ƶ����ࡣ</p><h2 id="4-Inline-Class��������������"><a href="#4-Inline-Class��������������" class="headerlink" title="4. Inline Class��������������"></a>4. Inline Class��������������</h2><p>�� Extract Class �෴��</p><h2 id="5-Hide-Delegate�����ء�ί�й�ϵ����"><a href="#5-Hide-Delegate�����ء�ί�й�ϵ����" class="headerlink" title="5. Hide Delegate�����ء�ί�й�ϵ����"></a>5. Hide Delegate�����ء�ί�й�ϵ����</h2><p>��������ĺ���������ί�й�ϵ��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">    Department department;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Department <span class="title">getDepartment</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> department;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Department</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Person manager;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Person <span class="title">getManager</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> manager;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>����ͻ�ϣ��֪��ĳ�˵ľ�����˭�������� Department ���������ͶԿͻ���¶�� Department �Ĺ���ԭ��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Person manager = john.getDepartment().getManager();</span><br></pre></td></tr></table></figure><p>ͨ��Ϊ Peron ����һ����������������ί�й�ϵ��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Person <span class="title">getManager</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> department.getManager();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-Remove-Middle-Man���Y��м��ˣ�"><a href="#6-Remove-Middle-Man���Y��м��ˣ�" class="headerlink" title="6. Remove Middle Man���Ƴ��м��ˣ�"></a>6. Remove Middle Man���Ƴ��м��ˣ�</h2><p>�� Hide Delegate �෴����������Ҫ�Ƴ�ί�к������ÿͻ�ֱ�ӵ���ί���ࡣ</p><p>Hide Delegate �кܴ�ô����������Ĵ����ǣ�ÿ���ͻ�Ҫʹ���������������ʱ���ͱ����ڷ����������һ���򵥵�ί�к�����������ί�е�����Խ��Խ�࣬����������ȫ�����һ�����м��ˡ���</p><h2 id="7-Introduce-Foreign-Method��������Ӻ�����"><a href="#7-Introduce-Foreign-Method��������Ӻ�����" class="headerlink" title="7. Introduce Foreign Method��������Ӻ�����"></a>7. Introduce Foreign Method��������Ӻ�����</h2><p>��ҪΪ�ṩ����������һ�������������޷��޸�����ࡣ</p><p>�����ڿͻ����н���һ�����������Ե�һ������ʽ����һ���������ʵ�����ÿͻ�����Ϸ�����ʵ����</p><h2 id="8-Introduce-Local-Extension�����뱾����չ��"><a href="#8-Introduce-Local-Extension�����뱾����չ��" class="headerlink" title="8. Introduce Local Extension�����뱾����չ��"></a>8. Introduce Local Extension�����뱾����չ��</h2><p>�� Introduce Foreign Method Ŀ��һ�������� Introduce Local Extension ͨ�������µ�����ʵ�֡������ַ�ʽ��������߰�װ�࣬�������ͨ���̳�ʵ�֣���װ�����ͨ�����ʵ�֡�</p><h1 id="�ڰ���-������֯����"><a href="#�ڰ���-������֯����" class="headerlink" title="�ڰ��� ������֯����"></a>�ڰ��� ������֯����</h1><h2 id="1-Self-Encapsulate-Field���Է�װ�ֶΣ�"><a href="#1-Self-Encapsulate-Field���Է�װ�ֶΣ�" class="headerlink" title="1. Self Encapsulate Field���Է�װ�ֶΣ�"></a>1. Self Encapsulate Field���Է�װ�ֶΣ�</h2><p>Ϊ�ֶν���ȡֵ/��ֵ������������Щ�����������ֶΡ�ֻ�е���������ʳ����һ���ֶΣ������������н�������ֶη��ʸ�Ϊһ��������ֵ����ʹ�����ַ�ʽ������ֱ�ӷ����ֶεķ�ʽ������ˡ�</p><h2 id="2-Replace-Data-Value-with-Object���Զ���ȡ������ֵ��"><a href="#2-Replace-Data-Value-with-Object���Զ���ȡ������ֵ��" class="headerlink" title="2. Replace Data Value with Object���Զ���ȡ������ֵ��"></a>2. Replace Data Value with Object���Զ���ȡ������ֵ��</h2><p>�ڿ������ڣ��������ü򵥵��������ʾ�򵥵�������������ſ����Ľ��У�һЩ������������һЩ������Ϊ������һ��ʼ��ѵ绰�������ַ�������������ֵ绰������Ҫ����ʽ����������ȡ���š�֮���������Ϊ��</p><h2 id="3-Change-Value-to-Reference����ֵ����ĳ����o���"><a href="#3-Change-Value-to-Reference����ֵ����ĳ����o���" class="headerlink" title="3. Change Value to Reference����ֵ����ĳ����ö���"></a>3. Change Value to Reference����ֵ����ĳ����ö���</h2><p>���˴���ȵ�ʵ���滻Ϊͬһ���������Ҫ��һ����������������Ψһ���󣬹���������Ҫ����һ���Ѿ�����������б���Ҫ����һ������ʱ���Ȳ�������б����Ƿ��Ѿ����ڸö���������ڣ��򷵻��б��е�������󣻷����½�һ��������ӵ��б��У������ظö���</p><h2 id="4-Change-Reference-to-value�������o����Ϊֵ����"><a href="#4-Change-Reference-to-value�������o����Ϊֵ����" class="headerlink" title="4. Change Reference to value�������ö����Ϊֵ����"></a>4. Change Reference to value�������ö����Ϊֵ����</h2><p>�� Change Value to Reference �෴��ֵ�����и��ǳ���Ҫ�����ԣ����ǲ��ɱ�ģ����ɱ��ʾ���Ҫ�ı�������󣬱�����һ���µĶ������滻�ɶ��󣬶������޸ľɶ���</p><p>��ҪΪֵ����ʵ�� equals() �� hashCode() ����</p><h2 id="5-Replace-Array-with-Object���Զ���ȡ�����飩"><a href="#5-Replace-Array-with-Object���Զ���ȡ�����飩" class="headerlink" title="5. Replace Array with Object���Զ���ȡ�����飩"></a>5. Replace Array with Object���Զ���ȡ�����飩</h2><p>��һ�����飬���е�Ԫ�ظ��Դ���ͬ�Ķ�����</p><p>�Զ����滻���飬���������е�ÿ��Ԫ�أ���һ���ֶ�����ʾ���������������Ҳ��������⡣</p><h2 id="6-Duplicate-Observed-Data����ֵ�����������ݡ���"><a href="#6-Duplicate-Observed-Data����ֵ�����������ݡ���" class="headerlink" title="6. Duplicate Observed Data����ֵ�����������ݡ���"></a>6. Duplicate Observed Data����ֵ�����������ݡ���</h2><p>һЩ�������������� GUI �ؼ��У�����������Ҫ������Щ���ݡ�</p><p>�������ݸ�ֵ��һ����������У�����һ�� Oberver ģʽ������ͬ���������� GUI �����ڵ��ظ����ݡ�</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/e024bd7e-fb4e-4239-9451-9a6227f50b00.jpg" alt=""></p><h2 id="7-Change-Unidirectional-Association-to-Bidirectional�������������Ϊ˫�������"><a href="#7-Change-Unidirectional-Association-to-Bidirectional�������������Ϊ˫�������" class="headerlink" title="7. Change Unidirectional Association to Bidirectional�������������Ϊ˫�������"></a>7. Change Unidirectional Association to Bidirectional�������������Ϊ˫�������</h2><p>�������඼��Ҫ�Է�������ʱ������ʹ��˫�������</p><p>�������࣬�ֱ�Ϊ���� Order �Ϳͻ� Customer��Order ������ Customer��Customer Ҳ��Ҫ���� Order ���鿴�����ж������顣</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Order</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Customer customer;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCustomer</span><span class="params">(Customer customer)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>.customer != <span class="keyword">null</span>)</span><br><span class="line">            <span class="keyword">this</span>.customer.removeOrder(<span class="keyword">this</span>);</span><br><span class="line">        <span class="keyword">this</span>.customer = customer;</span><br><span class="line">        <span class="keyword">this</span>.customer.add(<span class="keyword">this</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Curstomer</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Set&lt;Order&gt; orders = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">removeOrder</span><span class="params">(Order order)</span></span>&#123;</span><br><span class="line">        orders.remove(order);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addOrder</span><span class="params">(Order order)</span></span>&#123;</span><br><span class="line">        orders.add(order);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ע�⵽�������� Curstomer �������ƹ�����ϵ��������ԭ���������ĸ��������ƹ�����ϵ�����ĳ�������������һ������Ĳ�������ô�ɺ��߸�����ƹ�����ϵ�������һ�Զ��ϵ�����ɵ�һ������һ�������ƹ�����ϵ��</p><h2 id="8-Change-Bidirectional-Association-to-Unidirectional����˫�������Ϊ���������"><a href="#8-Change-Bidirectional-Association-to-Unidirectional����˫�������Ϊ���������" class="headerlink" title="8. Change Bidirectional Association to Unidirectional����˫�������Ϊ���������"></a>8. Change Bidirectional Association to Unidirectional����˫�������Ϊ���������</h2><p>�� Change Unidirectional Association to Bidirectiona Ϊ��������</p><p>˫�����ά���ɱ��ߣ�����Ҳ��������⡣������˫�����Ӻ�������ɡ���ʬ���󡱣�ĳ���������Ѿ������ˣ�ȴ������ϵͳ�У���Ϊ�������û�û��ȫ����ȫ�����</p><h2 id="9-Replace-Magic-Number-with-Symbolic-Constant�������泣��ȡ��h������"><a href="#9-Replace-Magic-Number-with-Symbolic-Constant�������泣��ȡ��h������" class="headerlink" title="9. Replace Magic Number with Symbolic Constant�������泣��ȡ��ħ������"></a>9. Replace Magic Number with Symbolic Constant�������泣��ȡ��ħ������</h2><p>����һ������������������Ϊ���������������泣����λ���������</p><h2 id="10-Encapsulate-Field����װ�ֶΣ�"><a href="#10-Encapsulate-Field����װ�ֶΣ�" class="headerlink" title="10. Encapsulate Field����װ�ֶΣ�"></a>10. Encapsulate Field����װ�ֶΣ�</h2><p>public �ֶ�Ӧ����Ϊ private�����ṩ��Ӧ�ķ��ʺ�����</p><h2 id="11-Encapsulate-Collection����װ���ϣ�"><a href="#11-Encapsulate-Collection����װ���ϣ�" class="headerlink" title="11. Encapsulate Collection����װ���ϣ�"></a>11. Encapsulate Collection����װ���ϣ�</h2><p>�������ؼ��ϵ�һ��ֻ��������������������ṩ���/�Ƴ�����Ԫ�صĺ���������������ؼ������������û������޸ļ������ݶ�����ӵ����ȴһ����֪��</p><h2 id="12-Replace-Record-with-Data-Class����������ȡ����¼��"><a href="#12-Replace-Record-with-Data-Class����������ȡ����¼��" class="headerlink" title="12. Replace Record with Data Class����������ȡ����¼��"></a>12. Replace Record with Data Class����������ȡ����¼��</h2><h2 id="13-Replace-Type-Code-with-Class������ȡ�������룩"><a href="#13-Replace-Type-Code-with-Class������ȡ�������룩" class="headerlink" title="13. Replace Type Code with Class������ȡ�������룩"></a>13. Replace Type Code with Class������ȡ�������룩</h2><p>������һ����ֵ�����룬��������Ӱ�������Ϊ������һ�������滻����ֵ�����롣�������������� switch ����У���Ҫʹ�� Replace Conditional with Polymorphism ȥ�� switch�����ȱ������� Replace Type Code with Subcalss �� Replace Type Code with State/Strategy ȥ�������롣</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/27c2e0b3-8f95-453d-bedc-6398a8566ce9.jpg" alt=""></p><h2 id="14-Replace-Type-Code-with-Subcalsses��������ȡ�������룩"><a href="#14-Replace-Type-Code-with-Subcalsses��������ȡ�������룩" class="headerlink" title="14. Replace Type Code with Subcalsses��������ȡ�������룩"></a>14. Replace Type Code with Subcalsses��������ȡ�������룩</h2><p>��һ�����ɱ�������룬����Ӱ�������Ϊ��������ȡ����������롣</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/c41d3977-e0e7-4ee4-93e1-d84f1ae3e20e.jpg" alt=""></p><h2 id="15-Replace-Type-Code-with-State-Strategy-����-State-Strategy-ȡ�������룩"><a href="#15-Replace-Type-Code-with-State-Strategy-����-State-Strategy-ȡ�������룩" class="headerlink" title="15. Replace Type Code with State/Strategy ���� State/Strategy ȡ�������룩"></a>15. Replace Type Code with State/Strategy ���� State/Strategy ȡ�������룩</h2><p>��һ���ɱ�������룬����Ӱ�������Ϊ����״̬����ȡ�������롣</p><p>�� Replace Type Code with Subcalsses �������� Replace Type Code with State/Strategy ���������Ƕ�̬�ɱ�ģ�ǰ��ͨ���̳еķ�ʽ��ʵ�֣�����ͨ����ϵķ�ʽ��ʵ�֡���Ϊ������ɱ䣬���ͨ���̳еķ�ʽ��һ��һ�������������ı䣬��ô��Ҫ�ı����µĶ�����ȡ���ɶ��󣬶��ͻ������Ըı��µĶ��󡣵���ͨ����ϵķ�ʽ���ı����õ�״̬���Ǻ����׵ġ�</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/81fd1d6f-a3b2-4160-9a0a-1f7cb50ba440.jpg" alt=""></p><h2 id="16-Replace-Subclass-with-Fields�����ֶ�ȡ�����ࣩ"><a href="#16-Replace-Subclass-with-Fields�����ֶ�ȡ�����ࣩ" class="headerlink" title="16. Replace Subclass with Fields�����ֶ�ȡ�����ࣩ"></a>16. Replace Subclass with Fields�����ֶ�ȡ�����ࣩ</h2><p>���������Ψһ���ֻ�ڡ����س������ݡ��ĺ����ϡ�</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/f2e0cee9-ecdc-4a96-853f-d9f6a1ad6ad1.jpg" alt=""></p><h1 id="�ھ���-���������ʽ"><a href="#�ھ���-���������ʽ" class="headerlink" title="�ھ��� ���������ʽ"></a>�ھ��� ���������ʽ</h1><h2 id="1-Decompose-Conditional���ֽ��������ʽ��"><a href="#1-Decompose-Conditional���ֽ��������ʽ��" class="headerlink" title="1. Decompose Conditional���ֽ��������ʽ��"></a>1. Decompose Conditional���ֽ��������ʽ��</h2><p>����һ�����ӵ�������䣬���Դ� if��then��else ���������зֱ�����������������</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(data.befor(SUMMER_START) || data.after(SUMMER_END))</span><br><span class="line">    charge = quantity * winterRate + winterServiceCharge;</span><br><span class="line"><span class="keyword">else</span> charge = quantity * summerRate;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(notSummer(date))</span><br><span class="line">    charge = winterCharge(quantity);</span><br><span class="line"><span class="keyword">else</span> charge = summerCharge(quantity);</span><br></pre></td></tr></table></figure><h2 id="2-Consolidate-Conditional-Expression���ϲ��������ʽ��"><a href="#2-Consolidate-Conditional-Expression���ϲ��������ʽ��" class="headerlink" title="2. Consolidate Conditional Expression���ϲ��������ʽ��"></a>2. Consolidate Conditional Expression���ϲ��������ʽ��</h2><p>��һϵ���������ԣ����õ���ͬ�����</p><p>����Щ���Ժϲ�Ϊһ���������ʽ����������������ʽ������Ϊһ������������</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">disabilityAmount</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (seniority &lt; <span class="number">2</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (monthsDisabled &gt; <span class="number">12</span> ) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (isPartTime) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">disabilityAmount</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (isNotEligibleForDisability()) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-Consolidate-Duplicate-Conditional-Fragments-���ϲ��ظ�������T�Σ�"><a href="#3-Consolidate-Duplicate-Conditional-Fragments-���ϲ��ظ�������T�Σ�" class="headerlink" title="3. Consolidate Duplicate Conditional Fragments ���ϲ��ظ�������Ƭ�Σ�"></a>3. Consolidate Duplicate Conditional Fragments ���ϲ��ظ�������Ƭ�Σ�</h2><p>���������ʽ��ÿ����֧��������ͬ��һ�δ��롣</p><p>������ظ�������Ƶ��������ʽ֮�⡣</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (isSpecialDeal())&#123;</span><br><span class="line">    total = price * <span class="number">0.95</span>;</span><br><span class="line">    send();</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    total = price * <span class="number">0.98</span>;</span><br><span class="line">    send();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (isSpecialDeal()) &#123;</span><br><span class="line">    total = price * <span class="number">0.95</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    total = price * <span class="number">0.98</span>;</span><br><span class="line">&#125;</span><br><span class="line">send();</span><br></pre></td></tr></table></figure><h2 id="4-Remove-Control-Flag���Y����Ʊ�ae�"><a href="#4-Remove-Control-Flag���Y����Ʊ�ae�" class="headerlink" title="4. Remove Control Flag���Ƴ����Ʊ�ǣ�"></a>4. Remove Control Flag���Ƴ����Ʊ�ǣ�</h2><p>��һϵ�в������ʽ�У�ĳ���������С����Ʊ�ǡ������á�</p><p>�� break�� ��� return �����ȡ�����Ʊ�ǡ�</p><h2 id="5-Replace-Nested-Conditional-with-Guard-Clauses-���������ȡ��Ƕ���������ʽ��"><a href="#5-Replace-Nested-Conditional-with-Guard-Clauses-���������ȡ��Ƕ���������ʽ��" class="headerlink" title="5. Replace Nested Conditional with Guard Clauses ���������ȡ��Ƕ���������ʽ��"></a>5. Replace Nested Conditional with Guard Clauses ���������ȡ��Ƕ���������ʽ��</h2><p>���ĳ���������亱������Ӧ�õ����������������ڸ�����Ϊ��ʱ���̴Ӻ����з��أ������ĵ�����鳣������Ϊ������䡱��guard clauses����</p><p>�������ʽͨ�������ֱ�����ʽ����һ����ʽ�ǣ����з�֧������������Ϊ���ڶ�����ʽ���ǣ��������ʽ�ṩ�Ĵ���ֻ��һ����������Ϊ���������ǲ����������������ʹ�����������������������</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">getPayAmount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">double</span> result;</span><br><span class="line">    <span class="keyword">if</span> (isDead) result = deadAmount();</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (isSeparated) result = separatedAmount();</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (isRetired) result = retiredAmount();</span><br><span class="line">            <span class="keyword">else</span> result = normalPayAmount();</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">getPayAmount</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (isDead) <span class="keyword">return</span> deadAmount();</span><br><span class="line">    <span class="keyword">if</span> (isSeparated) <span class="keyword">return</span> separatedAmount();</span><br><span class="line">    <span class="keyword">if</span> (isRetired) <span class="keyword">return</span> retiredAmount();</span><br><span class="line">    <span class="keyword">return</span> normalPayAmount();</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="6-Replace-Conditional-with-Polymorphism-���Զ�̬ȡ���������ʽ��"><a href="#6-Replace-Conditional-with-Polymorphism-���Զ�̬ȡ���������ʽ��" class="headerlink" title="6. Replace Conditional with Polymorphism ���Զ�̬ȡ���������ʽ��"></a>6. Replace Conditional with Polymorphism ���Զ�̬ȡ���������ʽ��</h2><p>������������ʽ��ÿ����֧�Ž�һ�������ڵĸ�д�����У�Ȼ��ԭʼ��������Ϊ����������Ҫ��ʹ�� Replace Type Code with Subclass �� Replace Type Code with State/Strategy �������̳н����</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">getSpeed</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">switch</span> (type) &#123;</span><br><span class="line">        <span class="keyword">case</span> EUROPEAN:</span><br><span class="line">            <span class="keyword">return</span> getBaseSpeed();</span><br><span class="line">        <span class="keyword">case</span> AFRICAN:</span><br><span class="line">            <span class="keyword">return</span> getBaseSpeed()- getLoadFactor()* numberOfCoconuts;</span><br><span class="line">        <span class="keyword">case</span> NORWEGIAN_BLUE:</span><br><span class="line">            <span class="keyword">return</span> isNailed ? <span class="number">0</span> : getBaseSpeed(voltage);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"Should be unreachable"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/1c8432c8-2552-457f-b117-1da36c697221.jpg" alt=""></p><h2 id="7-Introduce-Null-Object������Null����"><a href="#7-Introduce-Null-Object������Null����" class="headerlink" title="7. Introduce Null Object������Null����"></a>7. Introduce Null Object������Null����</h2><p>�� null ֵ�滻Ϊ null �����������ĺô����ڣ�����Ҫѯ�ʶ����Ƿ�Ϊ�գ�ֱ�ӵ��þ��С�</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (customer == <span class="keyword">null</span>) plan = BillingPlan.basic();</span><br><span class="line"><span class="keyword">else</span> plan = customer.getPlan();</span><br></pre></td></tr></table></figure><h2 id="8-Introduce-Assertion��������ԣ�"><a href="#8-Introduce-Assertion��������ԣ�" class="headerlink" title="8. Introduce Assertion��������ԣ�"></a>8. Introduce Assertion��������ԣ�</h2><p>�Զ�����ȷ����ĳ�ּ��衣����ֻ�����ڿ��������У���Ʒ�����в����ж��ԡ�</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">getExpenseLimit</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// should have either expense limit or a primary project</span></span><br><span class="line">    <span class="keyword">return</span> (expenseLimit != NULL_EXPENSE) ? expenseLimit :  primaryProject.getMemberExpenseLimit();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">getExpenseLimit</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Assert.isTrue (expenseLimit != NULL_EXPENSE || primaryProject != <span class="keyword">null</span>);</span><br><span class="line">    <span class="keyword">return</span> (expenseLimit != NULL_EXPENSE) ? expenseLimit :  primaryProject.getMemberExpenseLimit();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="��ʮ��-�򻯺�������"><a href="#��ʮ��-�򻯺�������" class="headerlink" title="��ʮ�� �򻯺�������"></a>��ʮ�� �򻯺�������</h1><h2 id="1-Rename-Method������������"><a href="#1-Rename-Method������������" class="headerlink" title="1. Rename Method������������"></a>1. Rename Method������������</h2><p>ʹ�������ܽ��ͺ�������;��</p><h2 id="2-Add-Parameter����Ӳ�����"><a href="#2-Add-Parameter����Ӳ�����" class="headerlink" title="2. Add Parameter����Ӳ�����"></a>2. Add Parameter����Ӳ�����</h2><p>ʹ��������Ҫͨ�����û��ĳ����Ϣ��</p><h2 id="3-Remove-Parameter���Y�������"><a href="#3-Remove-Parameter���Y�������" class="headerlink" title="3. Remove Parameter���Ƴ�������"></a>3. Remove Parameter���Ƴ�������</h2><p>�� Add Parameter �෴�����õ��õķ�ʽ�����ĳ����Ϣ��</p><h2 id="4-Separate-Query-from-Modifier������ѯ�������޸l������룩"><a href="#4-Separate-Query-from-Modifier������ѯ�������޸l������룩" class="headerlink" title="4. Separate Query from Modifier������ѯ�������޸ĺ������룩"></a>4. Separate Query from Modifier������ѯ�������޸ĺ������룩</h2><p>ĳ�����������ض���״ֵ̬�����޸Ķ���״̬��</p><p>Ӧ������������ͬ�ĺ���������һ�������ѯ����һ�������޸ġ��κ��з���ֵ�ĺ���������Ӧ���п��õ��ĸ����á�</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getTotalOutstandingAndSetReadyForSummaries();</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">getTotalOutstanding();</span><br><span class="line">setReadyForSummaries();</span><br></pre></td></tr></table></figure><h2 id="5-Parameterize-Method�����Я��������"><a href="#5-Parameterize-Method�����Я��������" class="headerlink" title="5. Parameterize Method�����Я��������"></a>5. Parameterize Method�����Я��������</h2><p>��ɺ����������ƵĹ��������ں���������ȴ�����˲�ͬ��ֵ��</p><p>������һ�������Բ��������Щ��ͬ��ֵ��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">fivePercentRaise();</span><br><span class="line">tenPercentRaise();</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">raise(percentage);</span><br></pre></td></tr></table></figure><h2 id="6-Replace-Parameter-with-Explicit-Methods������ȷ����ȡ��������"><a href="#6-Replace-Parameter-with-Explicit-Methods������ȷ����ȡ��������" class="headerlink" title="6. Replace Parameter with Explicit Methods������ȷ����ȡ��������"></a>6. Replace Parameter with Explicit Methods������ȷ����ȡ��������</h2><p>��һ����������ȫȡ���ڲ���ֵ����ȡ��ͬ��Ϊ��</p><p>��Ըò�����ÿһ������ֵ������һ������������</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setValue</span><span class="params">(String name, <span class="keyword">int</span> value)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (name.equals(<span class="string">"height"</span>))&#123;</span><br><span class="line">        height = value;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (name.equals(<span class="string">"width"</span>))&#123;</span><br><span class="line">        width = value;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    Assert.shouldNeverReachHere();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setHeight</span><span class="params">(<span class="keyword">int</span> arg)</span></span>&#123;</span><br><span class="line">    height = arg;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">setWidth</span><span class="params">(<span class="keyword">int</span> arg)</span></span>&#123;</span><br><span class="line">    width = arg;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7-Preserve-Whole-Object�����ֶ���������"><a href="#7-Preserve-Whole-Object�����ֶ���������" class="headerlink" title="7. Preserve Whole Object�����ֶ���������"></a>7. Preserve Whole Object�����ֶ���������</h2><p>��ĳ��������ȡ�����ֵ����������Ϊĳһ�κ�������ʱ�Ĳ�����</p><p>��Ϊ������������</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> low = daysTempRange().getLow();</span><br><span class="line"><span class="keyword">int</span> high = daysTempRange().getHigh();</span><br><span class="line">withinPlan = plan.withinRange(low,high);</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">withinPlan = plan.withinRange(daysTempRange());</span><br></pre></td></tr></table></figure><h2 id="8-Replace-Parameter-with-Methods���Ժ���ȡ��������"><a href="#8-Replace-Parameter-with-Methods���Ժ���ȡ��������" class="headerlink" title="8. Replace Parameter with Methods���Ժ���ȡ��������"></a>8. Replace Parameter with Methods���Ժ���ȡ��������</h2><p>�������ĳ���������������ý����Ϊ���������ݸ���һ�������������ܸò����ĺ�������Ҳ�ܹ�����ǰһ��������</p><p>�ò���������ȥ���������������ֱ�ӵ���ǰһ��������</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> basePrice = _quantity * _itemPrice;</span><br><span class="line">discountLevel = getDiscountLevel();</span><br><span class="line"><span class="keyword">double</span> finalPrice = discountedPrice (basePrice, discountLevel);</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> basePrice = _quantity * _itemPrice;</span><br><span class="line"><span class="keyword">double</span> finalPrice = discountedPrice (basePrice);</span><br></pre></td></tr></table></figure><h2 id="9-Introduce-Parameter-Object�������������"><a href="#9-Introduce-Parameter-Object�������������" class="headerlink" title="9. Introduce Parameter Object�������������"></a>9. Introduce Parameter Object�������������</h2><p>ĳЩ�������Ǻ���Ȼ��ͬʱ���֣���Щ�������� Data Clumps��</p><p>��һ������ȡ����Щ������</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/08738dd0-ae8e-404a-ba78-a6b1b7d225b3.jpg" alt=""></p><h2 id="10-Remove-Setting-Method���Y���ֵ������"><a href="#10-Remove-Setting-Method���Y���ֵ������" class="headerlink" title="10. Remove Setting Method���Ƴ���ֵ������"></a>10. Remove Setting Method���Ƴ���ֵ������</h2><p>���е�ĳ���ֶ�Ӧ���ڶ��󴴽�ʱ����ֵ��Ȼ��Ͳ��ٸı䡣</p><p>ȥ����ֶε�������ֵ�������������ֶ���Ϊ final��</p><h2 id="11-Hide-Method�����غ�����"><a href="#11-Hide-Method�����غ�����" class="headerlink" title="11. Hide Method�����غ�����"></a>11. Hide Method�����غ�����</h2><p>��һ������������û�б������κ����õ���</p><p>����������޸�Ϊ private��</p><h2 id="12-Replace-Constructor-with-Factory-Method-���Թ�������ȡ�����캯����"><a href="#12-Replace-Constructor-with-Factory-Method-���Թ�������ȡ�����캯����" class="headerlink" title="12. Replace Constructor with Factory Method ���Թ�������ȡ�����캯����"></a>12. Replace Constructor with Factory Method ���Թ�������ȡ�����캯����</h2><p>ϣ���ڴ�������ʱ�����������򵥵Ľ���������</p><p>�����캯���滻Ϊ����������</p><h2 id="13-Encapsulate-Downcast����װ����ת�ͣ�"><a href="#13-Encapsulate-Downcast����װ����ת�ͣ�" class="headerlink" title="13. Encapsulate Downcast����װ����ת�ͣ�"></a>13. Encapsulate Downcast����װ����ת�ͣ�</h2><p>ĳ���������صĶ�����Ҫ�ɺ���������ִ������ת�ͣ�downcast����</p><p>������ת�Ͷ����Ƶ������С�</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Object <span class="title">lastReading</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> readings.lastElement();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">Reading <span class="title">lastReading</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> (Reading)readings.lastElement();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="14-Replace-Error-Code-with-Exception-�����쳣ȡ�������룩"><a href="#14-Replace-Error-Code-with-Exception-�����쳣ȡ�������룩" class="headerlink" title="14. Replace Error Code with Exception �����쳣ȡ�������룩"></a>14. Replace Error Code with Exception �����쳣ȡ�������룩</h2><p>ĳ����������һ���ض��Ĵ��룬���Ա�ʾĳ�ִ��������</p><p>�����쳣���쳣����ͨ����ʹ�����ֿ���ʹ�����������⡣</p><h2 id="15-Replace-Exception-with-Test���Բ���ȡ���쳣��"><a href="#15-Replace-Exception-with-Test���Բ���ȡ���쳣��" class="headerlink" title="15. Replace Exception with Test���Բ���ȡ���쳣��"></a>15. Replace Exception with Test���Բ���ȡ���쳣��</h2><p>���һ�������߿���Ԥ�ȼ������������׳���һ���쳣��</p><p>�޸ĵ����ߣ�ʹ���ڵ��ú���֮ǰ������顣</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">getValueForPeriod</span><span class="params">(<span class="keyword">int</span> periodNumber)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> values[periodNumber];</span><br><span class="line">    &#125; <span class="keyword">catch</span> (ArrayIndexOutOfBoundsException e) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">getValueForPeriod</span><span class="params">(<span class="keyword">int</span> periodNumber)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (periodNumber &gt;= values.length) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> values[periodNumber];</span><br></pre></td></tr></table></figure><h1 id="��ʮһ��-���������ϵ"><a href="#��ʮһ��-���������ϵ" class="headerlink" title="��ʮһ�� ���������ϵ"></a>��ʮһ�� ���������ϵ</h1><h2 id="1-Pull-Up-Field���ֶ����oi�"><a href="#1-Pull-Up-Field���ֶ����oi�" class="headerlink" title="1. Pull Up Field���ֶ����ƣ�"></a>1. Pull Up Field���ֶ����ƣ�</h2><p>��������ӵ����ͬ���ֶΡ�</p><p>�����ֶ��������ࡣ</p><h2 id="2-Pull-Up-Method���������oi�"><a href="#2-Pull-Up-Method���������oi�" class="headerlink" title="2. Pull Up Method���������ƣ�"></a>2. Pull Up Method���������ƣ�</h2><p>��Щ�������ڸ��������в�����ȫ��ͬ�Ľ����</p><p>���ú����������ࡣ</p><h2 id="3-Pull-Up-Constructor-Body�����캯���������oi�"><a href="#3-Pull-Up-Constructor-Body�����캯���������oi�" class="headerlink" title="3. Pull Up Constructor Body�����캯���������ƣ�"></a>3. Pull Up Constructor Body�����캯���������ƣ�</h2><p>���ڸ���������ӵ��һЩ���캯�������ǵı��弸����ȫһ�¡�</p><p>�ڳ������½�һ�����캯�����������๹�캯���е�������</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Manager</span> <span class="keyword">extends</span> <span class="title">Employee</span>...</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">public</span> <span class="title">Manager</span>(<span class="title">String</span> <span class="title">name</span>, <span class="title">String</span> <span class="title">id</span>, <span class="title">int</span> <span class="title">grade</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">    <span class="keyword">this</span>.id = id;</span><br><span class="line">    <span class="keyword">this</span>.grade = grade;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Manager</span><span class="params">(String name, String id, <span class="keyword">int</span> grade)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>(name, id);</span><br><span class="line">    <span class="keyword">this</span>.grade = grade;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-Push-Down-Method���������oi�"><a href="#4-Push-Down-Method���������oi�" class="headerlink" title="4. Push Down Method���������ƣ�"></a>4. Push Down Method���������ƣ�</h2><p>�����е�ĳ������ֻ�벿�������йء�</p><p>����������Ƶ���ص���Щ����ȥ��</p><h2 id="5-Push-Down-Field���ֶ����oi�"><a href="#5-Push-Down-Field���ֶ����oi�" class="headerlink" title="5. Push Down Field���ֶ����ƣ�"></a>5. Push Down Field���ֶ����ƣ�</h2><p>�����е�ĳ���ֶ�ֻ�����������õ���</p><p>������ֶ��Ƶ���Ҫ������Щ����ȥ��</p><h2 id="6-Extract-Subclass���������ࣩ"><a href="#6-Extract-Subclass���������ࣩ" class="headerlink" title="6. Extract Subclass���������ࣩ"></a>6. Extract Subclass���������ࣩ</h2><p>���е�ĳЩ����ֻ��ĳЩʵ���õ���</p><p>�½�һ�����࣬��������˵����һ���������Ƶ������С�</p><h2 id="7-Extract-Superclass���������ࣩ"><a href="#7-Extract-Superclass���������ࣩ" class="headerlink" title="7. Extract Superclass���������ࣩ"></a>7. Extract Superclass���������ࣩ</h2><p>���������������ԡ�</p><p>Ϊ�������ཨ��һ�����࣬����ͬ�����������ࡣ</p><h2 id="8-Extract-Interface�������ӿڣ�"><a href="#8-Extract-Interface�������ӿڣ�" class="headerlink" title="8. Extract Interface�������ӿڣ�"></a>8. Extract Interface�������ӿڣ�</h2><p>��ɿͻ�ʹ����ӿ��е�ͬһ�Ӽ�������������Ľӿ��в�����ͬ��</p><p>����ͬ���Ӽ�������һ�������ӿ��С�</p><h2 id="9-Collapse-Hierarchy���۵��̳���ϵ��"><a href="#9-Collapse-Hierarchy���۵��̳���ϵ��" class="headerlink" title="9. Collapse Hierarchy���۵��̳���ϵ��"></a>9. Collapse Hierarchy���۵��̳���ϵ��</h2><p>���������֮����̫������</p><p>�����Ǻ�Ϊһ�塣</p><h2 id="10-Form-Template-Method������g�庯����"><a href="#10-Form-Template-Method������g�庯����" class="headerlink" title="10. Form Template Method������ģ�庯����"></a>10. Form Template Method������ģ�庯����</h2><p>����һЩ���࣬������Ӧ��ĳЩ��������ͬ˳��ִ�����ƵĲ�����������������ϸ����������ͬ��</p><p>����Щ�����ֱ�Ž����������У����������Ƕ�����ͬ��ǩ��������ԭ����Ҳ�ͱ����ͬ�ˡ�Ȼ��ԭ�������������ࡣ(ģ�巽��ģʽ)</p><h2 id="11-Replace-Inheritance-with-Delegation-����ί��ȡ���̳У�"><a href="#11-Replace-Inheritance-with-Delegation-����ί��ȡ���̳У�" class="headerlink" title="11. Replace Inheritance with Delegation ����ί��ȡ���̳У�"></a>11. Replace Inheritance with Delegation ����ί��ȡ���̳У�</h2><p>ĳ������ֻʹ�ó���ӿ��е�һ���֣����Ǹ�������Ҫ�̳ж��������ݡ�</p><p>���������½�һ���ֶ����Ա��泬�࣬�������ຯ���������Ķ�ί�г��࣬Ȼ��ȥ������֮��ļ̳й�ϵ��</p><h2 id="12-Replace-Delegation-with-Inheritance-���Լ̳�ȡ��ί�У�"><a href="#12-Replace-Delegation-with-Inheritance-���Լ̳�ȡ��ί�У�" class="headerlink" title="12. Replace Delegation with Inheritance ���Լ̳�ȡ��ί�У�"></a>12. Replace Delegation with Inheritance ���Լ̳�ȡ��ί�У�</h2><p>����������֮��ʹ��ί�й�ϵ��������Ϊ�����ӿڱ�д��༫�򵥵�ί�к�����</p><p>��ί����̳������ࡣ</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- GFM-TOC --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#��һ��-��һ������&quot;&gt;��һ�� ��һ������&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#�ڶ���-�ع�ԭ��&quot;&gt;�ڶ��� �ع�ԭ��&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2018/03/29/programming-basics-master/notes/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    <id>http://yoursite.com/2018/03/29/programming-basics-master/notes/计算机网络/</id>
    <published>2018-03-29T14:37:48.210Z</published>
    <updated>2018-02-26T04:13:28.000Z</updated>
    
    <content type="html"><![CDATA[<!-- GFM-TOC --><ul><li><a href="#��һ��-����">��һ�� ����</a><ul><li><a href="#���������">���������</a></li><li><a href="#isp">ISP</a></li><li><a href="#�����������">�����������</a></li><li><a href="#����֮���ͨ�ŷ�ʽ">����֮���ͨ�ŷ�ʽ</a></li><li><a href="#��·��������齻��">��·��������齻��</a><ul><li><a href="#1-��·����">1. ��·����</a></li><li><a href="#2-���Ľ���">2. ���Ľ���</a></li><li><a href="#3-���齻��">3. ���齻��</a></li></ul></li><li><a href="#ʱ��">ʱ��</a><ul><li><a href="#1-����ʱ��">1. ����ʱ��</a></li><li><a href="#2-����ʱ��">2. ����ʱ��</a></li><li><a href="#3-����ʱ��">3. ����ʱ��</a></li><li><a href="#4-�Ŷ�ʱ��">4. �Ŷ�ʱ��</a></li></ul></li><li><a href="#�����������ϵ�ṹ">�����������ϵ�ṹ*</a><ul><li><a href="#1-�߲�Э��">1. �߲�Э��</a></li><li><a href="#2-���Э��">2. ���Э��</a></li><li><a href="#3-�����ڸ���֮��Ĵ��ݹ���">3. �����ڸ���֮��Ĵ��ݹ���</a></li><li><a href="#4-tcpip-��ϵ�ṹ">4. TCP/IP ��ϵ�ṹ</a></li></ul></li></ul></li><li><a href="#�ڶ���-�����">�ڶ��� �����</a><ul><li><a href="#ͨ�ŷ�ʽ">ͨ�ŷ�ʽ</a></li><li><a href="#��ͨ����">��ͨ����</a></li><li><a href="#�ŵ����ü���">�ŵ����ü���</a><ul><li><a href="#1-Ƶ�ָ���ʱ�ָ���">1. Ƶ�ָ��á�ʱ�ָ���</a></li><li><a href="#2-ͳ��ʱ�ָ���">2. ͳ��ʱ�ָ���</a></li><li><a href="#3-���ָ���">3. ���ָ���</a></li><li><a href="#4-��ָ���">4. ��ָ���</a></li></ul></li></ul></li><li><a href="#������-������·��">������ ������·��</a><ul><li><a href="#������������">������������</a><ul><li><a href="#1-��װ��֡">1. ��װ��֡</a></li><li><a href="#2-͸������">2. ͸������</a></li><li><a href="#3-�����">3. �����</a></li></ul></li><li><a href="#��Ե��ŵ�---ppp-Э��">��Ե��ŵ� - PPP Э��</a></li><li><a href="#������������">������������</a></li><li><a href="#�㲥�ŵ�---csmacd-Э��">�㲥�ŵ� - CSMA/CD Э��*</a></li><li><a href="#������">������</a></li><li><a href="#mac-��">MAC ��</a></li><li><a href="#���������">���������</a></li></ul></li><li><a href="#������-�����">������ �����*</a><ul><li><a href="#����Э��-ip-����">����Э�� IP ����</a></li><li><a href="#ip-���ݱ���ʽ">IP ���ݱ���ʽ</a></li><li><a href="#ip-��ַ��ַ">IP ��ַ��ַ</a><ul><li><a href="#1-�����-ip-��ַ">1. ����� IP ��ַ</a></li><li><a href="#2-��������">2. ��������</a></li><li><a href="#3-�޷����ַ-cidr���ɳ���">3. �޷����ַ CIDR�����ɳ�����</a></li></ul></li><li><a href="#ip-��ַ��-mac-��ַ">IP ��ַ�� MAC ��ַ</a></li><li><a href="#��ַ����Э��-arp">��ַ����Э�� ARP</a></li><li><a href="#·�����Ľṹ">·�����Ľṹ</a></li><li><a href="#��������·����������">��������·����������</a></li><li><a href="#·��������ת������">·��������ת������</a></li><li><a href="#·��ѡ��Э��">·��ѡ��Э��</a><ul><li><a href="#1-�ڲ�����Э��-rip">1. �ڲ�����Э�� RIP</a></li><li><a href="#2-�ڲ�����Э��-ospf">2. �ڲ�����Э�� OSPF</a></li><li><a href="#3-�ⲿ����Э��-bgp">3. �ⲿ����Э�� BGP</a></li></ul></li><li><a href="#���ʿ��Ʊ���Э��-icmp">���ʿ��Ʊ���Э�� ICMP</a></li><li><a href="#��������̽��-ping">��������̽�� PING</a></li><li><a href="#ip-�ಥ">IP �ಥ</a></li><li><a href="#����ר����-vpn">����ר���� VPN</a></li><li><a href="#�����ַת��-nat">�����ַת�� NAT</a></li></ul></li><li><a href="#������-�����">������ �����*</a><ul><li><a href="#udp-��-tcp-���ص�">UDP �� TCP ���ص�</a></li><li><a href="#udp-�ײ���ʽ">UDP �ײ���ʽ</a></li><li><a href="#tcp-�ײ���ʽ">TCP �ײ���ʽ</a></li><li><a href="#tcp-����������">TCP ����������</a></li><li><a href="#tcp-���Ĵλ���">TCP ���Ĵλ���</a></li><li><a href="#tcp-��������">TCP ��������</a></li><li><a href="#tcp-�ɿ�����">TCP �ɿ�����</a></li><li><a href="#tcp-��������">TCP ��������</a></li><li><a href="#tcp-ӵ������">TCP ӵ������</a><ul><li><a href="#����ʼ��ӵ������">����ʼ��ӵ������</a></li><li><a href="#���ش����ָ�">���ش����ָ�</a></li></ul></li></ul></li><li><a href="#������-Ӧ�ò�">������ Ӧ�ò�*</a><ul><li><a href="#����ϵͳ-dns">����ϵͳ DNS</a><ul><li><a href="#1-��νṹ">1. ��νṹ</a></li><li><a href="#2-��������">2. ��������</a></li></ul></li><li><a href="#�ļ�����Э��-ftp">�ļ�����Э�� FTP</a></li><li><a href="#Զ���ն�Э��-telnet">Զ���ն�Э�� TELNET</a></li><li><a href="#��ά��-www">��ά�� WWW</a></li><li><a href="#�����ʼ�Э��">�����ʼ�Э��</a><ul><li><a href="#pop3">POP3</a></li><li><a href="#imap">IMAP</a></li><li><a href="#smtp">SMTP</a></li></ul></li><li><a href="#��̬��������Э��-dhcp">��̬��������Э�� DHCP</a></li><li><a href="#��Ե㴫��-p2p">��Ե㴫�� P2P</a></li><li><a href="#web-ҳ���������">Web ҳ���������</a></li><li><a href="#���ö˿�">���ö˿�</a></li></ul></li><li><a href="#�ο�����">�ο�����</a><!-- GFM-TOC --></li></ul><h1 id="��һ��-����"><a href="#��һ��-����" class="headerlink" title="��һ�� ����"></a>��һ�� ����</h1><h2 id="���������"><a href="#���������" class="headerlink" title="���������"></a>���������</h2><p>����������������������������ǰѶ��ֲ�ͬ������������������˻���������������硣</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/04ff7ae6-7bee-4cf8-82f8-dfe2ba1f3616.jpg" alt=""></p><h2 id="ISP"><a href="#ISP" class="headerlink" title="ISP"></a>ISP</h2><p>�����������ṩ�� ISP ���Դӻ������������������ IP ��ַ��ͬʱӵ��ͨ����·�Լ�·�����������豸�����˻������ ISP ����һ���ķ��þͿ��Խ��뻥������</p><p>Ŀǰ�Ļ�������һ�ֶ��� ISP �ṹ��ISP ���ݸ�������Ĵ�С��Ϊ���� ISP������ ISP �ͱ��� ISP��</p><p>������������ IXP �������� ISP ֱ�����������þ��������� ISP��</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/17d807ef-03bf-4824-a97c-ea5fb58ec61d.jpg" alt=""></p><h2 id="�����������"><a href="#�����������" class="headerlink" title="�����������"></a>�����������</h2><ol><li>��Ե���֣����������ڻ������ϵ��������û�����ֱ��ʹ�ã�</li><li>���Ĳ��֣��ɴ����������������Щ�����·������ɣ�Ϊ��Ե���ֵ������ṩ����</li></ol><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/005d83c2-e64a-41f0-bbdd-51c71d494a18.jpg" alt=""></p><h2 id="����֮���ͨ�y�ʽ"><a href="#����֮���ͨ�y�ʽ" class="headerlink" title="����֮���ͨ�ŷ�ʽ"></a>����֮���ͨ�ŷ�ʽ</h2><p><strong>1. �ͻ� - ��������C/S��</strong></p><p>�ͻ����Ƿ������󷽣��������Ƿ����ṩ����</p><p><strong>2. �Եȣ�P2P��</strong></p><p>�����ֿͻ��ͷ�������</p><h2 id="��·��������齻��"><a href="#��·��������齻��" class="headerlink" title="��·��������齻��"></a>��·��������齻��</h2><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/b97958dd-3e43-45f7-97f5-3ec20f3f8b88.jpg" alt=""></p><h3 id="1-��·����"><a href="#1-��·����" class="headerlink" title="1. ��·����"></a>1. ��·����</h3><p>��·�������ڵ绰ͨ��ϵͳ�������û�Ҫͨ��֮ǰ��Ҫ����һ��ר�õ�������·������������ͨ�Ź�����ʼ��ռ�ø���·������ͨ�ŵĹ����в�����һֱ��ʹ�ô�����·����˵�·��������·�������ʺܵͣ��������� 10%��</p><h3 id="2-���L���"><a href="#2-���L���" class="headerlink" title="2. ���Ľ���"></a>2. ���Ľ���</h3><p>���Ľ��������ʾ�ͨ��ϵͳ���ʾֽ��յ�һ�ݱ���֮���ȴ洢������Ȼ�����ͬĿ�ĵصı���һ��ת������һ��Ŀ�ĵأ�������̾��Ǵ洢ת�����̡�</p><h3 id="3-���齻��"><a href="#3-���齻��" class="headerlink" title="3. ���齻��"></a>3. ���齻��</h3><p>���齻��Ҳʹ���˴洢ת��������ת�����Ƿ�������Ǳ��ġ����������ݳ�Ϊһ�����ģ�����һ�����Ŀ��ܺܳ�����Ҫ�Ƚ����з֣�����������ܴ���Ĵ�С����ÿ���зֵ�����ǰ������ײ�֮��ͳ�Ϊ�˷��飬�ײ�������Ŀ�ĵ�ַ��Դ��ַ�ȿ�����Ϣ��</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/6f4af159-8b03-4246-8d0e-222db65bb83c.jpg" alt=""></p><p>�洢ת��������һ��������·�ϴ��Ͷ�������ķ��飬��˲���Ҫռ�ö˵��˵���·��Դ��</p><p>����ڱ��Ľ��������ڷ���ȱ��ĸ�С���洢ת�����ٶ�Ҳ�͸��졣</p><h2 id="ʱ��"><a href="#ʱ��" class="headerlink" title="ʱ��"></a>ʱ��</h2><p>��ʱ�� = ����ʱ�� + ����ʱ�� + ����ʱ�� + �Ŷ�ʱ��</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/ceee91c2-da26-4169-94c3-e4608b46b9ac.png" alt=""></p><h3 id="1-����ʱ��"><a href="#1-����ʱ��" class="headerlink" title="1. ����ʱ��"></a>1. ����ʱ��</h3><p>������·������������֡����Ҫ��ʱ�䡣</p><p><img src="http://latex.codecogs.com/gif.latex?\\\\delay=\frac{l(bit" alt="">}{v(bit/s)})</p><p>���� l ��ʾ����֡�ĳ��ȣ�v ��ʾ�������ʡ�</p><h3 id="2-����ʱ��"><a href="#2-����ʱ��" class="headerlink" title="2. ����ʱ��"></a>2. ����ʱ��</h3><p>��Ų����ŵ��д���һ���ľ�����Ҫ���ѵ�ʱ�䣬��Ų������ٶȽӽ����١�</p><p><img src="http://latex.codecogs.com/gif.latex?\\\\delay=\frac{l(m" alt="">}{v(m/s)})</p><p>���� l ��ʾ�ŵ����ȣ�v ��ʾ��Ų����ŵ��ϵĴ������ʡ�</p><h3 id="3-����ʱ��"><a href="#3-����ʱ��" class="headerlink" title="3. ����ʱ��"></a>3. ����ʱ��</h3><p>������·�����յ�����ʱ���д�������Ҫ��ʱ�䣬��������ײ����ӷ�������ȡ���ݲ��ֵȡ�</p><h3 id="4-�Y�ʱ��"><a href="#4-�Y�ʱ��" class="headerlink" title="4. �Ŷ�ʱ��"></a>4. �Ŷ�ʱ��</h3><p>������·������������к�����������Ŷӵȴ���ʱ�䣬ȡ�������統ǰ��ͨ������</p><h2 id="�����������ϵ�u"><a href="#�����������ϵ�u" class="headerlink" title="�����������ϵ�ṹ*"></a>�����������ϵ�ṹ*</h2><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/1005dc9d-9049-4b06-9524-6171e56ebd8c.png" alt=""></p><h3 id="1-�߲�Э��"><a href="#1-�߲�Э��" class="headerlink" title="1. �߲�Э��"></a>1. �߲�Э��</h3><p>��ͼ a ��ʾ�����б�ʾ��ͻỰ����;���£�</p><ol><li>��ʾ�㣺��Ϣ���﷨�����Լ����ǵĹ���������ܽ��ܡ�ת�����롢ѹ����ѹ����</li><li>�Ự�㣺��ͬ�����ϵ��û�֮�佨��������Ự��</li></ol><h3 id="2-���Э��"><a href="#2-���Э��" class="headerlink" title="2. ���Э��"></a>2. ���Э��</h3><ol><li><p>Ӧ�ò㣺Ϊ�ض�Ӧ�ó����ṩ���ݴ���������� HTTP��DNS �ȡ����ݵ�λΪ���ġ�</p></li><li><p>����㣺�ṩ���ǽ��̼��ͨ�����ݴ����������Ӧ�ò�Э��ܶ࣬����ͨ�õ������Э��Ϳ���֧�ֲ��������Ӧ�ò�Э�顣������������Э�飺�������Э�� TCP���ṩ�������ӡ��ɿ������ݴ���������ݵ�λΪ���ĶΣ��û����ݱ�Э�� UDP���ṩ�����ӡ������Ŭ�������ݴ���������ݵ�λΪ�û����ݱ���</p></li><li><p>����㣺Ϊ����֮���ṩ���񣬶������������Э��������Ϊ�����еĽ����ṩ�������������������ı��Ķλ����û����ݱ���װ�ɷ��������д��䡣</p></li><li><p>������·�㣺�������ԵĻ�������֮�䣬������֮������кܶ���·����·��Э�����Ϊ���ڽ��֮���ṩ����������·�������㴫���ķ����װ��֡��</p></li><li><p>����㣺���ǵ��������ڴ���ý���ϴ������ݱ�������������ָ����Ĵ���ý�塣�����������Ǿ��������δ���ý���ͨ���ֶεĲ��죬ʹ������ϵ�������·��о�������Щ���졣</p></li></ol><h3 id="3-�����ڸ���֮��J��ݹ���"><a href="#3-�����ڸ���֮��J��ݹ���" class="headerlink" title="3. �����ڸ���֮��Ĵ��ݹ���"></a>3. �����ڸ���֮��Ĵ��ݹ���</h3><p>�����µĹ����У���Ҫ����²�Э������Ҫ���ײ�����β�����������ϵĹ����в��ϲ��ײ���β����</p><p>·����ֻ����������Э�飬��Ϊ·����λ����������У�����ҪΪ���̻���Ӧ�ó����ṩ�������Ҳ�Ͳ���Ҫ������Ӧ�ò㡣</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/f7d5da89-2d75-4d8f-85e7-6b608865dc00.jpg" alt=""></p><h3 id="4-TCP-IP-��ϵ�u"><a href="#4-TCP-IP-��ϵ�u" class="headerlink" title="4. TCP/IP ��ϵ�ṹ"></a>4. TCP/IP ��ϵ�ṹ</h3><p>��ֻ���Ĳ㣬�൱�����Э����������·��������ϲ�Ϊ����ӿڲ㡣</p><p>���ڵ� TCP/IP ��ϵ�ṹ���ϸ���ѭ OSI �ֲ���Ӧ�ò���ܻ�ֱ��ʹ�� IP ���������ӿڲ㡣</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/3e2200b3-1c18-4853-ae42-7788e8e1f939.png" alt=""></p><p>TCP/IP Э������һ��ɳ©��״���м�С���ߴ�IP Э��������ռ�þ������صĵ�λ��</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/9ecaebee-670e-4cb2-9cdb-3029c00f33bd.png" alt=""></p><h1 id="�ڶ���-�����"><a href="#�ڶ���-�����" class="headerlink" title="�ڶ��� �����"></a>�ڶ��� �����</h1><h2 id="ͨ�y�ʽ"><a href="#ͨ�y�ʽ" class="headerlink" title="ͨ�ŷ�ʽ"></a>ͨ�ŷ�ʽ</h2><ol><li>����ͨ�ţ��ֳ�Ϊ����ͨ�ţ�</li><li>˫����ͨ�ţ��ֳ�Ϊ��˫��ͨ�ţ�</li><li>˫��ͬʱͨ�ţ��ֳ�Ϊȫ˫��ͨ�š�</li></ol><h2 id="��ͨ����"><a href="#��ͨ����" class="headerlink" title="��ͨ����"></a>��ͨ����</h2><p>ģ���ź����������źţ������ź�����ɢ���źš���ͨ���ư������ź�ת��Ϊģ���źš�</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/d2c55c84-aa1f-43c1-bd97-457bcb7816b3.png" alt=""></p><h2 id="�w����u���"><a href="#�w����u���" class="headerlink" title="�ŵ����ü���"></a>�ŵ����ü���</h2><h3 id="1-Z�ָ��a�ʱ�ָ���"><a href="#1-Z�ָ��a�ʱ�ָ���" class="headerlink" title="1. Ƶ�ָ��á�ʱ�ָ���"></a>1. Ƶ�ָ��á�ʱ�ָ���</h3><p>Ƶ�ָ��õ������û�����ͬ��ʱ��ռ�ò�ͬ��Ƶ�ʴ�����Դ��ʱ�ָ��õ������û��ڲ�ͬ��ʱ��ռ����ͬ��Ƶ�ʴ�����Դ��</p><p>ʹ�������ַ�ʽ����ͨ�ţ���ͨ�ŵĹ������û���һֱռ��һ�����ŵ���Դ���������ڼ�������ݵ�ͻ�����ʣ�û��Ҫһֱռ���ŵ���Դ�����ó��������û�ʹ�ã���������ַ�ʽ���ŵ��������ʶ����ߡ�</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/543d47a1-f0dd-414f-b23c-0c142c814854.png" alt=""></p><h3 id="2-ͳ��ʱ�ָ���"><a href="#2-ͳ��ʱ�ָ���" class="headerlink" title="2. ͳ��ʱ�ָ���"></a>2. ͳ��ʱ�ָ���</h3><p>�Ƕ�ʱ�ָ��õ�һ�ָĽ������̶�ÿ���û���ʱ�ָ���֡�е�λ�ã�ֻҪ�����ݾͼ����������ʱ�ָ���֡Ȼ���͡�</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/29058e09-bb72-4040-a73d-4c497895e9ce.jpg" alt=""></p><h3 id="3-���ָ���"><a href="#3-���ָ���" class="headerlink" title="3. ���ָ���"></a>3. ���ָ���</h3><p>���Ƶ�ָ��á����ڹ��Ƶ�ʺܸߣ����ϰ�����ò���������Ƶ������ʾ��ʹ�õĹ��ز���</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/78534153-88d1-4f83-a6e0-59064dbdc43a.png" alt=""></p><h3 id="4-��ָ���"><a href="#4-��ָ���" class="headerlink" title="4. ��ָ���"></a>4. ��ָ���</h3><p>Ϊÿ���û����� m bit ����Ƭ���������е���Ƭ��������������������Ƭ $\vec{S}$ �� $\vec{T}$ ��</p><p><img src="http://latex.codecogs.com/gif.latex?\\\\\vec{S}\cdot\vec{T}=0" alt=""></p><p>Ϊ�˷��㣬ȡ m=8������Ƭ $\vec{S}$ Ϊ 00011011����ӵ�и���Ƭ���û����ͱ��� 1 ʱ�ͷ��͸���Ƭ�����ͱ��� 0 ʱ�ͷ��͸���Ƭ�ķ��� 11100100��</p><p>�ڼ���ʱ�� 00011011 ���� (-1 -1 -1 +1 +1 -1 +1 +1)�����Եõ�</p><p><img src="http://latex.codecogs.com/gif.latex?\\\\\frac{1}{m}\vec{S}\cdot\vec{S}=1" alt=""></p><p><img src="http://latex.codecogs.com/gif.latex?\\\\\frac{1}{m}\vec{S}\cdot\vec{S&#39;}=-1" alt=""></p><p>���� $\vec{S’}$ Ϊ $\vec{S}$ �ķ��롣</p><p>���������ʽ������֪���������ն�ʹ����Ƭ $\vec{S}$ �Խ��յ������ݽ����ڻ�����ʱ�����Ϊ 0 ���������û����͵����ݣ����Ϊ 1 �����û����͵ı��� 1�����Ϊ -1 �����û����͵ı��� 0��</p><p>��ָ�����Ҫ���͵�������Ϊԭ�ȵ� m ����</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/0042edad-8e3b-4279-bd93-6906fcd1b640.jpg" alt=""></p><h1 id="������-������·��"><a href="#������-������·��" class="headerlink" title="������ ������·��"></a>������ ������·��</h1><h2 id="������������"><a href="#������������" class="headerlink" title="������������"></a>������������</h2><h3 id="1-��װ��֡"><a href="#1-��װ��֡" class="headerlink" title="1. ��װ��֡"></a>1. ��װ��֡</h3><p>������㴫�����ķ�������ײ���β�������ڱ��֡�Ŀ�ʼ�ͽ�����</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/ea5ed9b2-6d9f-48fb-b890-0288caf9088a.jpg" alt=""></p><h3 id="2-͸������"><a href="#2-͸������" class="headerlink" title="2. ͸������"></a>2. ͸������</h3><p>͸����ʾһ��ʵ�ʴ��ڵ����￴�������񲻴���һ����</p><p>֡�����ײ���β�������֡�����ݲ��ֺ��к��ײ�β����ͬ�����ݣ���ô֡�Ŀ�ʼ�ͽ���λ�þͻᱻ������ж�����Ҫ�������г����ײ�β����ͬ������ǰ�����ת���ַ��������Ҫ������������þ���ת���ַ�����ô����ת���ַ�ǰ���ټӸ�ת���ַ����ڽ��ն˽��д���֮����Ի�ԭ��ԭʼ���ݡ��������͸�������������ת���ַ����û��������ת���ַ��Ĵ��ڡ�</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/44e1d90e-3fe6-4dd6-8dce-6daab12e7663.jpg" alt=""></p><h3 id="3-�����"><a href="#3-�����" class="headerlink" title="3. �����"></a>3. �����</h3><p>Ŀǰ������·��㷺ʹ����ѭ��������飨CRC���������ز��</p><h2 id="��Ե��w�-PPP-Э��"><a href="#��Ե��w�-PPP-Э��" class="headerlink" title="��Ե��ŵ� - PPP Э��"></a>��Ե��ŵ� - PPP Э��</h2><p>�������û�ͨ����Ҫ���ӵ�ĳ�� ISP ֮����ܽ��뵽��������PPP Э������û�������� ISP ����ͨ��ʱ��ʹ�õ�������·��Э�顣</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/8b5bd2c8-8425-4a8b-89db-235c95800de9.jpg" alt=""></p><p>�� PPP ��֡�У�F �ֶ�Ϊ֡�Ķ������A �� C ��ʱû�����塣FCS ��ʹ�� CRC �ļ������С���Ϣ���ֵĳ��Ȳ����� 1500��</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/a5fa89e7-54b9-4e2f-8c48-a35712d7b2f5.jpg" alt=""></p><h2 id="������������-1"><a href="#������������-1" class="headerlink" title="������������"></a>������������</h2><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/8b15e36f-69b4-46b6-a07c-7234ac7c7927.jpg" alt=""></p><h2 id="�㲥�w�-CSMA-CD-Э��"><a href="#�㲥�w�-CSMA-CD-Э��" class="headerlink" title="�㲥�ŵ� - CSMA/CD Э��*"></a>�㲥�ŵ� - CSMA/CD Э��*</h2><p>�ڹ㲥�ŵ��ϣ�ͬһʱ��ֻ������һ̨������������ݡ�</p><p>CSMA/CD ��ʾ�ز����������� / ��ײ��⡣</p><p><strong>������</strong>��˵���������������磬��������Զ��ķ�ʽ���ӵ������ϡ�<br><strong>�ز�����</strong>��ÿ��վ�����벻ͣ�ؼ����ŵ����ڷ���ǰ����������ŵ�����ʹ�ã��ͱ���ȴ���<br><strong>��ײ���</strong>���ڷ����У���������ŵ���������վ���ڷ������ݣ��ͱ�ʾ��������ײ����Ȼÿһ��վ�ڷ�������֮ǰ���Ѿ������ŵ�Ϊ���У��������ڵ�Ų��Ĵ���ʱ�ӵĴ��ڣ������п��ܻᷢ����ײ��</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/f9ed4da5-0032-41e6-991a-36d995ec28fd.png" alt=""></p><p>�Ƕ˵��˵Ĵ���ʱ��Ϊ �ӣ����ȷ��͵�վ����ྭ�� 2�� �Ϳ���֪���Ƿ�������ײ���� 2�� Ϊ <strong>������</strong>��ֻ�о���������֮��û�м�⵽��ײ�����ܿ϶���η��Ͳ��ᷢ����ײ��</p><p>��������ײʱ��վ��Ҫֹͣ���ͣ��ȴ�һ��ʱ���ٷ��͡����ʱ����� <strong>�ض϶�����ָ���˱��㷨</strong> ��ȷ��������ɢ���������� {0, 1, .., (2<sup>k</sup>-1)} �����ȡ��һ���������� r��Ȼ��ȡ r ������������Ϊ�ش��ȴ�ʱ�䡣</p><h2 id="������"><a href="#������" class="headerlink" title="������"></a>������</h2><p>�ӱ����Ͽ���ʹ�ü������ľ���������������һ�������������Ǽ�����ʹ�õ���������ģ��ʵ�����ߵĹ������߼�������һ��������������ϵͳ����һ����ͳ��̫���������С�</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/897a4f4e-2683-44e1-a26a-c0d0234dc576.jpg" alt=""></p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/40c3f8e5-3a20-45b6-a60c-77b9b952e104.jpg" alt=""></p><h2 id="MAC-��"><a href="#MAC-��" class="headerlink" title="MAC ��"></a>MAC ��</h2><p>MAC ��ַ�� 6 �ֽڣ�48 λ���ĵ�ַ������Ψһ��ʾ��������������������һ̨����ӵ�ж��ٸ����������ж��ٸ� MAC ��ַ������ʼǱ������ձ������������������������������������</p><p>MAC ֡�������ֶ�������ϲ�ʹ��ʲôЭ�飻�����ֶγ����� 46-1500 ֮�䣬���̫С����Ҫ��䣻FCS Ϊ֡�������У�ʹ�õ��� CRC ���鷽����ǰ������ǰͬ����ֻ��Ϊ�˼��� FCS ��ʱ����ģ��������֮��ᶪ����</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/50d38e84-238f-4081-8876-14ef6d7938b5.jpg" alt=""></p><h2 id="���������-1"><a href="#���������-1" class="headerlink" title="���������"></a>���������</h2><p>������������Խ���������λ���޹ص��߼��飬ֻ����ͬһ������������еĳ�Ա�Ż��յ��㲥��Ϣ��������ͼ�� (A1, A2, A3, A4) ����һ�������������A1 ���͵Ĺ㲥�ᱻ A2��A3��A4 �յ���������վ���ղ�����</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/a74b70ac-323a-4b31-b4d5-90569b8a944b.png" alt=""></p><h1 id="������-�����"><a href="#������-�����" class="headerlink" title="������ �����*"></a>������ �����*</h1><h2 id="����Э��-IP-����"><a href="#����Э��-IP-����" class="headerlink" title="����Э�� IP ����"></a>����Э�� IP ����</h2><p>��Ϊ������������������ĺ��ģ����Ӧ��������㾡���ܼ򵥡����������ֻ�ṩ�����ġ������ӵġ������Ŭ�����������ݱ�����</p><p>ʹ�� IP Э�飬���԰��칹��������������������ʹ��������㿴����������һ��ͳһ�����硣</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/fe3d224c-8ffd-40f9-85b1-86ffe1393f6c.jpg" alt=""></p><p>�� IP Э������ʹ�õĻ�������Э�飺</p><ol><li>��ַ����Э�� ARP��Address Resolution Protocol��</li><li>���ʿ��Ʊ���Э�� ICMP��Internet Control Message Protocol��</li><li>���������Э�� IGMP��Internet Group Management Protocol��</li></ol><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/163cf8b4-5f30-46c9-af00-316a71b3c890.jpg" alt=""></p><h2 id="IP-���ݱ���ʽ"><a href="#IP-���ݱ���ʽ" class="headerlink" title="IP ���ݱ���ʽ"></a>IP ���ݱ���ʽ</h2><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/8681db55-0873-434b-aa98-83d07e8392ae.jpg" alt=""></p><p><strong>�汾</strong> : �� 4��IPv4���� 6��IPv6������ֵ��</p><p><strong>�ײ�����</strong> : ռ 4 λ��������ֵΪ 15��ֵΪ 1 ��ʾ���� 1 �� 32 λ�ֵĳ��ȣ�Ҳ���� 4 �ֽڡ���Ϊ�ײ��̶�����Ϊ 20 �ֽڣ���˸�ֵ��СΪ 5�������ѡ���ֵĳ��Ȳ��� 4 �ֽڵ�������������β������䲿������䡣</p><p><strong>���ַ���</strong> : ������ø��õķ���һ������²�ʹ���á�</p><p><strong>�ܳ���</strong> : �����ײ����Ⱥ����ݲ��ֳ��ȡ�</p><p><strong>��ʶ</strong> : �����ݱ����ȹ����Ӷ�������Ƭ������£���ͬ���ݱ��Ĳ�ͬ��Ƭ������ͬ�ı�ʶ����</p><p><strong>Ƭƫ��</strong> : �ͱ�ʶ��һ�����ڷ�����Ƭ�������Ƭƫ�Ƶĵ�λΪ 8 �ֽڡ�</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/45c86855-9b18-4cf4-a9a7-f8b6eb78d133.png" alt=""></p><p><strong>����ʱ��</strong> ��TTL�����Ĵ���Ϊ�˷�ֹ�޷����������ݱ��ڻ������в��϶�Ȧ�ӡ���·��������Ϊ��λ���� TTL Ϊ 0 ʱ�Ͷ������ݱ���</p><p><strong>Э��</strong>��ָ��Я��������Ӧ���Ͻ����ĸ�Э����д������� ICMP��TCP��UDP �ȡ�</p><p><strong>�ײ������</strong>����Ϊ���ݱ�ÿ����һ��·��������Ҫ���¼������ͣ���˼���Ͳ��������ݲ��ֿ��Լ��ټ���Ĺ�������</p><h2 id="IP-��ַ��ַ"><a href="#IP-��ַ��ַ" class="headerlink" title="IP ��ַ��ַ"></a>IP ��ַ��ַ</h2><p>IP ��ַ�ı�ַ��ʽ������������ʷ�׶Σ�</p><ol><li>����� IP ��ַ��</li><li>�����Ļ��֣�</li><li>���ɳ�����</li></ol><h3 id="1-�����-IP-��ַ"><a href="#1-�����-IP-��ַ" class="headerlink" title="1. ����� IP ��ַ"></a>1. ����� IP ��ַ</h3><p>����������ɣ�����ź������ţ����в�ͬ�����в�ͬ������ų��ȣ������ǹ̶��ġ�</p><p>IP ��ַ ::= {&lt; ����� &gt;, &lt; ������ &gt;}</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/2ddd6132-60be-4a72-9daa-3d9756191f4a.png" alt=""></p><h3 id="2-��������"><a href="#2-��������" class="headerlink" title="2. ��������"></a>2. ��������</h3><p>ͨ����������ֶ�����һ������Ϊ�����ţ������� IP ��ַ����Ϊ���� IP ��ַ��ע�⣬�ⲿ���翴���������Ĵ��ڡ�</p><p>IP ��ַ ::= {&lt; ����� &gt;, &lt; ������ &gt;, &lt; ������ &gt;}</p><p>Ҫʹ�����������������������롣һ�� B ���ַ��Ĭ����������Ϊ 255.255.0.0����� B ���ַ������ռ�������أ���ô��������Ϊ 11111111 11111111 11000000 000000��Ҳ���� 255.255.192.0��</p><h3 id="3-�޷����ַ-CIDR�����ɳ�����"><a href="#3-�޷����ַ-CIDR�����ɳ�����" class="headerlink" title="3. �޷����ַ CIDR�����ɳ�����"></a>3. �޷����ַ CIDR�����ɳ�����</h3><p>CIDR �����˴�ͳ A �ࡢB ��� C ���ַ�Լ����������ĸ��ʹ������ǰ׺������������ IP ��ַ���б��룬����ǰ׺�ĳ��ȿ��Ը�����Ҫ�仯��</p><p>IP ��ַ ::= {&lt; ����ǰ׺�� &gt;, &lt; ������ &gt;}</p><p>CIDR �ļǷ��ϲ����� IP ��ַ�����������ǰ׺���ȵķ��������� 128.14.35.7/20 ��ʾǰ 20 λΪ����ǰ׺��</p><p>CIDR �ĵ�ַ������Լ�����Ϊ�������룬���������� 1 ����Ϊ����ǰ׺�ĳ��ȡ�</p><p>һ�� CIDR ��ַ�����кܶ��ַ��һ�� CIDR ��ʾ������Ϳ��Ա�ʾԭ���ĺܶ�����磬������·�ɱ���ֻ��Ҫһ��·�ɾͿ��Դ���ԭ���Ķ��·�ɣ�������·�ɱ����������������ͨ��ʹ������ǰ׺������·�ɱ���ķ�ʽ��Ϊ·�ɾۺϣ�Ҳ��Ϊ���ɳ�����</p><p>��·�ɱ���ÿ����Ŀ�ɡ�����ǰ׺���͡���һ����ַ����ɣ��ڲ���ʱ���ܻ�õ���ֹһ��ƥ������Ӧ�������ǰ׺ƥ�䡣</p><h2 id="IP-��ַ��-MAC-��ַ"><a href="#IP-��ַ��-MAC-��ַ" class="headerlink" title="IP ��ַ�� MAC ��ַ"></a>IP ��ַ�� MAC ��ַ</h2><p>�����ʵ������֮���ͨ�ţ�����·��ʵ�־���ÿ����·֮���ͨ�š������ͨ�Ź����У�IP ���ݱ���Դ��ַ��Ŀ�ĵ�ַʼ�ղ��䣬�� MAC ��ַ������·�ĸı���ı䡣</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/86b71296-0d1e-4a63-bcd9-54955b6b781b.jpg" alt=""></p><h2 id="��ַ����Э��-ARP"><a href="#��ַ����Э��-ARP" class="headerlink" title="��ַ����Э�� ARP"></a>��ַ����Э�� ARP</h2><p>ʵ���� IP ��ַ�õ� MAC ��ַ��</p><p>ÿ����������һ�� ARP ���ٻ��棬���ӳ������һ�� IP ��ַ �� MAC ��ַ��ӳ�䲻�ڸñ��У�����ͨ���㲥�ķ�ʽ���� ARP ������飬ƥ�� IP ��ַ�������ᷢ�� ARP ��Ӧ�����֪ MAC ��ַ��</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/8bc6fc2c-d198-4759-b06c-18d94d851e97.png" alt=""></p><h2 id="·�����Lu"><a href="#·�����Lu" class="headerlink" title="·�����Ľṹ"></a>·�����Ľṹ</h2><p>·�����ӹ����Ͽ��Ի���Ϊ���󲿷֣�·��ѡ��ͷ���ת����</p><p>����ת����������������ɣ������ṹ��һ������˿ں�һ������˿ڡ�</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/3a676c54-b559-4466-9b21-eb10f1e25879.jpg" alt=""></p><p>�����ṹ�Ľ�����������������ʵ�ַ�ʽ��</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/7f82fd18-7f16-4125-ada6-bb6b795b4fda.png" alt=""></p><h2 id="��������·����������"><a href="#��������·����������" class="headerlink" title="��������·����������"></a>��������·����������</h2><ul><li><p>������������������·�㣬��ʶ�� MAC ��ַ������ MAC ��ַת����·������֡��������ѧ������ά�� IP ��ַ�� MAC ��ַ��ӳ�䡣</p></li><li><p>·����λ������㣬��ʶ�� IP ��ַ������ IP ��ַת�����顣ά����·�ɱ�����·�ɱ�ѡ�����·�ߡ�</p></li></ul><h2 id="·��������ת������"><a href="#·��������ת������" class="headerlink" title="·��������ת������"></a>·��������ת������</h2><ol><li>�����ݱ����ײ���ȡĿ�������� IP ��ַ D���õ�Ŀ�������ַ N����·�ɱ���������Ŷ����� IP ��ַ����������������·�ɱ���Ŀ������</li><li>�� N �������·����ֱ��������ĳ�������ַ�������ֱ�ӽ�����</li><li>��·�ɱ�����Ŀ�ĵ�ַΪ D ���ض�����·�ɣ�������ݱ����͸�������ָ������һ��·������</li><li>��·�ɱ����е������� N ��·�ɣ�������ݱ����͸�·�ɱ�����ָ������һ��·������</li><li>��·�ɱ�����һ��Ĭ��·�ɣ�������ݱ����͸�·�ɱ�����ָ����Ĭ��·������</li><li>����ת���������</li></ol><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/8d211911-0e62-4190-ab00-d8610adec4a0.jpg" alt=""></p><h2 id="·��ѡ��Э��"><a href="#·��ѡ��Э��" class="headerlink" title="·��ѡ��Э��"></a>·��ѡ��Э��</h2><p>������ʹ�õ�·��ѡ��Э�鶼������Ӧ�ģ�����������ͨ���������˱仯������Ӧ�ؽ��е�����</p><p>���������Ի���Ϊ����С������ϵͳ AS��һ�� AS ����ʹ��һ�ֺͱ�� AS ��ͬ��·��ѡ��Э�顣</p><p>���԰�·��ѡ��Э�黮��Ϊ�����ࣺ</p><ol><li>�ڲ�����Э�� IGP��Interior Gateway Protocol�� ������ϵͳ�ڲ�ʹ�ã��� RIP �� OSPF��</li><li>�ⲿ����Э�� EGP��External Gateway Protocol�� ������ϵͳ֮��ʹ�ã��� BGP��</li></ol><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/e0be6970-5b0e-44a2-bc71-df4d61c42b8f.jpg" alt=""></p><h3 id="1-�ڲ�����Э��-RIP"><a href="#1-�ڲ�����Э��-RIP" class="headerlink" title="1. �ڲ�����Э�� RIP"></a>1. �ڲ�����Э�� RIP</h3><p>RIP ��һ�ֲַ�ʽ�Ļ��ھ���������·��ѡ��Э�顣������ָ������ֱ��������·��������Ϊ 1���������Ϊ 15������ 15 ��ʾ���ɴ</p><p>RIP ���̶���ʱ�����������·���������Լ���·�ɱ�������ɴν���֮������·�������ջ�֪�����ﱾ����ϵͳ���κ�һ���������̾������һ��·������ַ��</p><p>���������㷨��</p><ol><li>�Ե�ַΪ X ������·���������� RIP ���ģ����޸ı����е�������Ŀ������һ���ֶ��еĵ�ַ��Ϊ X���������еľ����ֶμ� 1��</li><li>���޸ĺ�� RIP �����е�ÿһ����Ŀ���������²��裺<ul><li>��ԭ����·�ɱ���û��Ŀ������ N����Ѹ���Ŀ��ӵ�·�ɱ��У�</li><li>��������һ��·������ַ�� X������յ�����Ŀ�滻ԭ��·�ɱ��е���Ŀ���������յ�����Ŀ�еľ��� d С��·�ɱ��еľ��룬����и��£�����ԭʼ·�ɱ���Ϊ Net2, 5, P���±���Ϊ Net2, 4, X������£�������ʲôҲ������</li></ul></li><li>�� 3 ���ӻ�û���յ�����·�����ĸ���·�ɱ���Ѹ�����·������Ϊ���ɴ���Ѿ�����Ϊ 16��</li></ol><p>RIP Э��ʵ�ּ򵥣�����С������ RIP ��ʹ�õ�������Ϊ 15������������Ĺ�ģ�����ҵ�������ֹ���ʱ��Ҫ�����Ƚϳ���ʱ����ܽ�����Ϣ���͵�����·������</p><h3 id="2-�ڲ�����Э��-OSPF"><a href="#2-�ڲ�����Э��-OSPF" class="headerlink" title="2. �ڲ�����Э�� OSPF"></a>2. �ڲ�����Э�� OSPF</h3><p>�������·������ OSPF����Ϊ�˿˷� RIP ��ȱ������������ġ�</p><p>���ű�ʾ OSPF ����ĳһ�ҳ��̿��ƣ����ǹ�������ģ����·����������Ϊʹ���� Dijkstra ��������·���㷨 SPF��</p><p>OSPF ���������ص㣺</p><ol><li>������ϵͳ�е�����·����������Ϣ�����ַ����Ǻ鷺����</li><li>���͵���Ϣ����������·��������·״̬����·״̬��������Щ·���������Լ���·�Ķ����������÷��á����롢ʱ�ӡ����������ʾ��</li><li>ֻ�е���·״̬�����仯ʱ��·�����Żᷢ����Ϣ��</li></ol><p>����·����������ȫ�������˽ṹͼ��������һ�µġ������ RIP��OSPF �ĸ��¹��������ĺܿ졣</p><h3 id="3-�ⲿ����Э��-BGP"><a href="#3-�ⲿ����Э��-BGP" class="headerlink" title="3. �ⲿ����Э�� BGP"></a>3. �ⲿ����Э�� BGP</h3><p>AS ֮���·��ѡ������ѣ���Ҫ�ǻ�������ģ�ܴ󡣲��Ҹ��� AS �ڲ�ʹ�ò�ͬ��·��ѡ��Э�飬���޷�׼ȷ����·���Ķ��������� AS ֮���·��ѡ����뿼���йصĲ��ԣ�������Щ AS ��Ը�������� AS ������</p><p>BGP ֻ��Ѱ��һ���ȽϺõ�·�ɣ����������·�ɡ�������·������·��ѡ��Э�顣</p><p>ÿ�� AS ���������� BGP �����ˣ�ͨ������������ BGP ������֮�佨�� TCP ����������·����Ϣ��</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/eb6271de-22c9-4f4b-8b31-eab1f560efac.png" alt=""></p><h2 id="���ʿ��Ʊ���Э��-ICMP"><a href="#���ʿ��Ʊ���Э��-ICMP" class="headerlink" title="���ʿ��Ʊ���Э�� ICMP"></a>���ʿ��Ʊ���Э�� ICMP</h2><p>ICMP ��Ϊ�˸���Ч��ת�� IP ���ݱ�����߽����ɹ��Ļ��ᡣ����װ�� IP ���ݱ��У����ǲ����ڸ߲�Э�顣</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/9b5e0fa0-9274-4219-a3a9-84fbb509c735.jpg" alt=""></p><p>ICMP ���ķ�Ϊ����汨�ĺ�ѯ�ʱ��ġ�</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/6e11b122-95ce-4869-bf7d-3b0d7591707e.jpg" alt=""></p><h2 id="��������̽��-PING"><a href="#��������̽��-PING" class="headerlink" title="��������̽�� PING"></a>��������̽�� PING</h2><p>PING �� ICMP ��һ����ҪӦ�ã���Ҫ����������̨����֮�����ͨ�ԡ�</p><p>PING �Ĺ��̣�</p><ol><li>PING ͬһ�����ε�����������Ŀ�������� MAC ��ַ��Ȼ��ֱ�ӽ���������޷����ҵ� MAC ��ַ����Ҫ����һ�� ARP ����</li><li>PING ��ͬ���ε��������ͷ��͸������������ת����ͬ��Ҫ���͸�����Ҳ��Ҫͨ���������ص� MAC ��ַ������ MAC ��ַ����ת����</li></ol><h2 id="IP-�ಥ"><a href="#IP-�ಥ" class="headerlink" title="IP �ಥ"></a>IP �ಥ</h2><p>��һ�Զ��ͨ���У��ಥ����Ҫ�����鸴�ƶ�ݣ��Ӷ�����Լ������Դ��</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/c77b6a18-dfac-42a2-ac89-7e99481275dc.jpg" alt=""></p><h2 id="����ר����-VPN"><a href="#����ר����-VPN" class="headerlink" title="����ר���� VPN"></a>����ר���� VPN</h2><p>���� IP ��ַ�Ľ�ȱ��һ�����������뵽�� IP ��ַ������ԶС�ڱ�������ӵ�е�������������һ������������Ҫ�����е��������뵽�ⲿ�Ļ������У������ڵļ��������ʹ�ý��ڱ�������Ч�� IP ��ַ��ר�õ�ַ����</p><p>������ר�õ�ַ�飺</p><ol><li>10.0.0.0 ~ 10.255.255.255</li><li>172.16.0.0 ~ 172.31.255.255</li><li>192.168.0.0 ~ 192.168.255.255</li></ol><p>VPN ʹ�ù��õĻ�������Ϊ��������ר����֮���ͨ�����塣ר��ָ�����ڵ�����ֻ�뱾�����ڵ���������ͨ�ţ�����ָ�������ǡ�����ʵ���ϲ����ǣ����о������õĻ�������</p><p>��ͼ�У����� A �� B ��ͨ�Ų�������������������� A ������ X Ҫ����һ������ B ������ Y ͨ�ţ�IP ���ݱ���Դ��ַ�� 10.1.0.1��Ŀ�ĵ�ַ�� 10.2.0.3�����ݱ��ȷ��͵��뻥����������·���� R1��R1 ���ڲ����ݽ��м��ܣ�Ȼ�����¼������ݱ����ײ���Դ��ַ��·���� R1 ��ȫ���ַ 125.1.2.3��Ŀ�ĵ�ַ��·���� R2 ��ȫ���ַ 194.4.5.6��·���� R2 �յ����ݱ������ݲ��ֽ��н��ܣ��ָ�ԭ�������ݱ�����ʱĿ�ĵ�ַΪ 10.2.0.3���ͽ����� Y��</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/bf4ed077-d481-4db7-9e7a-85d841a5a8c3.jpg" alt=""></p><h2 id="�����ַת��-NAT"><a href="#�����ַת��-NAT" class="headerlink" title="�����ַת�� NAT"></a>�����ַת�� NAT</h2><p>ר�����ڲ�������ʹ�ñ��� IP ��ַ����ͻ������ϵ�����ͨ��ʱ������ʹ�� NAT �������� IP ת��Ϊȫ�� IP��</p><p>����ǰ��NAT ������ IP ��ȫ�� IP һһ��Ӧ�����ַ�ʽ��ӵ�� n ��ȫ�� IP ��ַ��ר���������ֻ����ͬʱ�� n ̨�������뻥������Ϊ�˸���Ч������ȫ�� IP ��ַ�����ڳ��õ� NAT ת����������Ķ˿ں�Ҳ�����ˣ���������ʹ�ö��ר�����ڲ�����������һ��ȫ�� IP ��ַ��ʹ�ö˿ںŵ� NAT Ҳ���������ַ��˿�ת�� NAPT��</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/0f31bc7a-d60b-48a6-8e3f-597708369e52.png" alt=""></p><h1 id="������-�����-1"><a href="#������-�����-1" class="headerlink" title="������ �����*"></a>������ �����*</h1><p>�����ֻ�ѷ��鷢�͵�Ŀ����������������ͨ�ŵĲ������������������еĽ��̡�</p><p>������ṩ��Ӧ�ý��̼���߼�ͨ�š��������߲��û����������������ĺ���ϸ�ڣ�ʹӦ�ó��򿴼��ĺ��������������ʵ��֮����һ���˵��˵��߼�ͨ���ŵ���</p><h2 id="UDP-��-TCP-���ص�"><a href="#UDP-��-TCP-���ص�" class="headerlink" title="UDP �� TCP ���ص�"></a>UDP �� TCP ���ص�</h2><p>�û����ݰ�Э�� UDP��User Datagram Protocol��<br>�������Э�� TCP��Transmission Control Protocol��</p><p>UDP �������ӵģ��������ܽ�����û��ӵ�����ƣ������ģ�����Ӧ�ó��������ı��Ĳ��ϲ�Ҳ����֣�ֻ����� UDP �ײ�����</p><p>TCP ���������ӵģ��ṩ�ɿ����������������ƣ�ӵ�����ƣ��ṩȫ˫��ͨ�ţ������ֽ�������Ӧ�ò㴫�����ı��Ŀ����ֽ��������ֽ�����֯�ɴ�С���ȵ����ݿ飩</p><h2 id="UDP-�ײ���ʽ"><a href="#UDP-�ײ���ʽ" class="headerlink" title="UDP �ײ���ʽ"></a>UDP �ײ���ʽ</h2><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/bd6c05f3-02ee-4c8a-b374-40c87154a898.jpg" alt=""></p><p>�ײ��ֶ�ֻ�� 8 ���ֽڣ�����Դ�˿ڡ�Ŀ�Ķ˿ڡ����ȡ�����͡�12 �ֽڵ�α�ײ���Ϊ�˼������Ͷ���ʱ��ӵġ�</p><h2 id="TCP-�ײ���ʽ"><a href="#TCP-�ײ���ʽ" class="headerlink" title="TCP �ײ���ʽ"></a>TCP �ײ���ʽ</h2><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/21a00b02-c0a6-4bcd-9af0-5ec6bb66e34c.jpg" alt=""></p><p><strong>���</strong> �����ڶ��ֽ������б�ţ��������Ϊ 301����ʾ��һ���ֽڵı��Ϊ 301�����Я�������ݳ���Ϊ 100 �ֽڣ���ô��һ�����Ķε����ӦΪ 401��</p><p><strong>ȷ�Ϻ�</strong> �������յ�����һ�����Ķε���š����� B ��ȷ�յ� A ��������һ�����ĶΣ����Ϊ 501��Я�������ݳ���Ϊ 200 �ֽڣ���� B ������һ�����Ķε����Ϊ 701��B ���͸� A ��ȷ�ϱ��Ķ���ȷ�Ϻž�Ϊ 701��</p><p><strong>����ƫ��</strong> ��ָ�������ݲ��־��뱨�Ķ���ʼ����ƫ������ʵ����ָ�����ײ��ĳ��ȡ�</p><p><strong>ȷ�� ACK</strong> ���� ACK=1 ʱȷ�Ϻ��ֶ���Ч��������Ч��TCP �涨�������ӽ��������д��͵ı��Ķζ������ ACK �� 1��</p><p><strong>ͬ�� SYN</strong> �������ӽ���ʱ����ͬ����š��� SYN=1��ACK=0 ʱ��ʾ����һ�����������ĶΡ���Է�ͬ�⽨�����ӣ�����Ӧ������ SYN=1��ACK=1��</p><p><strong>��ֹ FIN</strong> �������ͷ�һ�����ӣ��� FIN=1 ʱ����ʾ�˱��Ķεķ��ͷ��������ѷ�����ϣ���Ҫ���ͷ��������ӡ�</p><p><strong>����</strong> ������ֵ��Ϊ���շ��÷��ͷ������䷢�ʹ��ڵ����ݡ�֮����Ҫ��������ƣ�����Ϊ���շ������ݻ���ռ������޵ġ�</p><h2 id="TCP-����������"><a href="#TCP-����������" class="headerlink" title="TCP ����������"></a>TCP ����������</h2><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/086871db-5871-460f-97b7-126cd738bb0e.jpg" alt=""></p><p>���� A Ϊ�ͻ��ˣ�B Ϊ�������ˡ�</p><ol><li>���� B ���� LISTEN��������״̬���ȴ��ͻ�����������</li><li>A �� B �������������ĶΣ�SYN=1��ACK=0��ѡ��һ����ʼ����� x��</li><li>B �յ����������ĶΣ����ͬ�⽨�����ӣ����� A ��������ȷ�ϱ��ĶΣ�SYN=1��ACK=1��ȷ�Ϻ�Ϊ x+1��ͬʱҲѡ��һ����ʼ����� y��</li><li>A �յ� B ������ȷ�ϱ��Ķκ󣬻�Ҫ�� B ����ȷ�ϣ�ȷ�Ϻ�Ϊ y+1�����Ϊ x+1��</li><li>B �յ� A ��ȷ�Ϻ����ӽ�����</li></ol><h2 id="TCP-���Jλ���"><a href="#TCP-���Jλ���" class="headerlink" title="TCP ���Ĵλ���"></a>TCP ���Ĵλ���</h2><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/78f65456-666b-4044-b4ee-f7692dbbc0d3.jpg" alt=""></p><p>����������������ź�ȷ�Ϻţ���Ϊ��ź�ȷ�ϺŵĹ���Ƚϼ򵥡����Ҳ����� ACK����Ϊ ACK �����ӽ���֮��Ϊ 1��</p><ol><li>A ���������ͷű��ĶΣ�FIN=1��</li><li>B �յ�֮�󷢳�ȷ�ϣ���ʱ TCP ���ڰ�ر�״̬��B ���� A �������ݵ��� A ������ B �������ݣ�</li><li>�� B Ҫ������Ҫ����ʱ�����������ͷ������ĶΣ�FIN=1��</li><li>A �յ��󷢳�ȷ�ϣ���ʱ�����ͷš�</li></ol><p><strong>TIME_WAIT</strong></p><p>�ͻ��˽��յ��������˵� FIN ���ĺ�����״̬����ʱ������ֱ�ӽ��� CLOSED ״̬������Ҫ�ȴ�һ��ʱ���ʱ�����õ�ʱ�䡣��ô�����������ɣ�</p><ol><li>ȷ�����һ��ȷ�ϱ��Ķ��ܹ������� B û�յ� A ��������ȷ�ϱ��ĶΣ���ô�ͻ����·��������ͷ������ĶΣ�A �ȴ�һ��ʱ�����Ϊ�˴�����������ķ�����</li><li>���ܴ��ڡ���ʧЧ�����������ĶΡ���Ϊ�˷�ֹ���ֱ��Ķγ����ڱ�������֮�⣬��Ҫ�ȴ�һ��ʱ�䡣</li></ol><h2 id="TCP-��������"><a href="#TCP-��������" class="headerlink" title="TCP ��������"></a>TCP ��������</h2><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/223fc26e-2fd6-484c-bcb7-443cac134f15.jpg" alt=""></p><p>�����ǻ����һ���֣�������ʱ����ֽ��������ͷ��ͽ��շ�����һ�����ڣ����շ�ͨ�� TCP ���Ķ��еĴ����ֶθ��߷��ͷ��Լ��Ĵ��ڴ�С�����ͷ��������ֵ��������Ϣ�����Լ��Ĵ��ڴ�С��</p><p>���ʹ����ڵ��ֽڶ��������ͣ����մ����ڵ��ֽڶ��������ա�������ʹ����󲿵��ֽ��Ѿ����Ͳ����յ���ȷ�ϣ���ô�ͽ����ʹ������һ���һ�����룬ֱ���󲿵�һ���ֽڲ����ѷ��Ͳ�����ȷ�ϵ�״̬�����մ��ڵĻ������ƣ����մ������ֽ��Ѿ�����ȷ�ϲ����������������һ������մ��ڡ�</p><p>���մ���ֻ��Դ��������һ�����򵽴���ֽڽ���ȷ�ϣ�������մ����Ѿ��յ����ֽ�Ϊ {31, 32, 34, 35}������ {31, 32} ���򵽴�� {34, 35} �Ͳ��ǣ����ֻ���ֽ� 32 ����ȷ�ϡ����ͷ��õ�һ���ֽڵ�ȷ��֮�󣬾�֪������ֽ�֮ǰ�������ֽڶ��Ѿ������ա�</p><h2 id="TCP-�ɿ�����"><a href="#TCP-�ɿ�����" class="headerlink" title="TCP �ɿ�����"></a>TCP �ɿ�����</h2><p>TCP ʹ�ó�ʱ�ش���ʵ�ֿɿ����䣺���һ���Ѿ����͵ı��Ķ��ڳ�ʱʱ����û���յ�ȷ�ϣ���ô���ش�������ĶΡ�</p><p>һ�����Ķδӷ����ٵ����յ�ȷ����������ʱ���Ϊ����ʱ�� RTT����Ȩƽ������ʱ�� RTTs �������£�</p><p><img src="http://latex.codecogs.com/gif.latex?\\\\RTTs=(1-a" alt=""><em>(RTTs)+a</em>RTT)</p><p>��ʱʱ�� RTO Ӧ���Դ��� RRTs��TCP ʹ�õĳ�ʱʱ��������£�</p><p><img src="http://latex.codecogs.com/gif.latex?\\\\RTO=RTTs+4*RTT_d" alt=""></p><p>���� RTT<sub>d</sub> Ϊƫ������µ� RRT �� RRTs �йء�</p><h2 id="TCP-��������-1"><a href="#TCP-��������-1" class="headerlink" title="TCP ��������"></a>TCP ��������</h2><p>����������Ϊ�˿��Ʒ��ͷ��������ʣ���֤���շ����ü����ա�</p><p>���շ����͵�ȷ�ϱ����еĴ����ֶο����������Ʒ��ͷ����ڴ�С���Ӷ�Ӱ�췢�ͷ��ķ������ʡ����罫�����ֶ�����Ϊ 0�����ͷ����ܷ������ݡ�</p><h2 id="TCP-ӵ������"><a href="#TCP-ӵ������" class="headerlink" title="TCP ӵ������"></a>TCP ӵ������</h2><p>����������ӵ�������齫�ᶪʧ����ʱ���ͷ�������ش����Ӷ���������ӵ���̶ȸ��ߡ���˵�����ӵ��ʱ��Ӧ�����Ʒ��ͷ������ʡ���һ����������ƺ��񣬵��ǳ����㲻ͬ������������Ϊ���ý��շ������ü����ܣ���ӵ��������Ϊ�˽������������ӵ���̶ȡ�</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/a69af9bb-b5ad-4896-862d-697e5ee4feb1.png" alt=""></p><p>TCP ��Ҫͨ�������㷨������ӵ�����ƣ�����ʼ��ӵ�����⡢���ش�����ָ������ͷ���Ҫά����һ������ӵ�����ڣ�cwnd����״̬������ע��ӵ�������뷢�ͷ����ڵ�����ӵ������ֻ��һ��״̬������ʵ�ʾ������ͷ��ܷ��Ͷ������ݵ��Ƿ��ͷ����ڡ�</p><p>Ϊ�˱������ۣ������¼��裺</p><ol><li>���շ����㹻��Ľ��ջ��棬��˲��ᷢ���������ƣ�</li><li>��Ȼ TCP �Ĵ��ڻ����ֽڣ����������贰�ڵĴ�С��λΪ���ĶΡ�</li></ol><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/346244ff-98c1-4f12-9a87-d0832e8c04cf.jpg" alt=""></p><h3 id="����ʼ��ӵ������"><a href="#����ʼ��ӵ������" class="headerlink" title="����ʼ��ӵ������"></a>����ʼ��ӵ������</h3><p>���͵����ִ������ʼ���� cwnd=1�����ͷ�ֻ�ܷ��� 1 �����ĶΣ����յ�ȷ�Ϻ󣬽� cwnd �ӱ������֮���ͷ��ܹ����͵ı��Ķ�Ϊ��2��4��8 …</p><p>ע�⵽����ʼÿ���ִζ��� cwnd �ӱ����������� cwnd �����ٶȷǳ��죬�Ӷ�ʹ�÷��ͷ����͵��ٶ������ٶȹ��죬����ӵ���Ŀ���Ҳ�͸��ߡ�����һ������ʼ���� ssthresh���� cwnd &gt;= ssthresh ʱ������ӵ�����⣬ÿ���ִ�ֻ�� cwnd �� 1��</p><p>��������˳�ʱ������ ssthresh = cwnd / 2��Ȼ������ִ������ʼ��</p><h3 id="���ش����ָ�"><a href="#���ش����ָ�" class="headerlink" title="���ش����ָ�"></a>���ش����ָ�</h3><p>�ڽ��շ���Ҫ��ÿ�ν��յ����Ķζ�Ӧ�÷��Ͷ����յ������Ķε�ȷ�ϣ������Ѿ����յ� M<sub>1</sub> �� M<sub>2</sub>����ʱ�յ� M<sub>4</sub>��Ӧ�����Ͷ� M<sub>2</sub> ��ȷ�ϡ�</p><p>�ڷ��ͷ�������յ������ظ�ȷ�ϣ���ô����ȷ����һ�����Ķζ�ʧ�������յ����� M<sub>2</sub> ���� M<sub>3</sub> ��ʧ����ʱִ�п��ش��������ش���һ�����ĶΡ�</p><p>����������£�ֻ�Ƕ�ʧ�����ĶΣ�����������ӵ�������ִ�п�ָ����� ssthresh = cwnd / 2 ��cwnd = ssthresh��ע�⵽��ʱֱ�ӽ���ӵ�����⡣</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/b18d679b-c8e2-4564-88ee-7600090e46da.jpg" alt=""></p><h1 id="������-Ӧ�o�"><a href="#������-Ӧ�o�" class="headerlink" title="������ Ӧ�ò�*"></a>������ Ӧ�ò�*</h1><h2 id="����ϵͳ-DNS"><a href="#����ϵͳ-DNS" class="headerlink" title="����ϵͳ DNS"></a>����ϵͳ DNS</h2><p>������������Ϊ IP ��ַ��</p><p>����Ƴɷֲ�ʽϵͳ��</p><h3 id="1-��νu"><a href="#1-��νu" class="headerlink" title="1. ��νṹ"></a>1. ��νṹ</h3><p>һ�������ɶ����ι��ɣ����ϲ㵽�²�ֱ�Ϊ�����������������������������Լ��ļ������������������Ի���һ����������</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/c2117f61-1177-4768-bf33-cf4f950d911c.png" alt=""></p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/a4b162e5-db2a-4a27-b213-1fe481c5a06a.png" alt=""></p><p>�������������Է�Ϊ�������ࣺ</p><p><strong>(1) ������������</strong>����������������</p><p><strong>(2) ��������������</strong>����������������</p><p><strong>(3) Ȩ������������</strong>���������ڵ�������</p><p>������ĸ��ͬ��������һ�����л��ֶ������ͼ b ���� abc.com �л�������������abc.com �� y.abc.com</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/fc0c6b2d-68c7-4de8-aaaa-97355a4f0472.jpg" alt=""></p><p>��˾���Ҫ����Ȩ��������������</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/8b335d94-c1ca-42e1-ad48-bb179d28a4f1.jpg" alt=""></p><p><strong>(4) ��������������</strong>��Ҳ��ΪĬ���������������������������ø��ٻ��档</p><h3 id="2-��������-1"><a href="#2-��������-1" class="headerlink" title="2. ��������"></a>2. ��������</h3><p>�����򱾵����������������Ĺ��̲��õݹ飬����������������������������������������ʹ�õݹ�͵������ַ�ʽ��</p><p>�����ķ�ʽ�£�����������������һ�����������������������֮�󣬽�����ص�����������������Ȼ�󱾵�������������������������������������������ݹ�ط�ʽ�£��������ֱ�ӷ��صģ����Ǽ�����ǰ������������Ľ���Ż᷵�ء�</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/6bc61bb8-3b1c-4dc8-ac25-cef925ace0eb.jpg" alt=""></p><h2 id="�l�����Э��-FTP"><a href="#�l�����Э��-FTP" class="headerlink" title="�ļ�����Э�� FTP"></a>�ļ�����Э�� FTP</h2><p>FTP �������ʹ�� TCP��������Ҫ�����������е� TCP ���ӣ��������Ӻ��������ӡ����������������Ự�ڼ�һֱ���ִ򿪣����������������ݴ������֮��͹رա���������ʹ�ö˿ں� 21����������ʹ�ö˿ں� 20��</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/58633775-8584-4a01-ad3f-eee4d9a466e1.jpg" alt=""></p><h2 id="Զ���ն�Э��-TELNET"><a href="#Զ���ն�Э��-TELNET" class="headerlink" title="Զ���ն�Э�� TELNET"></a>Զ���ն�Э�� TELNET</h2><p>TELNET ���ڵ�¼��Զ�������ϣ�����Զ�������ϵ����Ҳ�᷵�ء�</p><p>TELNET ������Ӧ��������Ͳ���ϵͳ�Ĳ��죬���粻ͬ����ϵͳϵͳ�Ļ��з����塣</p><h2 id="��ά��-WWW"><a href="#��ά��-WWW" class="headerlink" title="��ά�� WWW"></a>��ά�� WWW</h2><p>�� HTTP �ʼǡ�</p><h2 id="�����ʼ�Э��"><a href="#�����ʼ�Э��" class="headerlink" title="�����ʼ�Э��"></a>�����ʼ�Э��</h2><p>һ�������ʼ�ϵͳ����������ɣ��û������ʼ��������Լ��ʼ�����Э��Ͷ�ȡЭ�顣���з���Э�鳣�� SMTP����ȡЭ�鳣�� POP3 �� IMAP��</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/de1e46d2-748f-4da3-a29e-7de7bc840366.jpg" alt=""></p><h3 id="POP3"><a href="#POP3" class="headerlink" title="POP3"></a>POP3</h3><p>POP3 ���ص���ֻҪ�û��ӷ������϶�ȡ���ʼ����ͰѸ��ʼ�ɾ����</p><h3 id="IMAP"><a href="#IMAP" class="headerlink" title="IMAP"></a>IMAP</h3><p>IMAP Э���пͻ��˺ͷ������ϵ��ʼ�����ͬ���������ȥ�ֶ�ɾ���ʼ�����ô�������ϵ��ʼ�Ҳ���ᱻɾ����IMAP ���������������û���ʱ���ȥ���ʷ������ϵ��ʼ���IMAP Э��Ҳ֧�ִ����Զ�����ļ��С�</p><h3 id="SMTP"><a href="#SMTP" class="headerlink" title="SMTP"></a>SMTP</h3><p>SMTP ֻ�ܷ��� ASCII �룬���������ʼ����� MIME ���Է��Ͷ������ļ���MIME ��û�иĶ�����ȡ�� SMTP�����������ʼ�����Ľṹ�������˷� ASCII ��ı������</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/ed5522bb-3a60-481c-8654-43e7195a48fe.png" alt=""></p><h2 id="��̬��������Э��-DHCP"><a href="#��̬��������Э��-DHCP" class="headerlink" title="��̬��������Э�� DHCP"></a>��̬��������Э�� DHCP</h2><p>DHCP �ṩ�˼��弴�õ�������ʽ���û�������Ҫȥ�ֶ����� IP ��ַ����Ϣ��</p><p>DHCP ���õ����ݲ����� IP ��ַ���������������롢Ĭ��·���� IP ��ַ�������������� IP ��ַ��</p><p>������ʽ���£���Ҫ IP ��ַ�������㲥���� DHCP ���ֱ��ģ���Ŀ�ĵ�ַ��Ϊȫ 1���� 255.255.255.255:67��Դ��ַ����Ϊȫ 0���� 0.0.0.0:68����DHCP �������յ����ֱ���֮������ IP ��ַ����ȡһ����ַ������ DHCP �ṩ���ĸ���������</p><h2 id="��Ե㴫��-P2P"><a href="#��Ե㴫��-P2P" class="headerlink" title="��Ե㴫�� P2P"></a>��Ե㴫�� P2P</h2><p>��ĳ���ļ��ַ������жԵȼ��ϳ�Ϊһ���������ļ������ݵ�Ԫ��Ϊ�ļ��飬���Ĵ�С�ǹ̶��ġ�һ���µĶԵȷ�����ĳ��������һ��ʼ��û���ļ��飬�����ܹ��������Եȷ����𽥵����ص�һЩ�ļ��飬���ͬʱ����ҲΪ��ĶԵȷ��ϴ�һЩ�ļ��顣</p><p>ÿ����������һ��������ʩ����Ϊ׷��������һ���Եȷ��������ʱ��������׷�����Ǽǣ��������Ե�֪ͨ׷���������ں����С��������κ�ʱ�������˳�ĳ��������</p><p>һ���µĶԵȷ��������ʱ��׷����������Ӻ�����ѡ����ɸ��Եȷ��������¶Եȷ�����Щ�Եȷ��������ӣ�����Щ�Եȷ���Ϊ���ڶԵȷ������պͷ����ļ��鶼�������ڶԵȷ��н��С�</p><p>��һ���Եȷ���Ҫ�ܶ��ļ���ʱ��ͨ��ʹ����ϡ�����ȵĲ�����ȡ���ļ��飬Ҳ����һ���ļ��������ڶԵȷ��и������٣���ô��������������ļ��顣</p><p>���ܶ�Եȷ���ͬһ���Եȷ������ļ���ʱ���öԵȷ�����ѡ��������������䷢���ļ���ĶԵȷ���</p><p>P2P ��һ���ֲ�ʽϵͳ���κ�ʱ���жԵȷ���������˳���ʹ�÷ֲ�ʽɢ�б� DHT�����Բ��Һ����е���Դ�� IP ��ַӳ�䡣</p><h2 id="Web-ҳ���������"><a href="#Web-ҳ���������" class="headerlink" title="Web ҳ���������"></a>Web ҳ���������</h2><ol><li><p>�� DNS ���������� DNS ��ѯ����������������</p></li><li><p>��ʼ���� HTTP �Ự����Ҫ�Ƚ��� TCP ���ӡ�</p></li><li><p>�������Ĵ�������У�HTTP ���ı���װ�� TCP �С�HTTP ������ʹ�ö˿ں� 80����Ϊ�������������� 80 �˿ڡ����ӽ���֮�󣬷��������������һ���˿ںŸ��ض��Ŀͻ��ˣ�֮��� TCP ���䶼�����������Ķ˿ںš�</p></li><li><p>�������Ĵ�������У�TCP ���Ķλᱻ��װ�� IP �����У�IP ���龭��·��ѡ����󵽴�Ŀ�ĵء�</p></li><li><p>����·�㣬IP ����ᱻ��װ�� MAC ֡�У�IP ��ַ������ MAC ��ַ��Ҫʹ�� ARP��</p></li><li><p>�ͻ��˷��� HTTP �����ģ������ȡҳ�档</p></li><li><p>���������� HTTP ��Ӧ���ģ��ͻ��˴Ӷ���ȡ��ҳ�档</p></li><li><p>������õ�ҳ������֮�󣬽�������Ⱦ�����û�չʾҳ�档</p></li></ol><h2 id="���o˿�"><a href="#���o˿�" class="headerlink" title="���ö˿�"></a>���ö˿�</h2><table><thead><tr><th>Ӧ�ò�Э��</th><th>�˿ں�</th><th>�����Э��</th></tr></thead><tbody><tr><td>DNS</td><td>53</td><td>UDP</td></tr><tr><td>FTP</td><td>�������� 21���������� 20</td><td>TCP</td></tr><tr><td>TELNET</td><td>23</td><td>TCP</td></tr><tr><td>DHCP</td><td>67 68</td><td>UDP</td></tr><tr><td>HTTP</td><td>80</td><td>TCP</td></tr><tr><td>SMTP</td><td>25</td><td>TCP</td></tr><tr><td>POP3</td><td>110</td><td>TCP</td></tr><tr><td>IMAP</td><td>143</td><td>TCP</td></tr></tbody></table><h1 id="�ο�����"><a href="#�ο�����" class="headerlink" title="�ο�����"></a>�ο�����</h1><ul><li>��������� ���߰�</li><li>�Զ����¼��������</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- GFM-TOC --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#��һ��-����&quot;&gt;��һ�� ����&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#���������&quot;&gt;���������&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#isp&quot;&gt;ISP&lt;/a&gt;&lt;/l
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2018/03/29/programming-basics-master/notes/%E8%AE%A1%E7%AE%97%E6%9C%BA%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/"/>
    <id>http://yoursite.com/2018/03/29/programming-basics-master/notes/计算机操作系统/</id>
    <published>2018-03-29T14:37:48.209Z</published>
    <updated>2018-02-26T04:13:28.000Z</updated>
    
    <content type="html"><![CDATA[<!-- GFM-TOC --><ul><li><a href="#��һ��-����">��һ�� ����</a><ul><li><a href="#����ϵͳ��������">����ϵͳ��������</a><ul><li><a href="#1-����">1. ����</a></li><li><a href="#2-����">2. ����</a></li><li><a href="#3-����">3. ����</a></li><li><a href="#4-�첽">4. �첽</a></li></ul></li><li><a href="#ϵͳ����">ϵͳ����</a></li><li><a href="#�жϷ���">�жϷ���</a><ul><li><a href="#1-���ж�">1. ���ж�</a></li><li><a href="#2-�쳣">2. �쳣</a></li><li><a href="#3-����">3. ����</a></li></ul></li><li><a href="#���ں˺�΢�ں�">���ں˺�΢�ں�</a><ul><li><a href="#1-���ں�">1. ���ں�</a></li><li><a href="#2-΢�ں�">2. ΢�ں�</a></li></ul></li></ul></li><li><a href="#�ڶ���-���̹���">�ڶ��� ���̹���</a><ul><li><a href="#�������߳�">�������߳�</a><ul><li><a href="#1-����">1. ����</a></li><li><a href="#2-�߳�">2. �߳�</a></li><li><a href="#3-����">3. ����</a></li></ul></li><li><a href="#����״̬���л�">����״̬���л�</a></li><li><a href="#�����㷨">�����㷨</a><ul><li><a href="#1-������ϵͳ�еĵ���">1. ������ϵͳ�еĵ���</a><ul><li><a href="#11-�����ȷ���fcfs">1.1 �����ȷ���FCFS��</a></li><li><a href="#12-����ҵ����sjf">1.2 ����ҵ���ȣ�SJF��</a></li><li><a href="#13-���ʣ��ʱ������srtn">1.3 ���ʣ��ʱ�����ȣ�SRTN��</a></li></ul></li><li><a href="#2-����ʽϵͳ�еĵ���">2. ����ʽϵͳ�еĵ���</a><ul><li><a href="#21-����Ȩ����">2.1 ����Ȩ����</a></li><li><a href="#22-ʱ��Ƭ��ת">2.2 ʱ��Ƭ��ת</a></li><li><a href="#23-�༶��������">2.3 �༶��������</a></li><li><a href="#24-�̽�������">2.4 �̽�������</a></li></ul></li><li><a href="#3-ʵʱϵͳ�еĵ���">3. ʵʱϵͳ�еĵ���</a></li></ul></li><li><a href="#����ͬ��">����ͬ��</a><ul><li><a href="#1-�ٽ���">1. �ٽ���</a></li><li><a href="#2-ͬ���뻥��">2. ͬ���뻥��</a></li><li><a href="#3-�ź���">3. �ź���</a></li><li><a href="#4-�ܳ�">4. �ܳ�</a></li></ul></li><li><a href="#����ͨ��">����ͨ��</a><ul><li><a href="#1-�ܵ�">1. �ܵ�</a></li><li><a href="#2-�ź���">2. �ź���</a></li><li><a href="#3-��Ϣ����">3. ��Ϣ����</a></li><li><a href="#4-�ź�">4. �ź�</a></li><li><a href="#5-�����ڴ�">5. �����ڴ�</a></li><li><a href="#6-�׽���">6. �׽���</a></li></ul></li><li><a href="#����ͬ������">����ͬ������</a><ul><li><a href="#1-����-д������">1. ����-д������</a></li><li><a href="#2-��ѧ�ҽ�������">2. ��ѧ�ҽ�������</a></li></ul></li></ul></li><li><a href="#������-����">������ ����</a><ul><li><a href="#����������">����������</a></li><li><a href="#�����Ĵ�����">�����Ĵ�����</a><ul><li><a href="#1-�������">1. �������</a></li><li><a href="#2-����Ԥ��">2. ����Ԥ��</a><ul><li><a href="#21-�ƻ���������">2.1 �ƻ���������</a></li><li><a href="#22-�ƻ������뱣������">2.2 �ƻ������뱣������</a></li><li><a href="#23-�ƻ�������ռ����">2.3 �ƻ�������ռ����</a></li><li><a href="#24-�ƻ���·�ȴ�">2.4 �ƻ���·�ȴ�</a></li></ul></li><li><a href="#3-��������">3. ��������</a><ul><li><a href="#31-��ȫ״̬">3.1 ��ȫ״̬</a></li><li><a href="#32-������Դ�����м��㷨">3.2 ������Դ�����м��㷨</a></li><li><a href="#33-�����Դ�����м��㷨">3.3 �����Դ�����м��㷨</a></li></ul></li><li><a href="#4-��������������ָ�">4. ��������������ָ�</a><ul><li><a href="#41-��������㷨">4.1 ��������㷨</a></li><li><a href="#42-�����ָ�">4.2 �����ָ�</a></li></ul></li></ul></li></ul></li><li><a href="#������-�洢������">������ �洢������</a><ul><li><a href="#�����ڴ�">�����ڴ�</a></li><li><a href="#��ҳ��ֶ�">��ҳ��ֶ�</a><ul><li><a href="#1-��ҳ">1. ��ҳ</a></li><li><a href="#2-�ֶ�">2. �ֶ�</a></li><li><a href="#3-��ҳʽ">3. ��ҳʽ</a></li><li><a href="#4-��ҳ��ֶ�����">4. ��ҳ��ֶ�����</a></li></ul></li><li><a href="#ҳ���û��㷨">ҳ���û��㷨</a><ul><li><a href="#1-���optimal">1. ��ѣ�Optimal��</a></li><li><a href="#2-�Ƚ��ȳ�fifo">2. �Ƚ��ȳ���FIFO��</a></li><li><a href="#3-������δʹ��lru,-least-recently-used">3. ������δʹ�ã�LRU, Least Recently Used��</a></li><li><a href="#4-ʱ��clock">4. ʱ�ӣ�Clock��</a></li></ul></li></ul></li><li><a href="#������-�豸����">������ �豸����</a><ul><li><a href="#���̵����㷨">���̵����㷨</a><ul><li><a href="#1-�����ȷ���fcfs,-first-come-first-serverd">1. �����ȷ���FCFS, First Come First Serverd��</a></li><li><a href="#2-���Ѱ��ʱ������sstf,-shortest-seek-time-first">2. ���Ѱ��ʱ�����ȣ�SSTF, Shortest Seek Time First��</a></li><li><a href="#3-ɨ���㷨scan">3. ɨ���㷨��SCAN��</a></li><li><a href="#4-ѭ��ɨ���㷨cscan">4. ѭ��ɨ���㷨��CSCAN��</a></li></ul></li></ul></li><li><a href="#�ο�����">�ο�����</a><!-- GFM-TOC --></li></ul><h1 id="��һ��-����"><a href="#��һ��-����" class="headerlink" title="��һ�� ����"></a>��һ�� ����</h1><h2 id="����ϵͳ��������"><a href="#����ϵͳ��������" class="headerlink" title="����ϵͳ��������"></a>����ϵͳ��������</h2><h3 id="1-����"><a href="#1-����" class="headerlink" title="1. ����"></a>1. ����</h3><p>��������ָ�������һ��ʱ������ͬʱ���ж�����򣬶���������ָͬһʱ�������ж��ָ�</p><p>������ҪӲ��֧�֣������ˮ�߻��߶ദ������</p><p>����ϵͳͨ��������̺��̣߳�ʹ�ó����ܹ��������С�</p><h3 id="2-����"><a href="#2-����" class="headerlink" title="2. ����"></a>2. ����</h3><p>������ָϵͳ�е���Դ���Թ���������Ľ��̹�ͬʹ�á�</p><p>�����ֹ���ʽ�����⹲���ͬʱ����</p><p>���⹲�����Դ��Ϊ�ٽ���Դ�������ӡ���ȣ���ͬһʱ��ֻ����һ�����̷��ʣ��������ִ�����Ҫ��ͬ��������ʵ�ֶ��ٽ���Դ�ķ��ʡ�</p><h3 id="3-����"><a href="#3-����" class="headerlink" title="3. ����"></a>3. ����</h3><p>���⼼����һ������ʵ��ת��Ϊ����߼�ʵ�塣��Ҫ���������⼼����ʱ�ָ��ü����Ϳշָ��ü�������������������ͬһ���������ϲ���ִ��ʹ����ʱ�ָ��ü�������ÿ����������ռ�д�������ÿ��ִֻ��һС��ʱ��Ƭ�������л��������ͺ����ж�����������д���</p><h3 id="4-�첽"><a href="#4-�첽" class="headerlink" title="4. �첽"></a>4. �첽</h3><p>�첽��ָ���̲���һ����ִ����ϣ���������ͣͣ���Բ���֪���ٶ���ǰ�ƽ���</p><h2 id="ϵͳ����"><a href="#ϵͳ����" class="headerlink" title="ϵͳ����"></a>ϵͳ����</h2><p>���һ���������û�̬��Ҫ�õ�����ϵͳ��һЩ���ܣ�����Ҫʹ��ϵͳ���ôӶ������ںˣ��ɲ���ϵͳ��Ϊ��ɡ�</p><p>������ϵͳ��������Ĺ������豸�����ļ��������̹�������ͨ�š��洢������ȡ�</p><h2 id="�жϷ���"><a href="#�жϷ���" class="headerlink" title="�жϷ���"></a>�жϷ���</h2><h3 id="1-���ж�"><a href="#1-���ж�" class="headerlink" title="1. ���ж�"></a>1. ���ж�</h3><p>�� CPU ִ��ָ��������¼������� I/O �����жϣ���ʾ�豸����/��������Ѿ���ɣ��������ܹ�������һ������/������󡣴��⻹��ʱ���жϡ�����̨�жϵȡ�</p><h3 id="2-�쳣"><a href="#2-�쳣" class="headerlink" title="2. �쳣"></a>2. �쳣</h3><p>�� CPU ִ��ָ����ڲ��¼�������Ƿ������롢��ַԽ�硢��������ȡ�</p><h3 id="3-����-1"><a href="#3-����-1" class="headerlink" title="3. ����"></a>3. ����</h3><p>���û�������ʹ��ϵͳ���á�</p><h2 id="���ں˺�΢�ں�"><a href="#���ں˺�΢�ں�" class="headerlink" title="���ں˺�΢�ں�"></a>���ں˺�΢�ں�</h2><h3 id="1-���ں�"><a href="#1-���ں�" class="headerlink" title="1. ���ں�"></a>1. ���ں�</h3><p>���ں��ǽ�����ϵͳ������Ϊһ�����ܽ�ϵ�����ŵ��ںˣ����ڸ�ģ�鹲����Ϣ������кܸߵ����ܡ�</p><h3 id="2-΢�ں�"><a href="#2-΢�ں�" class="headerlink" title="2. ΢�ں�"></a>2. ΢�ں�</h3><p>���ڲ���ϵͳ���ϸ��ӣ���˽�һ���ֲ���ϵͳ�����Ƴ��ںˣ��Ӷ������ں˵ĸ����ԡ��Ƴ��Ĳ��ָ��ݷֲ��ԭ�򻮷ֳ���ɷ����໥������������ҪƵ�������û�̬�ͺ���̬֮������л�������һ����������ʧ��</p><h1 id="�ڶ���-���̹���"><a href="#�ڶ���-���̹���" class="headerlink" title="�ڶ��� ���̹���"></a>�ڶ��� ���̹���</h1><h2 id="�������߳�"><a href="#�������߳�" class="headerlink" title="�������߳�"></a>�������߳�</h2><h3 id="1-����-1"><a href="#1-����-1" class="headerlink" title="1. ����"></a>1. ����</h3><p>�����ǲ���ϵͳ������Դ����Ļ�����λ��</p><p>���̿��ƿ� (Process Control Block, PCB) �������̵Ļ�����Ϣ������״̬����ν�Ĵ������̺ͳ������̣�����ָ�� PCB �Ĳ�����</p><h3 id="2-�߳�"><a href="#2-�߳�" class="headerlink" title="2. �߳�"></a>2. �߳�</h3><p>һ���߳��п����ж���̣߳��Ƕ������ȵĻ�����λ��ͬһ�������еĶ���߳�֮����Բ���ִ�У����ǹ��������Դ��</p><h3 id="3-����-2"><a href="#3-����-2" class="headerlink" title="3. ����"></a>3. ����</h3><p>�� ӵ����Դ����������Դ����Ļ�����λ�������̲߳�ӵ����Դ���߳̿��Է���������̵���Դ��</p><p>�� ���ȣ��߳��Ƕ������ȵĻ�����λ����ͬһ�����У��̵߳��л�������������л�����һ�������ڵ��߳��л�����һ�������е��߳�ʱ������������л���</p><p>�� ϵͳ���������ڴ�����������ʱ��ϵͳ��ҪΪ֮����������Դ�����ڴ�ռ䡢I/O �豸�ȣ���˲���ϵͳ�������Ŀ���Զ���ڴ��������߳�ʱ�Ŀ��������Ƶأ��ڽ��н����л�ʱ���漰��ǰִ�н��� CPU �����ı��漰�µ��Ƚ��� CPU ���������á����߳��л�ʱֻ�豣������������Ĵ������ݣ�������С�����⣬����ͬһ�����ڵĶ���̹߳�����̵ĵ�ַ�ռ䣬��ˣ���Щ�߳�֮���ͬ����ͨ�ŷǳ�����ʵ�֣������������ϵͳ�ĸ�Ԥ��</p><p>�� ͨ�ŷ��棺���̼�ͨ�� (IPC) ��Ҫ����ͬ���ͻ����ֶεĸ������Ա�֤���ݵ�һ���ԣ����̼߳����ͨ��ֱ�Ӷ�/д�������ݶΣ���ȫ�ֱ�����������ͨ�š�</p><p>������QQ �� ��������������̣���������������кܶ��̣߳����� http �����̡߳��¼���Ӧ�̡߳���Ⱦ�̵߳ȵȣ��̵߳Ĳ���ִ��ʹ����������е��һ�������ӴӶ����� http ����ʱ���������������Ӧ�û��������¼���</p><h2 id="����״̬���л�"><a href="#����״̬���л�" class="headerlink" title="����״̬���л�"></a>����״̬���л�</h2><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/1706ce58-a081-4fed-9b36-c3c0d7e22b3a.jpg" alt=""></p><p>����״̬��ȱ����Ҫ����Դ�Ӷ�������״̬ת�����������Ǹ���Դ������ CPU��ȱ�� CPU ���ý��̴�����̬ת��Ϊ����̬��</p><p>ֻ�о���̬������̬�����໥ת���������Ķ��ǵ���ת��������״̬�Ľ���ͨ�������㷨�Ӷ���� CPU ʱ�䣬תΪ����״̬��������״̬�Ľ��̣��ڷ�������� CPU ʱ��Ƭ����֮��ͻ�תΪ����״̬���ȴ���һ�ε��ȡ�</p><h2 id="�����㷨"><a href="#�����㷨" class="headerlink" title="�����㷨"></a>�����㷨</h2><p>��Ҫ��Բ�ͬ���������۵����㷨��</p><h3 id="1-������ϵͳ�еj���"><a href="#1-������ϵͳ�еj���" class="headerlink" title="1. ������ϵͳ�еĵ���"></a>1. ������ϵͳ�еĵ���</h3><h4 id="1-1-�����ȷ���FCFS��"><a href="#1-1-�����ȷ���FCFS��" class="headerlink" title="1.1 �����ȷ���FCFS��"></a>1.1 �����ȷ���FCFS��</h4><p>first-come first-serverd��</p><p>�������Ƚ���������е���ҵ��</p><p>�����ڳ���ҵ���������ڶ���ҵ����Ϊ����ҵ����һֱ�ȴ�ǰ��ĳ���ҵִ����ϲ���ִ�У�������ҵ����Ҫִ�кܳ�ʱ�䣬����˶���ҵ�ȴ�ʱ�������</p><h4 id="1-2-����ҵ���ou�SJF��"><a href="#1-2-����ҵ���ou�SJF��" class="headerlink" title="1.2 ����ҵ���ȣ�SJF��"></a>1.2 ����ҵ���ȣ�SJF��</h4><p>shortest job first��</p><p>���ȹ�������ʱ����̵���ҵ��</p><p>����ҵ�п��ܻ����������һֱ�ȴ�����ҵִ����ϵ�״̬�����һֱ�ж���ҵ��������ô����ҵ��Զ�ò������ȡ�</p><h4 id="1-3-���ʣ��ʱ�����ou�SRTN��"><a href="#1-3-���ʣ��ʱ�����ou�SRTN��" class="headerlink" title="1.3 ���ʣ��ʱ�����ȣ�SRTN��"></a>1.3 ���ʣ��ʱ�����ȣ�SRTN��</h4><p>shortest remaining time next��</p><h3 id="2-����ʽϵͳ�еj���"><a href="#2-����ʽϵͳ�еj���" class="headerlink" title="2. ����ʽϵͳ�еĵ���"></a>2. ����ʽϵͳ�еĵ���</h3><h4 id="2-1-����E����"><a href="#2-1-����E����" class="headerlink" title="2.1 ����Ȩ����"></a>2.1 ����Ȩ����</h4><p>���˿����ֶ���������Ȩ֮�⣬�����԰���Ӧ����Ϊ����Ȩ�����ֵ��ȷ�ʽ��������Ӧ�����ȵ����㷨��</p><p>��Ӧ�� = (�ȴ�ʱ�� + Ҫ�����ʱ��) / Ҫ�����ʱ�� = ��Ӧʱ�� / Ҫ�����ʱ��</p><p>���ֵ����㷨��Ҫ��Ϊ�˽�� SJF �г���ҵ���ܻ���������⣬��Ϊ���ŵȴ�ʱ�����������Ӧ��Ҳ��Խ��Խ�ߡ�</p><h4 id="2-2-ʱ��T��ת"><a href="#2-2-ʱ��T��ת" class="headerlink" title="2.2 ʱ��Ƭ��ת"></a>2.2 ʱ��Ƭ��ת</h4><p>�����о������̰� FCFS ��ԭ���ų�һ�����У�ÿ�ε���ʱ���� CPU ��������׽��̣��ý��̿���ִ��һ��ʱ��Ƭ����ʱ��Ƭ����ʱ���ɼ�ʱ������ʱ���жϣ����ȳ����ֹͣ�ý��̵�ִ�У������������������е�ĩβ��ͬʱ������ CPU ��������׵Ľ��̡�</p><p>ʱ��Ƭ��ת�㷨��Ч�ʺ�ʱ��Ƭ�кܴ��ϵ����Ϊÿ�ν����л���Ҫ������̵���Ϣ���������½��̵���Ϣ�����ʱ��Ƭ̫�̣������л�̫Ƶ�����ڽ����л��ϾͻỨ����ʱ�䡣</p><h4 id="2-3-�༶��������"><a href="#2-3-�༶��������" class="headerlink" title="2.3 �༶��������"></a>2.3 �༶��������</h4><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/042cf928-3c8e-4815-ae9c-f2780202c68f.png" alt=""></p><p>�� ���ö���������У���Ϊ�������и��費ͬ�����ȼ�����һ�����е����ȼ���ߣ��ڶ������д�֮����������е�����Ȩ������͡����㷨������������н���ִ��ʱ��Ƭ�Ĵ�СҲ������ͬ��������ȨԽ�ߵĶ����У�Ϊÿ���������涨��ִ��ʱ��Ƭ��ԽС��</p><p>�� ��һ���½��̽����ڴ�����Ƚ��������һ���е�ĩβ���� FCFS ԭ���Ŷӵȴ����ȡ����ֵ��ý���ִ��ʱ���������ڸ�ʱ��Ƭ����ɣ����׼������ϵͳ���������һ��ʱ��Ƭ����ʱ��δ��ɣ����ȳ���㽫�ý���ת����һ�����еĶ�β��</p><p>�� ����ǰ i -1 �����о���ʱ���Ż���ȵ� i �����еĽ������С�</p><p>�ŵ㣺ʵʱ�Ժã�Ҳ�ʺ����ж���ҵ�ͳ���ҵ��</p><h4 id="2-4-�̽�������"><a href="#2-4-�̽�������" class="headerlink" title="2.4 �̽�������"></a>2.4 �̽�������</h4><h3 id="3-ʵʱϵͳ�еj���"><a href="#3-ʵʱϵͳ�еj���" class="headerlink" title="3. ʵʱϵͳ�еĵ���"></a>3. ʵʱϵͳ�еĵ���</h3><p>ʵʱϵͳҪһ������������һ��ȷ��ʱ���ڵõ���Ӧ��</p><p>��ΪӲʵʱ����ʵʱ��ǰ�߱���������ԵĽ�ֹʱ�䣬���߿�������һ���ĳ�ʱ��</p><h2 id="����ͬ��"><a href="#����ͬ��" class="headerlink" title="����ͬ��"></a>����ͬ��</h2><h3 id="1-�ٽ���"><a href="#1-�ٽ���" class="headerlink" title="1. �ٽ���"></a>1. �ٽ���</h3><p>���ٽ���Դ���з��ʵ��Ƕδ����Ϊ�ٽ�����</p><p>Ϊ�˻�������ٽ���Դ��ÿ�������ڽ����ٽ���֮ǰ����Ҫ�Ƚ��м�顣</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">// entry section</span><br><span class="line">// critical section;</span><br><span class="line">// exit section</span><br></pre></td></tr></table></figure><h3 id="2-ͬ���뻥��"><a href="#2-ͬ���뻥��" class="headerlink" title="2. ͬ���뻥��"></a>2. ͬ���뻥��</h3><p>ͬ��ָ������̰�һ��˳��ִ�У�����ָ���������ͬһʱ��ֻ��һ�������ܽ����ٽ�����</p><p>ͬ�����ڶ��ٽ���������ʵĻ����ϣ�ͨ������������ʵ��������ʵġ�</p><h3 id="3-�z���"><a href="#3-�z���" class="headerlink" title="3. �ź���"></a>3. �ź���</h3><p><strong>�ź�����Samaphore��</strong>��һ�����ͱ��������Զ���ִ�� down �� up ������Ҳ���ǳ����� P �� V ������</p><ul><li><strong>down</strong> : ����ź������� 0 ��ִ�� - 1 ����������ź������� 0��������˯�ߣ��ȴ��ź������� 0��</li><li><strong>up</strong>�����ź���ִ�� + 1 ���������һ���˯�ߵĽ��̣��ý������ down ������</li></ul><p>down �� up ������Ҫ����Ƴ�ԭ����ɷָͨ������������ִ����Щ������ʱ�������жϡ�</p><p>����ź�����ȡֵֻ��Ϊ 0 ���� 1����ô�ͳ�Ϊ��<strong>��������Mutex��</strong>��0 ��ʾ�ٽ����Ѿ�������1 ��ʾ�ٽ���������</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> samaphore;</span><br><span class="line">samaphore mutex = <span class="number">1</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">P1</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    down(mutex);</span><br><span class="line">    <span class="comment">// �ٽ���</span></span><br><span class="line">    up(mutex);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">P2</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    down(mutex);</span><br><span class="line">    <span class="comment">// �ٽ���</span></span><br><span class="line">    up(mutex);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>ʹ���ź���ʵ��������-����������</strong></p><p>ʹ��һ�������� mutex �����ٽ���Դ���з��ʣ�empty ��¼�ջ�������������full ��¼����������������</p><p>ע�⣬������ִ�� down �������û��������ٽ�����������������������������ȶ��ٽ���������Ȼ����ִ�� down ������������������������߶��ٽ���������ִ�� down(empty) ���������� empty = 0����ʱ������˯�ߡ������ߴ�ʱ���ܽ����ٽ�������Ϊ�����߶��ٽ��������ˣ�Ҳ���޷���ִ�� up(empty) ��������ô�����ߺ������߾ͻ�һֱ�ȴ���ȥ��</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 100</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> samaphore;</span><br><span class="line">samaphore mutex = <span class="number">1</span>;</span><br><span class="line">samaphore empty = N;</span><br><span class="line">samaphore full = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">producer</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(TRUE)&#123;</span><br><span class="line">        <span class="keyword">int</span> item = produce_item;</span><br><span class="line">        down(empty);</span><br><span class="line">        down(mutex);</span><br><span class="line">        insert_item(item);</span><br><span class="line">        up(mutex);</span><br><span class="line">        up(full);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">consumer</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(TRUE)&#123;</span><br><span class="line">        down(full);</span><br><span class="line">        down(mutex);</span><br><span class="line">        <span class="keyword">int</span> item = remove_item(item);</span><br><span class="line">        up(mutex);</span><br><span class="line">        up(empty);</span><br><span class="line">        consume_item(item);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-�ܳ�"><a href="#4-�ܳ�" class="headerlink" title="4. �ܳ�"></a>4. �ܳ�</h3><p>ʹ���ź�������ʵ�ֵ�������������������Ҫ�ͻ��˴������ܶ���ƣ����̰ܳѿ��ƵĴ���������������������׳���Ҳʹ�ÿͻ��˴�����ø����ס�</p><p>c ���Բ�֧�ֹ̣ܳ������ʾ������ʹ������ Pascal �����������̡ܳ�ʾ�������еĹܳ��ṩ�� insert() �� remove() �������ͻ��˴���ͨ���������������������������-���������⡣</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">monitor ProducerConsumer</span><br><span class="line">    integer i;</span><br><span class="line">    condition c;</span><br><span class="line">    </span><br><span class="line">    procedure insert();</span><br><span class="line">    begin</span><br><span class="line">    </span><br><span class="line">    end;</span><br><span class="line">    </span><br><span class="line">    procedure remove();</span><br><span class="line">    begin</span><br><span class="line">    </span><br><span class="line">    end;</span><br><span class="line">end monitor;</span><br></pre></td></tr></table></figure><p>�ܳ���һ����Ҫ���ԣ���һ��ʱ��ֻ����һ������ʹ�ù̡ܳ��������޷�����ִ�е�ʱ����һֱռ�ụ̀ܳ����뽫������������������������Զ����ʹ�ù̡ܳ�</p><p>�ܳ������� <strong>��������</strong> �Լ���صĲ�����<strong>wait()</strong> �� <strong>signal()</strong> ��ʵ��ͬ������������������ִ�� wait() �����ᵼ�µ��ý����������ѹܳ��ó�������һ�����̳��С�signal() �������ڻ��ѱ������Ľ��̡�</p><p><strong>ʹ�ùܳ�ʵ��������-����������</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">monitor ProducerConsumer</span><br><span class="line">    condition full, empty;</span><br><span class="line">    integer count := 0;</span><br><span class="line">    condition c;</span><br><span class="line"></span><br><span class="line">    procedure insert(item: integer);</span><br><span class="line">    begin</span><br><span class="line">        if count = N then wait(full);</span><br><span class="line">        insert_item(item);</span><br><span class="line">        count := count + 1;</span><br><span class="line">        if count = 1 ten signal(empty);</span><br><span class="line">    end;</span><br><span class="line"></span><br><span class="line">    function remove: integer;</span><br><span class="line">    begin</span><br><span class="line">        if count = 0 then wait(empty);</span><br><span class="line">        remove = remove_item;</span><br><span class="line">        count := count - 1;</span><br><span class="line">        if count = N -1 then signal(full);</span><br><span class="line">    end;</span><br><span class="line">end monitor;</span><br><span class="line"></span><br><span class="line">procedure producer</span><br><span class="line">begin</span><br><span class="line">    while true do</span><br><span class="line">    begin</span><br><span class="line">        item = produce_item;</span><br><span class="line">        ProducerConsumer.insert(item);</span><br><span class="line">    end</span><br><span class="line">end;</span><br><span class="line"></span><br><span class="line">procedure consumer</span><br><span class="line">begin</span><br><span class="line">    while true do</span><br><span class="line">    begin</span><br><span class="line">        item = ProducerConsumer.remove;</span><br><span class="line">        consume_item(item);</span><br><span class="line">    end</span><br><span class="line">end;</span><br></pre></td></tr></table></figure><h2 id="����ͨ��"><a href="#����ͨ��" class="headerlink" title="����ͨ��"></a>����ͨ��</h2><p>����ͨ�ſ��Կ����ǲ�ͬ���̼���߳�ͨ�ţ�����ͬһ���������̵߳�ͨ�ŷ�ʽ����Ҫʹ���ź���������������ͬ�����ơ�</p><h3 id="1-�ܵ�"><a href="#1-�ܵ�" class="headerlink" title="1. �ܵ�"></a>1. �ܵ�</h3><p>�ܵ��ǵ���ġ��Ƚ��ȳ��ġ��޽ṹ�ġ��̶���С���ֽ���������һ�����̵ı�׼�������һ�����̵ı�׼����������һ��д�����ڹܵ���β��д�����ݣ��������ڹܵ����׶˶������ݡ����ݶ����󽫴ӹܵ������ߣ����������̶������ٶ�����Щ���ݡ�</p><p>�ܵ��ṩ�˼򵥵������ƻ��ƣ�������ͼ���չܵ�ʱ����������д��ܵ�ǰ�����̽�һֱ������ͬ���أ��ܵ��Ѿ���ʱ����������ͼд�ܵ������������̴ӹܵ�����������֮ǰ��д���̽�һֱ������</p><p>Linux �йܵ���ͨ�����ļ���ʵ�֡�</p><p>�ܵ������֣�</p><p>�� ��ͨ�ܵ������������ƣ�һ��ֻ֧�ְ�˫��ͨ�ŷ�ʽ����ֻ�ܵ����䣻����ֻ���ڸ��ӽ���֮��ʹ�ã�</p><p>�� ���ܵ���ȥ����һ�����ƣ�֧��˫���䣻</p><p>�� �����ܵ���ȥ���ڶ������ƣ������ڲ���ؽ���֮�����ͨ�š�</p><h3 id="2-�z���"><a href="#2-�z���" class="headerlink" title="2. �ź���"></a>2. �ź���</h3><p>�ź�����һ���������������������ƶ�����̶Թ�����Դ�ķ��ʡ�������Ϊһ�������ƣ���ֹĳ�������ڷ��ʹ�����Դʱ����������Ҳ���ʸ���Դ����ˣ���Ҫ��Ϊ���̼��Լ�ͬһ�����ڲ�ͬ�߳�֮���ͬ���ֶΡ�</p><h3 id="3-��Ϣ����"><a href="#3-��Ϣ����" class="headerlink" title="3. ��Ϣ����"></a>3. ��Ϣ����</h3><p>��Ϣ���п˷����źŴ�����Ϣ�١��ܵ�ֻ�ܳ����޸�ʽ�ֽ����Լ���������С���޵�ȱ�㡣</p><h3 id="4-�z�"><a href="#4-�z�" class="headerlink" title="4. �ź�"></a>4. �ź�</h3><p>�ź���һ�ֱȽϸ��ӵ�ͨ�ŷ�ʽ������֪ͨ���ս���ĳ���¼��Ѿ�������</p><h3 id="5-�����ڴ�"><a href="#5-�����ڴ�" class="headerlink" title="5. �����ڴ�"></a>5. �����ڴ�</h3><p>�����ڴ����ӳ��һ���ܱ��������������ʵ��ڴ棬��ι����ڴ���һ�����̴�������������̶����Է��ʡ������ڴ������� IPC ��ʽ����������������̼�ͨ�ŷ�ʽ����Ч�ʵͶ�ר����Ƶġ�������������ͨ�Ż��ƣ����ź��������ʹ�ã���ʵ�ֽ��̼��ͬ����ͨ�š�</p><h3 id="6-�׽���"><a href="#6-�׽���" class="headerlink" title="6. �׽���"></a>6. �׽���</h3><p>�׽���Ҳ��һ�ֽ��̼�ͨ�Ż��ƣ�������ͨ�Ż��Ʋ�ͬ���ǣ��������ڲ�ͬ������Ľ���ͨ�š�</p><h2 id="����ͬ������"><a href="#����ͬ������" class="headerlink" title="����ͬ������"></a>����ͬ������</h2><p>�����ߺ�����������ǰ���Ѿ����۹���</p><h3 id="1-����-д������"><a href="#1-����-д������" class="headerlink" title="1. ����-д������"></a>1. ����-д������</h3><p>����������ͬʱ�����ݽ��ж����������ǲ��������д�Լ�д��д����ͬʱ������</p><p>һ�����ͱ��� count ��¼�ڶ����ݽ��ж������Ľ���������һ�������� count_mutex ���ڶ� count ������һ�������� data_mutex ���ڶԶ�д�����ݼ�����</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> semaphore;</span><br><span class="line">semaphore count_mutex = <span class="number">1</span>;</span><br><span class="line">semaphore data_mutex = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">reader</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(TRUE) &#123;</span><br><span class="line">        down(count_mutex);</span><br><span class="line">        count++;</span><br><span class="line">        <span class="keyword">if</span>(count == <span class="number">1</span>) down(data_mutex); <span class="comment">// ��һ��������Ҫ�����ݽ��м�������ֹд���̷���</span></span><br><span class="line">        up(count_mutex);</span><br><span class="line">        read();</span><br><span class="line">        down(count_mutex);</span><br><span class="line">        count--;</span><br><span class="line">        <span class="keyword">if</span>(count == <span class="number">0</span>) up(data_mutex);</span><br><span class="line">        up(count_mutex);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">writer</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(TRUE) &#123;</span><br><span class="line">        down(data_mutex);</span><br><span class="line">        write();</span><br><span class="line">        up(data_mutex);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-��ѧ�ҽ�������"><a href="#2-��ѧ�ҽ�������" class="headerlink" title="2. ��ѧ�ҽ�������"></a>2. ��ѧ�ҽ�������</h3><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/a9077f06-7584-4f2b-8c20-3a8e46928820.jpg" alt=""></p><p>�����ѧ��Χ��һ��Բ�ܣ�ÿ����ѧ����ǰ���ŷ�����ѧ�ҵ����������ֽ������Է��Լ�˼������һ����ѧ�ҳԷ�ʱ����Ҫ��һ��һ�������������ߵĿ��ӡ�</p><p>������һ�ִ���Ľⷨ�����ǵ����ÿ����ѧ��ͬʱ�������ֱߵĿ��ӣ���ô���޷��������ֱߵĿ��ӣ����������</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 5</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> LEFT (i + N - 1) % N</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> RIGHT (i + N) % N</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> semaphore;</span><br><span class="line">semaphore chopstick[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">philosopher</span><span class="params">(<span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(TURE)&#123;</span><br><span class="line">        think();</span><br><span class="line">        down(chopstick[LEFT[i]]);</span><br><span class="line">        down(chopstick[RIGHT[i]]);</span><br><span class="line">        eat();</span><br><span class="line">        up(chopstick[RIGHT[i]]);</span><br><span class="line">        up(chopstick[LEFT[i]]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Ϊ�˷�ֹ�����ķ��������Լ�һ�����ƣ�ֻ����ͬʱ�����������ߵĿ��ӣ�����������һ�����������������������ӵ��Ƕδ��������</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">semaphore mutex = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">philosopher</span><span class="params">(<span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(TURE)&#123;</span><br><span class="line">        think();</span><br><span class="line">        down(mutex);</span><br><span class="line">        down(chopstick[LEFT[i]]);</span><br><span class="line">        down(chopstick[RIGHT[i]]);</span><br><span class="line">        up(mutex);</span><br><span class="line">        eat();</span><br><span class="line">        down(mutex);</span><br><span class="line">        up(chopstick[RIGHT[i]]);</span><br><span class="line">        up(chopstick[LEFT[i]]);</span><br><span class="line">        up(mutex);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="������-����"><a href="#������-����" class="headerlink" title="������ ����"></a>������ ����</h1><h2 id="����������"><a href="#����������" class="headerlink" title="����������"></a>����������</h2><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/c037c901-7eae-4e31-a1e4-9d41329e5c3e.png" alt=""></p><ol><li>����</li><li>�����뱣�֣�һ��������������Դ������ʱ�����ѻ�õ���Դ���ֲ��š�</li><li>������ռ</li><li>��·�ȴ�</li></ol><h2 id="�����J�����"><a href="#�����J�����" class="headerlink" title="�����Ĵ�����"></a>�����Ĵ�����</h2><h3 id="1-�������"><a href="#1-�������" class="headerlink" title="1. �������"></a>1. �������</h3><p>��ͷ����ɳ�����װ����û�������⡣</p><p>���ֲ��Բ���ȡ��</p><h3 id="2-����Ԥ��"><a href="#2-����Ԥ��" class="headerlink" title="2. ����Ԥ��"></a>2. ����Ԥ��</h3><p>�ڳ�������֮ǰԤ������������</p><h4 id="2-1-�ƻ���������"><a href="#2-1-�ƻ���������" class="headerlink" title="2.1 �ƻ���������"></a>2.1 �ƻ���������</h4><p>������ѻ���ӡ������������ɸ�����ͬʱ�����Ψһ�������������ӡ���Ľ����Ǵ�ӡ���ػ����̡�</p><h4 id="2-2-�ƻ������뱣������"><a href="#2-2-�ƻ������뱣������" class="headerlink" title="2.2 �ƻ������뱣������"></a>2.2 �ƻ������뱣������</h4><p>һ��ʵ�ַ�ʽ�ǹ涨���н����ڿ�ʼִ��ǰ��������Ҫ��ȫ����Դ��</p><h4 id="2-3-�ƻ�������ռ����"><a href="#2-3-�ƻ�������ռ����" class="headerlink" title="2.3 �ƻ�������ռ����"></a>2.3 �ƻ�������ռ����</h4><h4 id="2-4-�ƻ���·�ȴ�"><a href="#2-4-�ƻ���·�ȴ�" class="headerlink" title="2.4 �ƻ���·�ȴ�"></a>2.4 �ƻ���·�ȴ�</h4><p>����Դͳһ��ţ�����ֻ�ܰ����˳����������Դ��</p><h3 id="3-��������"><a href="#3-��������" class="headerlink" title="3. ��������"></a>3. ��������</h3><p>�ڳ�������ʱ���ⷢ��������</p><h4 id="3-1-��o״̬"><a href="#3-1-��o״̬" class="headerlink" title="3.1 ��ȫ״̬"></a>3.1 ��ȫ״̬</h4><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/ed523051-608f-4c3f-b343-383e2d194470.png" alt=""></p><p>ͼ a �ĵڶ��� has ��ʾ��ӵ�е���Դ���������� max ��ʾ�ܹ���Ҫ����Դ����free ��ʾ���п���ʹ�õ���Դ������ͼ a ��ʼ���������� B ӵ�������������Դ�����н������ͷ� B����ʱ free ��Ϊ 4��������ͬ���ķ�ʽ���� C �� A��ʹ�����н��̶��ܳɹ����У���˿��Գ�ͼ a ��ʾ��״̬ʱ��ȫ�ġ�</p><p>���壺���û���������������Ҽ�ʹ���н���ͻȻ�������Դ���������Ҳ��Ȼ����ĳ�ֵ��ȴ����ܹ�ʹ��ÿһ������������ϣ���Ƹ�״̬�ǰ�ȫ�ġ�</p><h4 id="3-2-������Դ�����м��㷨"><a href="#3-2-������Դ�����м��㷨" class="headerlink" title="3.2 ������Դ�����м��㷨"></a>3.2 ������Դ�����м��㷨</h4><p>һ��С��������мң�����һȺ�ͻ��ֱ��ŵ��һ���Ĵ����ȣ��㷨Ҫ�������ж϶�����������Ƿ����벻��ȫ״̬������ǣ��;ܾ����󣻷������Է��䡣</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/d160ec2e-cfe2-4640-bda7-62f53e58b8c0.png" alt=""></p><p>��ͼ c Ϊ����ȫ״̬������㷨��ܾ�֮ǰ�����󣬴Ӷ��������ͼ c �е�״̬��</p><h4 id="3-3-�����Դ�����м��㷨"><a href="#3-3-�����Դ�����м��㷨" class="headerlink" title="3.3 �����Դ�����м��㷨"></a>3.3 �����Դ�����м��㷨</h4><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/62e0dd4f-44c3-43ee-bb6e-fedb9e068519.png" alt=""></p><p>��ͼ����������̣��ĸ���Դ����ߵ�ͼ��ʾ�Ѿ��������Դ���ұߵ�ͼ��ʾ����Ҫ�������Դ�����ұߵ� E��P �Լ� A �ֱ��ʾ������Դ���ѷ�����Դ�Լ�������Դ��ע��������Ϊ�����������Ǿ�����ֵ������ A=(1020)����ʾ 4 ����Դ�ֱ�ʣ�� 1/0/2/0��</p><p>���һ��״̬�Ƿ�ȫ���㷨���£�</p><p>�� �����ұߵľ����Ƿ����һ��С�ڵ������� A������������������У���ôϵͳ���ᷢ��������״̬�ǲ���ȫ�ġ�</p><p>�� �����ҵ�����һ�У����ý��̱��Ϊ��ֹ���������ѷ�����Դ�ӵ� A �С�</p><p>�� �ظ�����������ֱ�����н��̶����Ϊ��ֹ����״̬ʱ��ȫ�ġ�</p><h3 id="4-��������������ָ�"><a href="#4-��������������ָ�" class="headerlink" title="4. ��������������ָ�"></a>4. ��������������ָ�</h3><p>����ͼ��֯���������ǵ���⵽��������ʱ����ȡ��ʩ���лָ���</p><h4 id="4-1-��������㷨"><a href="#4-1-��������㷨" class="headerlink" title="4.1 ��������㷨"></a>4.1 ��������㷨</h4><p>�������Ļ���˼���ǣ����һ���������������Դ�ܹ������㣬��ô������ִ�У��ͷ���ӵ�е�������Դ��Ȼ�������������������Ľ���ִ�С�</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/e1eda3d5-5ec8-4708-8e25-1a04c5e11f48.png" alt=""></p><p>��ͼ�У������������ĸ���Դ��ÿ�����ݴ���ĺ������£�</p><p>E ��������Դ����<br>A ��������Դʣ����<br>C ����ÿ��������ӵ�е���Դ������ÿһ�ж�����һ������ӵ����Դ������<br>R ����ÿ�������������Դ����</p><p>���� P<sub>1</sub> �� P<sub>2</sub> ���������Դ���ò������㣬ֻ�н��� P<sub>3</sub> ���ԣ��� P<sub>3</sub> ִ�У�֮���ͷ� P<sub>3</sub> ӵ�е���Դ����ʱ A = (2 2 2 0)��P<sub>1</sub> ����ִ�У�ִ�к��ͷ� P<sub>1</sub> ӵ�е���Դ�� A = (4 2 2 2) ��P<sub>2</sub> Ҳ����ִ�С����н��̶�����˳��ִ�У�û��������</p><p>�㷨�ܽ����£�</p><p>ÿ�������ʼʱ��������ǣ�ִ�й����п��ܱ���ǡ����㷨����ʱ���κ�û�б���ǵĽ��̶����������̡�</p><p>�� Ѱ��һ��û�б�ǵĽ��� P<sub>i</sub>�������������ԴС�ڵ��� A��<br>�� ����ҵ�������һ�����̣���ô�� C ����ĵ� i �������ӵ� A �У���Ǹý��̣���ת�� �١�<br>�� �����û������һ�����̣��㷨��ֹ��</p><h4 id="4-2-�����ָ�"><a href="#4-2-�����ָ�" class="headerlink" title="4.2 �����ָ�"></a>4.2 �����ָ�</h4><p>�� ������ռ�ָ�<br>�� ɱ������</p><h1 id="������-�洢������"><a href="#������-�洢������" class="headerlink" title="������ �洢������"></a>������ �洢������</h1><h2 id="�����ڴ�"><a href="#�����ڴ�" class="headerlink" title="�����ڴ�"></a>�����ڴ�</h2><p>ÿ������ӵ���Լ��ĵ�ַ�ռ䣬�����ַ�ռ䱻�ָ�ɶ���飬ÿһ���Ϊһ ҳ����Щҳ��ӳ�䵽�����ڴ棬������Ҫӳ�䵽�����������ڴ棬Ҳ����Ҫ����ҳ�������������ڴ��С�</p><p>���������õ�һ�����������ڴ��еĵ�ַ�ռ�ʱ����Ӳ������ִ�б�Ҫ��ӳ�䡣���������õ�һ���ֲ��������ڴ��еĵ�ַ�ռ�ʱ���ɲ���ϵͳ����ȱʧ�Ĳ���װ�������ڴ沢����ִ��ʧ�ܵ�ָ�</p><h2 id="��ҳ��ֶ�"><a href="#��ҳ��ֶ�" class="headerlink" title="��ҳ��ֶ�"></a>��ҳ��ֶ�</h2><h3 id="1-��ҳ"><a href="#1-��ҳ" class="headerlink" title="1. ��ҳ"></a>1. ��ҳ</h3><p>�û�����ĵ�ַ�ռ䱻����Ϊ��ɹ̶���С�����򣬳�Ϊ��ҳ������Ӧ�أ��ڴ�ռ�ֳ���ɸ�����飬ҳ�Ϳ�Ĵ�С��ȡ��ɽ��û��������һҳ�����ڴ����һ���У�ʵ������ɢ���䣬��һ��ҳ����ά������֮���ӳ���ϵ��</p><h3 id="2-�ֶ�"><a href="#2-�ֶ�" class="headerlink" title="2. �ֶ�"></a>2. �ֶ�</h3><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/22de0538-7c6e-4365-bd3b-8ce3c5900216.png" alt=""></p><p>��ͼΪһ���������ڱ�������н����Ķ������ 4 �����Ƕ�̬�����ģ����ʹ�÷�ҳϵͳ��һά��ַ�ռ䣬��̬�������ص�ᵼ�¸�������ĳ��֡�</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/e0900bb2-220a-43b7-9aa9-1d5cd55ff56e.png" alt=""></p><p>�ֶε������ǰ�ÿ����ֳɶΣ�һ���ι���һ�������ĵ�ַ�ռ䡣ÿ���εĳ��ȿ��Բ�ͬ�����Զ�̬�ı䡣</p><p>ÿ���ζ���Ҫ����Ա�����֡�</p><h3 id="3-��ҳʽ"><a href="#3-��ҳʽ" class="headerlink" title="3. ��ҳʽ"></a>3. ��ҳʽ</h3><p>�÷ֶη���������͹�������洢��������ĵ�ַ�ռ䰴�߼���λ�ֳɻ��������ĶΣ���ÿһ�����Լ��Ķ������ٰ�ÿ�ηֳɹ̶���С�����ҳ��</p><p>�÷�ҳ����������͹���ʵ�档������������ֳ�������ҳ��С��ȵĴ洢�飬��װ����ҵ���κ�һҳ��������ڴ�ĵ��������ǰ�ҳ���еġ������ֿɰ���ʵ�ֹ���ͱ�����</p><h3 id="4-��ҳ��ֶ�����"><a href="#4-��ҳ��ֶ�����" class="headerlink" title="4. ��ҳ��ֶ�����"></a>4. ��ҳ��ֶ�����</h3><p>�� �Գ���Ա��͸���ԣ���ҳ͸�������Ƿֶ���Ҫ����Ա��ʾ����ÿ���Ρ�</p><p>�� ��ַ�ռ��ά�ȣ���ҳ��һά��ַ�ռ䣬�ֶ��Ƕ�ά�ġ�</p><p>�� ��С�Ƿ���Ըı䣺ҳ�Ĵ�С���ɱ䣬�εĴ�С���Զ�̬�ı䡣</p><p>�� ���ֵ�ԭ�򣺷�ҳ��Ҫ����ʵ�������ڴ棬�Ӷ���ø���ĵ�ַ�ռ䣻�ֶ���Ҫ��Ϊ��ʹ��������ݿ��Ա�����Ϊ�߼��϶����ĵ�ַ�ռ䲢�������ڹ���ͱ�����</p><h2 id="ҳ���u��㷨"><a href="#ҳ���u��㷨" class="headerlink" title="ҳ���û��㷨"></a>ҳ���û��㷨</h2><p>�ڳ������й����У�������Ҫ���ʵ�ҳ�治���ڴ����Ҫ�����ǵ����ڴ棬�����ڴ����޿��пռ�ʱ��ϵͳ������ڴ��е���һ��ҳ�浽���̶Ի����У����ҽ���������Ҫ��ҳ������ڴ��С�ҳ���û��㷨����ҪĿ����ʹҳ���û�Ƶ����ͣ�Ҳ����˵ȱҳ����ͣ���</p><h3 id="1-��ѣ�Optimal��"><a href="#1-��ѣ�Optimal��" class="headerlink" title="1. ��ѣ�Optimal��"></a>1. ��ѣ�Optimal��</h3><p>��ѡ��ı�������ҳ�潫���ʱ���ڲ��ٱ����ʣ�ͨ�����Ա�֤�����͵�ȱҳ�ʡ�</p><p>��һ�������ϵ��㷨����Ϊ�޷�֪��һ��ҳ��೤ʱ��ᱻ�ٷ��ʵ���</p><p>������һ��ϵͳΪĳ���̷�������������飬��������ҳ���������У�</p><p>7��0��1��2��0��3��0��4��2��3��0��3��2��1��2��0��1��7��0��1</p><p>��������ʱ���Ƚ� 7,0,1 ����ҳ��װ���ڴ档������Ҫ����ҳ�� 2 ʱ������ȱҳ�жϣ��Ὣҳ�� 7 ��������Ϊҳ�� 7 �ٴα����ʵ�ʱ�����</p><h3 id="2-�L��y���FIFO��"><a href="#2-�L��y���FIFO��" class="headerlink" title="2. �Ƚ��ȳ���FIFO��"></a>2. �Ƚ��ȳ���FIFO��</h3><p>��ѡ�񻻳���ҳ�������Ƚ����ҳ�档</p><p>���㷨�Ὣ��Щ���������ʵ�ҳ��Ҳ���������Ӷ�ʹȱҳ�����ߡ�</p><h3 id="3-������δʹ�a�LRU-Least-Recently-Used��"><a href="#3-������δʹ�a�LRU-Least-Recently-Used��" class="headerlink" title="3. ������δʹ�ã�LRU, Least Recently Used��"></a>3. ������δʹ�ã�LRU, Least Recently Used��</h3><p>��Ȼ�޷�֪������Ҫʹ�õ�ҳ����������ǿ���֪����ȥʹ��ҳ��������LRU ��������δʹ�õ�ҳ�滻����</p><p>������ջ��ʵ�ָ��㷨��ջ�д洢ҳ���ҳ��š������̷���һ��ҳ��ʱ������ҳ���ҳ��Ŵ�ջ�Ƴ���������ѹ��ջ������������������ʵ�ҳ���ҳ���������ջ������������δʹ�õ�ҳ���ҳ���������ջ�ס�</p><p>4��7��0��7��1��0��1��2��1��2��6</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/eb859228-c0f2-4bce-910d-d9f76929352b.png" alt=""></p><h3 id="4-ʱ�ӣ�Clock��"><a href="#4-ʱ�ӣ�Clock��" class="headerlink" title="4. ʱ�ӣ�Clock��"></a>4. ʱ�ӣ�Clock��</h3><p>Clock ҳ���û��㷨��Ҫ�õ�һ������λ����һ��ҳ�汻����ʱ��������Ϊ��Ϊ 1��</p><p>���ȣ����ڴ��е�����ҳ�����ӳ�һ��ѭ�����У���ȱҳ�жϷ���ʱ����鵱ǰָ����ָ��ҳ��ķ���λ���������λΪ 0���ͽ���ҳ�滻�������򽫸�ҳ�ķ���λ����Ϊ 0������ҳ��ڶ��εĻ��ᣬ�ƶ�ָ�������顣</p><h1 id="������-�豸����"><a href="#������-�豸����" class="headerlink" title="������ �豸����"></a>������ �豸����</h1><h2 id="���̵����㷨"><a href="#���̵����㷨" class="headerlink" title="���̵����㷨"></a>���̵����㷨</h2><p>���������ͬʱ������ʴ���ʱ����Ҫ���д��̵��������ƶԴ��̵ķ��ʡ����̵��ȵ���ҪĿ����ʹ���̵�ƽ��Ѱ��ʱ�����١�</p><h3 id="1-�����ȷ���FCFS-First-Come-First-Serverd��"><a href="#1-�����ȷ���FCFS-First-Come-First-Serverd��" class="headerlink" title="1. �����ȷ���FCFS, First Come First Serverd��"></a>1. �����ȷ���FCFS, First Come First Serverd��</h3><p>���ݽ���������ʴ��̵��Ⱥ���������е��ȡ��ŵ��ǹ�ƽ�ͼ򵥣�ȱ��Ҳ�����ԣ���Ϊδ��Ѱ�����κ��Ż���ʹƽ��Ѱ��ʱ����ܽϳ���</p><h3 id="2-���Ѱ��ʱ�����ou�SSTF-Shortest-Seek-Time-First��"><a href="#2-���Ѱ��ʱ�����ou�SSTF-Shortest-Seek-Time-First��" class="headerlink" title="2. ���Ѱ��ʱ�����ȣ�SSTF, Shortest Seek Time First��"></a>2. ���Ѱ��ʱ�����ȣ�SSTF, Shortest Seek Time First��</h3><p>Ҫ����ʵĴŵ��뵱ǰ��ͷ���ڴŵ�������������Ƚ��е��ȡ������㷨�����ܱ�֤ƽ��Ѱ��ʱ����̣����Ǳ� FCFS �úܶࡣ</p><h3 id="3-i���㷨��SCAN��"><a href="#3-i���㷨��SCAN��" class="headerlink" title="3. ɨ���㷨��SCAN��"></a>3. ɨ���㷨��SCAN��</h3><p>SSTF ����ֽ��м������󡣿�������������½���������ʵĴŵ����ͷ���ڴŵ��ľ������Ǳ�һ���ڵȴ��Ľ������Ľ�����ô�ȴ��Ľ��̻�һֱ�ȴ���ȥ��</p><p>SCAN �㷨�� SSTF �㷨֮�Ͽ����˴�ͷ���ƶ�����Ҫ����������ʵĴŵ��ڴ�ͷ��ǰ�ƶ������ϲ��ܹ��õ����ȡ���Ϊ�������ƶ�������ôһ������������ʵĴŵ�һ����õ����ȡ�</p><p>��һ����ͷ���������ƶ�ʱ���Ƶ�������ı��ƶ�����Ϊ������������ƶ��Ĺ��������ڵ��ݵ����У�����ֳ��� SCAN �㷨Ϊ���ݵ����㷨��</p><h3 id="4-ѭ��i���㷨��CSCAN��"><a href="#4-ѭ��i���㷨��CSCAN��" class="headerlink" title="4. ѭ��ɨ���㷨��CSCAN��"></a>4. ѭ��ɨ���㷨��CSCAN��</h3><p>CSCAN �� SCAN �����˸Ķ���Ҫ���ͷʼ������һ�������ƶ���</p><h1 id="�ο�����"><a href="#�ο�����" class="headerlink" title="�ο�����"></a>�ο�����</h1><ul><li><p>Tanenbaum A S, Bos H. Modern operating systems[M]. Prentice Hall Press, 2014.</p></li><li><p>�����, �ܷ���, ��С��. ���������ϵͳ[M]. �������ӿƼ���ѧ������, 2001.</p></li><li><p>Bryant, R. E., &amp; O��Hallaron, D. R. (2004). �����������ϵͳ.</p></li><li><p><a href="http://wdxtub.com/interview/index.html" target="_blank" rel="noopener">С����������ˢ��ʼ�</a></p></li><li><p><a href="http://blog.csdn.net/yufaw/article/details/7409596" target="_blank" rel="noopener">���̼�ļ���ͨ�ŷ�ʽ</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- GFM-TOC --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#��һ��-����&quot;&gt;��һ�� ����&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#����ϵͳ��������&quot;&gt;����ϵͳ��������&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#1-����
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2018/03/29/programming-basics-master/notes/%E7%BC%96%E5%86%99%E5%8F%AF%E8%AF%BB%E4%BB%A3%E7%A0%81%E7%9A%84%E8%89%BA%E6%9C%AF/"/>
    <id>http://yoursite.com/2018/03/29/programming-basics-master/notes/编写可读代码的艺术/</id>
    <published>2018-03-29T14:37:48.208Z</published>
    <updated>2018-02-26T04:13:28.000Z</updated>
    
    <content type="html"><![CDATA[<!-- GFM-TOC --><ul><li><a href="#��-1-��-�ɶ��Ե���Ҫ��">�� 1 �� �ɶ��Ե���Ҫ��</a></li><li><a href="#��-2-��-�����ֱ����뺬��">�� 2 �� �����ֱ����뺬��</a></li><li><a href="#��-3-��-���ֲ��ܴ�������">�� 3 �� ���ֲ��ܴ�������</a></li><li><a href="#��-4-��-���õĴ�����">�� 4 �� ���õĴ�����</a></li><li><a href="#��-5-��-��дע��">�� 5 �� ��дע��</a></li><li><a href="#��-6-��-��α�дע��">�� 6 �� ��α�дע��</a></li><li><a href="#��-7-��-��߿������Ŀɶ���">�� 7 �� ��߿������Ŀɶ���</a></li><li><a href="#��-8-��-��ֳ����ʽ">�� 8 �� ��ֳ����ʽ</a></li><li><a href="#��-9-��-������ɶ���">�� 9 �� ������ɶ���</a></li><li><a href="#��-10-��-��ȡ����">�� 10 �� ��ȡ����</a></li><li><a href="#��-11-��-һ��ֻ��һ����">�� 11 �� һ��ֻ��һ����</a></li><li><a href="#��-12-��-����Ȼ���Ա�������">�� 12 �� ����Ȼ���Ա�������</a></li><li><a href="#��-13-��-���ٴ�����">�� 13 �� ���ٴ�����</a><!-- GFM-TOC --></li></ul><h1 id="��-1-��-�ɶ��Ե���Ҫ��"><a href="#��-1-��-�ɶ��Ե���Ҫ��" class="headerlink" title="�� 1 �� �ɶ��Ե���Ҫ��"></a>�� 1 �� �ɶ��Ե���Ҫ��</h1><p>����кܴ�һ����ʱ�������Ķ����룬����Ҫ�Ķ��Լ��Ĵ��룬����Ҫ�Ķ����˵Ĵ��롣��ˣ��ɶ������õĴ����ܹ������߱��Ч�ʡ�</p><p>�ɶ������õĴ����������ô���ܹ����ã���Ϊ����Ա��Ը��ȥ�޸��ⲿ�ִ��룬����Ҳ�������޸ġ�</p><p>ֻ���ں�������Ϊ��Ч�ʲſ��Է����ɶ��ԣ�����ɶ����ǵ�һλ��</p><h1 id="��-2-��-�����ֱ����뺬��"><a href="#��-2-��-�����ֱ����뺬��" class="headerlink" title="�� 2 �� �����ֱ����뺬��"></a>�� 2 �� �����ֱ����뺬��</h1><p>һЩ�Ƚ��б�����ĵ��ʣ�</p><table><thead><tr><th>����</th><th>���������</th></tr></thead><tbody><tr><td>send</td><td>deliver��dispatch��announce��distribute��route</td></tr><tr><td>find</td><td>search��extract��locate��recover</td></tr><tr><td>start</td><td>launch��create��begin��open</td></tr><tr><td>make</td><td>create��set up��build��generate��compose��add��new</td></tr></tbody></table><p>ʹ�� i��j��k ��Ϊѭ�������������Ǻõģ�Ϊ��������Ӹ��б���������ֻ���ã����� user_i��member_i����Ϊѭ�����Խ�࣬����Խ����⣬�б�����ĵ��������ֿɶ��Ի����</p><p>Ϊ����������ݴʵ���Ϣ�������ָ����б��������������Ҳ��䳤�����ֳ��̵�׼���ǣ�������Խ������Խ�������ֻ���ڶ����������ʹ��һЩ�����֡�</p><h1 id="��-3-��-���ֲ��ܴ�������"><a href="#��-3-��-���ֲ��ܴ�������" class="headerlink" title="�� 3 �� ���ֲ��ܴ�������"></a>�� 3 �� ���ֲ��ܴ�������</h1><p>��������Ҫ˼��һ�±��˻����������кν�����᲻�������ԭ������ĺ��塣</p><p>�� min��max ��ʾ������Χ��</p><p>�� first��last ��ʾ���ʿռ�İ�����Χ��begin��end ��ʾ���ʿռ���ų���Χ���� end ������β����</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/26772ecc-a3e3-4ab7-a46f-8b4656990c27.jpg" alt=""></p><p>������ص��������� is��can��should��has ��ǰ׺��</p><h1 id="��-4-��-���oJ�����"><a href="#��-4-��-���oJ�����" class="headerlink" title="�� 4 �� ���õĴ�����"></a>�� 4 �� ���õĴ�����</h1><p>�ʵ��Ŀ��к�����</p><p>���������ע�ͣ�</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">int a = 1;   // ע��</span><br><span class="line">int b = 11;  // ע��</span><br><span class="line">int c = 111; // ע��</span><br></pre></td></tr></table></figure><p>���˳�������⣬������ html ��������ı����ĸ�ֵӦ�úͱ��� html �е�˳��һ�£�</p><p>����صĴ��밴����֯����һ��</p><h1 id="��-5-��-��дע��"><a href="#��-5-��-��дע��" class="headerlink" title="�� 5 �� ��дע��"></a>�� 5 �� ��дע��</h1><p>�Ķ��������Ȼ�ע�⵽ע�ͣ����ע��û̫�����ã���ô�ͻ��˷Ѵ����Ķ���ʱ�䡣��Щ��ֱ�ӿ�������Ĵ��벻��Ҫдע�ͣ��ر��ǲ�����ҪΪÿ������������ע�ͣ�������Щ�򵥵� getter �� setter ������Ϊ��Щ����дע�ͷ����ô���ɶ��Ը��</p><p>������Ϊ��ע�;����������֣�������ȡ��������ֶ���дע�͡�</p><p>������ע������¼���õ�ǰ����취��˼�����̣��Ӷ��ö��߸����������롣</p><p>ע����������һЩ���������</p><p>�� TODO ������ǣ�</p><table><thead><tr><th>���</th><th>�÷�</th></tr></thead><tbody><tr><td>TODO</td><td>����</td></tr><tr><td>FIXME</td><td>���޸�</td></tr><tr><td>HACH</td><td>�ֲڵĽ������</td></tr><tr><td>XXX</td><td>Σ�գ���������Ҫ������</td></tr></tbody></table><h1 id="��-6-��-��α�дע��"><a href="#��-6-��-��α�дע��" class="headerlink" title="�� 6 �� ��α�дע��"></a>�� 6 �� ��α�дע��</h1><p>����������ˣ�</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">// The first String is student&apos;s name</span><br><span class="line">// The Second Integer is student&apos;s score</span><br><span class="line">Map&lt;String, Integer&gt; scoreMap = new HashMap&lt;&gt;();</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// Student&apos; name -&gt; Student&apos;s score</span><br><span class="line">Map&lt;String, Integer&gt; scoreMap = new HashMap&lt;&gt;();</span><br></pre></td></tr></table></figure><p>��Ӳ���������˵����</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">//...</span><br><span class="line">// Example: add(1, 2), return 3</span><br><span class="line">int add(int x, int y) &#123;</span><br><span class="line">    return x + y;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>�ںܸ��ӵĺ��������ж�ÿ�������������֣�</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">int a = 1;</span><br><span class="line">int b = 2;</span><br><span class="line">int num = add(\* x = *\ a, \* y = *\ b);</span><br></pre></td></tr></table></figure><p>ʹ��רҵ���������̸����ϵĽ��ͣ����������ģʽ����˵�����롣</p><h1 id="��-7-��-��߿������Lɶ���"><a href="#��-7-��-��߿������Lɶ���" class="headerlink" title="�� 7 �� ��߿������Ŀɶ���"></a>�� 7 �� ��߿������Ŀɶ���</h1><p>�������ʽ�У�����Ǳ������Ҳ��ǳ��������������һ�������ȷ��</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">if(len &lt; 10)</span><br><span class="line">if(10 &gt; len)</span><br></pre></td></tr></table></figure><p>if / else ������䣬�ȴ��������߼����� ���߼����� �ؼ��߼����ۣ����߼�<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">if(a == b) &#123;</span><br><span class="line">    // ���߼�</span><br><span class="line">&#125; else&#123;</span><br><span class="line">    // ���߼�</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>ֻ�����߼��򵥵������ʹ�� ? : ��Ŀ�������ʹ�������գ�����Ӧ�ò�ֳ� if / else��</p><p>do / while ���������ں��棬���������ˣ����һ���һЩ�Ի�ĵط������ʹ�� while �����档</p><p>���ֻ��һ�� goto Ŀ�꣬��ô goto ���һ��ܽ��ܣ����ǹ��ڸ��ӵ� goto ���ô���ɶ����ر�Ӧ�ñ���ʹ�� goto��</p><p>��Ƕ�׵�ѭ���У���һЩ return ��������ܼ���Ƕ�׵Ĳ�����</p><h1 id="��-8-��-��ֳ����ʽ"><a href="#��-8-��-��ֳ����ʽ" class="headerlink" title="�� 8 �� ��ֳ����ʽ"></a>�� 8 �� ��ֳ����ʽ</h1><p>�����ʽ�Ŀɶ��Ժܲ��������һЩ���ͱ����Ӷ���ֱ��ʽ��</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">if line.split(&apos;:&apos;)[0].strip() == &quot;root&quot;:</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">username = line.split(&apos;:&apos;)[0].strip()</span><br><span class="line">if username == &quot;root&quot;:</span><br><span class="line">    ...</span><br></pre></td></tr></table></figure><p>ʹ��Ħ�������һЩ�߼����ʽ��</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if(!a &amp;&amp; !b) &#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if(a || b) &#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="��-9-��-������ɶ���"><a href="#��-9-��-������ɶ���" class="headerlink" title="�� 9 �� ������ɶ���"></a>�� 9 �� ������ɶ���</h1><p>ȥ����������������ѭ����ͨ�� break ���� return ���Լ��ٿ�����������ʹ�á�</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">boolean done = false;</span><br><span class="line">while(/* condition */ &amp;&amp; !done) &#123;</span><br><span class="line">    ...</span><br><span class="line">    if(...) &#123;</span><br><span class="line">        done = true;</span><br><span class="line">        continue;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">while(/* condition */) &#123;</span><br><span class="line">    ...</span><br><span class="line">    if(...) &#123;</span><br><span class="line">        break;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>��С����������������ԽС��Խ���׶�λ����������ʹ�õĵط���</p><p>JavaScript �����ñհ���С���������´����� submit_form �Ǻ���������submitted �������ƺ������ᱻ�ύ���Ρ���һ��ʵ���� submitted ��ȫ�ֱ������ڶ���ʵ�ְ� submitted �ŵ����������У��Ӷ���������������Χ��</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">submitted = false;</span><br><span class="line">var submit_form = function(form_name) &#123;</span><br><span class="line">    if(submitted) &#123;</span><br><span class="line">        return;</span><br><span class="line">    &#125;</span><br><span class="line">    submitted = true;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">var submit_form = (function() &#123;</span><br><span class="line">    var submitted = false;</span><br><span class="line">    return function(form_name) &#123;</span><br><span class="line">        if(submitted) &#123;</span><br><span class="line">            return;</span><br><span class="line">        &#125;</span><br><span class="line">        submitted = true;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;());  // () ʹ�����������������ִ��</span><br></pre></td></tr></table></figure><p>JavaScript ��û���� var �����ı�������ȫ�ֱ�������ȫ�ֱ�������������Ի����Ӧ�������� var ������������</p><p>���������λ��Ӧ������ʹ�õ�λ�������</p><p><strong>ʵ������</strong></p><p>��һ����ҳ���������ı������ֶΣ�</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;input type = &quot;text&quot; id = &quot;input1&quot; value = &quot;a&quot;&gt;</span><br><span class="line">&lt;input type = &quot;text&quot; id = &quot;input2&quot; value = &quot;b&quot;&gt;</span><br><span class="line">&lt;input type = &quot;text&quot; id = &quot;input3&quot; value = &quot;&quot;&gt;</span><br><span class="line">&lt;input type = &quot;text&quot; id = &quot;input4&quot; value = &quot;d&quot;&gt;</span><br></pre></td></tr></table></figure><p>����Ҫ����һ���ַ����������ŵ���һ���յ� input �ֶ��У���ʼʵ�����£�</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">var setFirstEmptyInput = function(new_alue) &#123;</span><br><span class="line">    var found = false;</span><br><span class="line">    var i = 1;</span><br><span class="line">    var elem = document.getElementById(&apos;input&apos; + i);</span><br><span class="line">    while(elem != null) &#123;</span><br><span class="line">        if(elem.value === &apos;&apos;) &#123;</span><br><span class="line">            found = true;</span><br><span class="line">            break;</span><br><span class="line">        &#125;</span><br><span class="line">        i++;</span><br><span class="line">        elem = document.getElementById(&apos;input&apos; + i);</span><br><span class="line">    &#125;</span><br><span class="line">    if(found) elem.value = new_value;</span><br><span class="line">    return elem;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>����ʵ�����������⣺</p><ul><li>found ����ȥ����</li><li>elem ���������</li><li>������ for ѭ������ while ѭ����</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">var setFirstEmptyInput = function(new_value) &#123;</span><br><span class="line">    for(var i = 1; true; i++) &#123;</span><br><span class="line">        var elem = document.getElementById(&apos;input&apos; + i);</span><br><span class="line">        if(elem === null) &#123;</span><br><span class="line">            return null;</span><br><span class="line">        &#125;</span><br><span class="line">        if(elem.value === &apos;&apos;) &#123;</span><br><span class="line">            elem.value = new_value;</span><br><span class="line">            return elem;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="��-10-��-��ȡ����"><a href="#��-10-��-��ȡ����" class="headerlink" title="�� 10 �� ��ȡ����"></a>�� 10 �� ��ȡ����</h1><p>����ѧ���ǰѴ������ֳ�С�����ٰ���Щ����Ľ�������Ż�һ��</p><p>����Ӧ����ȷһ�������ĸ߲��Ŀ�꣬Ȼ����ڲ���ֱ��Ϊ�����Ŀ�깤���Ĵ��룬��ȡ�����ŵ������ĺ����С�</p><p>�����ԵĴ��룺</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">int findClostElement(int[] arr) &#123;</span><br><span class="line">    int clostIdx;</span><br><span class="line">    int clostDist = Interger.MAX_VALUE;</span><br><span class="line">    for(int i = 0; i &lt; arr.length; i++) &#123;</span><br><span class="line">        int x = ...;</span><br><span class="line">        int y = ...;</span><br><span class="line">        int z = ...;</span><br><span class="line">        int value = x * y * z;</span><br><span class="line">        int dist = Math.sqrt(Math.pow(value, 2), Math.pow(arr[i], 2));</span><br><span class="line">        if(dist &lt; clostDist) &#123;</span><br><span class="line">            clostIdx = i;</span><br><span class="line">            clostDist = value;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return clostIdx;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>���ϴ�����ѭ��������Ҫ������룬�ⲿ�ֲ����ڴ���߲��Ŀ�꣬�߲��Ŀ����Ѱ����С�����ֵ����˿��԰��ⲿ�ִ�����ȡ�������ĺ����С�������Ҳ����һ������ĺô��У����Ե������в��ԡ����Կ����ҵ���������޸ġ�</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">public int findClostElement(int[] arr) &#123;</span><br><span class="line">    int clostIdx;</span><br><span class="line">    int clostDist = Interger.MAX_VALUE;</span><br><span class="line">    for(int i = 0; i &lt; arr.length; i++) &#123;</span><br><span class="line">        int dist = computDist(arr, i);</span><br><span class="line">        if(dist &lt; clostDist) &#123;</span><br><span class="line">            clostIdx = i;</span><br><span class="line">            clostDist = value;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return clostIdx;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>�����Ǻ�����ȡ��Խ��Խ�ã������ȡ���࣬���Ķ������ʱ�������Ҫ����������ȥ��ֻ���ڵ�ǰ��������Ҫȥ�˽�ĳһ�����ϸ�ڶ��ܹ����������ʱ�����������ȡ���Ӻ������Ǻõġ�</p><p>������ȡҲ���ڼ�С��������ࡣ</p><h1 id="��-11-��-һ��ֻ��һ����"><a href="#��-11-��-һ��ֻ��һ����" class="headerlink" title="�� 11 �� һ��ֻ��һ����"></a>�� 11 �� һ��ֻ��һ����</h1><p>ֻ��һ���µĴ������������֪����Ҫ�����£�</p><p>�������̣��г������������������񣻰�ÿ�������ֵ���ͬ�ĺ��������߲�ͬ�Ķ��䡣</p><h1 id="��-12-��-����C���Ա�������"><a href="#��-12-��-����C���Ա�������" class="headerlink" title="�� 12 �� ����Ȼ���Ա�������"></a>�� 12 �� ����Ȼ���Ա�������</h1><p>������Ȼ������д�����߼���Ҳ����α���룬Ȼ����д���룬���������߼����������</p><h1 id="��-13-��-���ٴ�����"><a href="#��-13-��-���ٴ�����" class="headerlink" title="�� 13 �� ���ٴ�����"></a>�� 13 �� ���ٴ�����</h1><p>��Ҫ������ƣ�������̻��кܶ�仯��������Ƶ����ݵ�������������õġ�</p><p>���ñ�׼��ʵ�֡�</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- GFM-TOC --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#��-1-��-�ɶ��Ե���Ҫ��&quot;&gt;�� 1 �� �ɶ��Ե���Ҫ��&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#��-2-��-�����ֱ����뺬��&quot;&gt;�� 2 �� �����ֱ���
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2018/03/29/programming-basics-master/notes/%E7%AE%97%E6%B3%95/"/>
    <id>http://yoursite.com/2018/03/29/programming-basics-master/notes/算法/</id>
    <published>2018-03-29T14:37:48.207Z</published>
    <updated>2018-02-26T04:13:28.000Z</updated>
    
    <content type="html"><![CDATA[<!-- GFM-TOC --><ul><li><a href="#��һ��-����">��һ�� ����</a><ul><li><a href="#ջ">ջ</a></li><li><a href="#����">����</a></li><li><a href="#�㷨����">�㷨����</a><ul><li><a href="#1-����ת��">1. ����ת��</a></li><li><a href="#2-��ѧģ��">2. ��ѧģ��</a></li><li><a href="#3-threesum">3. ThreeSum</a></li><li><a href="#4-����ʵ��">4. ����ʵ��</a></li><li><a href="#5-ע������">5. ע������</a></li></ul></li><li><a href="#union-find">union-find</a><ul><li><a href="#1-quick-find-�㷨">1. quick-find �㷨</a></li><li><a href="#2-quick-union-�㷨">2. quick-union �㷨</a></li><li><a href="#3-��Ȩ-quick-union-�㷨">3. ��Ȩ quick-union �㷨</a></li><li><a href="#4-·��ѹ���ļ�Ȩ-quick-union-�㷨">4. ·��ѹ���ļ�Ȩ quick-union �㷨</a></li><li><a href="#5-����-union-find-�㷨�ıȽ�">5. ���� union-find �㷨�ıȽ�</a></li></ul></li></ul></li><li><a href="#�ڶ���-����">�ڶ��� ����</a><ul><li><a href="#���������㷨">���������㷨</a><ul><li><a href="#1-Լ��">1. Լ��</a></li><li><a href="#2-ѡ������">2. ѡ������</a></li><li><a href="#3-��������">3. ��������</a></li><li><a href="#4-ѡ������Ͳ�������ıȽ�">4. ѡ������Ͳ�������ıȽ�</a></li><li><a href="#5-ϣ������">5. ϣ������</a></li></ul></li><li><a href="#�鲢����">�鲢����</a><ul><li><a href="#1-�鲢����">1. �鲢����</a></li><li><a href="#2-�Զ����¹鲢����">2. �Զ����¹鲢����</a></li><li><a href="#3-�Ե����Ϲ鲢����">3. �Ե����Ϲ鲢����</a></li></ul></li><li><a href="#��������">��������</a><ul><li><a href="#1-�����㷨">1. �����㷨</a></li><li><a href="#2-�з�">2. �з�</a></li><li><a href="#3-���ܷ���">3. ���ܷ���</a></li><li><a href="#4-�㷨�Ľ�">4. �㷨�Ľ�</a><ul><li><a href="#41-�л�����������">4.1 �л�����������</a></li><li><a href="#42-��ȡ��">4.2 ��ȡ��</a></li><li><a href="#43-�����з�">4.3 �����з�</a></li></ul></li></ul></li><li><a href="#���ȶ���">���ȶ���</a><ul><li><a href="#1-��">1. ��</a></li><li><a href="#2-�ϸ����³�">2. �ϸ����³�</a></li><li><a href="#3-����Ԫ��">3. ����Ԫ��</a></li><li><a href="#4-ɾ�����Ԫ��">4. ɾ�����Ԫ��</a></li><li><a href="#5-������">5. ������</a></li><li><a href="#6-����">6. ����</a></li></ul></li><li><a href="#Ӧ��">Ӧ��</a><ul><li><a href="#1-�����㷨�ıȽ�">1. �����㷨�ıȽ�</a></li><li><a href="#2-java-�������㷨ʵ��">2. Java �������㷨ʵ��</a></li><li><a href="#3-�����зֵĿ���ѡ���㷨">3. �����зֵĿ���ѡ���㷨</a></li></ul></li></ul></li><li><a href="#������-����">������ ����</a><ul><li><a href="#���ű�">���ű�</a><ul><li><a href="#1-������ű�">1. ������ű�</a></li><li><a href="#2-������ű�">2. ������ű�</a></li><li><a href="#3-���ֲ���ʵ��������ű�">3. ���ֲ���ʵ��������ű�</a></li></ul></li><li><a href="#���������">���������</a><ul><li><a href="#1-get">1. get()</a></li><li><a href="#2-put">2. put()</a></li><li><a href="#3-����">3. ����</a></li><li><a href="#4-floor">4. floor()</a></li><li><a href="#5-rank">5. rank()</a></li><li><a href="#6-min">6. min()</a></li><li><a href="#7-deletemin">7. deleteMin()</a></li><li><a href="#8-delete">8. delete()</a></li><li><a href="#9-keys">9. keys()</a></li><li><a href="#10-���ܷ���">10. ���ܷ���</a></li></ul></li><li><a href="#ƽ�������">ƽ�������</a><ul><li><a href="#2-3-������">2-3 ������</a><ul><li><a href="#1-�������">1. �������</a></li><li><a href="#2-����">2. ����</a></li></ul></li><li><a href="#��ڶ��������">��ڶ��������</a><ul><li><a href="#1-����ת">1. ����ת</a></li><li><a href="#2-����ת">2. ����ת</a></li><li><a href="#3-��ɫת��">3. ��ɫת��</a></li><li><a href="#4-����">4. ����</a></li><li><a href="#5-ɾ����С��">5. ɾ����С��</a></li><li><a href="#6-����">6. ����</a></li></ul></li></ul></li><li><a href="#ɢ�б�">ɢ�б�</a><ul><li><a href="#1-ɢ�к���">1. ɢ�к���</a></li><li><a href="#2-������������ɢ�б�">2. ������������ɢ�б�</a></li><li><a href="#3-��������̽�ⷨ��ɢ�б�">3. ��������̽�ⷨ��ɢ�б�</a><ul><li><a href="#31-����">3.1 ����</a></li><li><a href="#32-����">3.2 ����</a></li><li><a href="#33-ɾ��">3.3 ɾ��</a></li><li><a href="#34-���������С">3.4 ���������С</a></li></ul></li></ul></li><li><a href="#Ӧ��">Ӧ��</a><ul><li><a href="#1-���ַ��ű�ʵ�ֵıȽ�">1. ���ַ��ű�ʵ�ֵıȽ�</a></li><li><a href="#2-java-�ķ��ű�ʵ��">2. Java �ķ��ű�ʵ��</a></li><li><a href="#3-��������">3. ��������</a></li><li><a href="#4-ϡ�������˷�">4. ϡ�������˷�</a><!-- GFM-TOC --></li></ul></li></ul></li></ul><h1 id="��һ��-����"><a href="#��һ��-����" class="headerlink" title="��һ�� ����"></a>��һ�� ����</h1><h2 id="ջ"><a href="#ջ" class="headerlink" title="ջ"></a>ջ</h2><p><strong>����ʵ��</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ResizeArrayStack</span>&lt;<span class="title">Item</span>&gt; <span class="keyword">implements</span> <span class="title">Iterable</span>&lt;<span class="title">Item</span>&gt; </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Item[] a = (Item[]) <span class="keyword">new</span> Object[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> N = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">push</span><span class="params">(Item item)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (N &gt;= a.length) &#123;</span><br><span class="line">            resize(<span class="number">2</span> * a.length);</span><br><span class="line">        &#125;</span><br><span class="line">        a[N++] = item;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Item <span class="title">pop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Item item = a[--N];</span><br><span class="line">        <span class="keyword">if</span> (N &lt;= a.length / <span class="number">4</span>) &#123;</span><br><span class="line">            resize(a.length / <span class="number">2</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> item;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ���������С��ʹ��ջ����������</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">resize</span><span class="params">(<span class="keyword">int</span> size)</span> </span>&#123;</span><br><span class="line">        Item[] tmp = (Item[]) <span class="keyword">new</span> Object[size];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++) &#123;</span><br><span class="line">            tmp[i] = a[i];</span><br><span class="line">        &#125;</span><br><span class="line">        a = tmp;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> N == <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">size</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> N;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Iterator&lt;Item&gt; <span class="title">iterator</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">// ��Ҫ������������ĵ�����</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> ReverseArrayIterator();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">ReverseArrayIterator</span> <span class="keyword">implements</span> <span class="title">Iterator</span>&lt;<span class="title">Item</span>&gt; </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> i = N;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hasNext</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> i &gt; <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> Item <span class="title">next</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> a[--i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>����ʵ��ʹ���˷��ͣ�Java ����ֱ�Ӵ����������飬ֻ��ʹ��ת����������</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Item[] arr = (Item[]) <span class="keyword">new</span> Object[N];</span><br></pre></td></tr></table></figure><p><strong>����ʵ��</strong></p><p>��Ҫʹ�������ͷ�巨��ʵ�֣���Ϊͷ�巨�����ѹ��ջ��Ԫ��������Ŀ�ͷ������ next ָ��ָ��ǰһ��ѹ��ջ��Ԫ�أ��ڵ���Ԫ��ʹ�Ϳ�����ǰһ��ѹ��ջ��Ԫ�س�Ϊջ��Ԫ�ء�</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Stack</span>&lt;<span class="title">Item</span>&gt; </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> Node top = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> N = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">Node</span> </span>&#123;</span><br><span class="line">        Item item;</span><br><span class="line">        Node next;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> N == <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">size</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> N;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">push</span><span class="params">(Item item)</span> </span>&#123;</span><br><span class="line">        Node newTop = <span class="keyword">new</span> Node();</span><br><span class="line">        newTop.item = item;</span><br><span class="line">        newTop.next = top;</span><br><span class="line">        top = newTop;</span><br><span class="line">        N++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Item <span class="title">pop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Item item = top.item;</span><br><span class="line">        top = top.next;</span><br><span class="line">        N--;</span><br><span class="line">        <span class="keyword">return</span> item;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="����"><a href="#����" class="headerlink" title="����"></a>����</h2><p>�����Ƕ��е�����ʵ�֣���Ҫά�� first �� last �ڵ�ָ�룬�ֱ�ָ����׺Ͷ�β��</p><p>������Ҫ�������ĸ�ָ��ָ������ͷ���ڵ㣬�ĸ�ָ��ָ������β���ڵ㡣��Ϊ�����в�����Ҫ�ö���Ԫ�ص���һ��Ԫ�س�Ϊ���ף�����Ҫ���׻�ȡ��һ��Ԫ�أ��������ͷ���ڵ�� next ָ��ָ����һ��Ԫ�أ�����ö���ָ�� first ָ������Ŀ�ͷ��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Queue</span>&lt;<span class="title">Item</span>&gt; </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Node first;</span><br><span class="line">    <span class="keyword">private</span> Node last;</span><br><span class="line">    <span class="keyword">int</span> N = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">Node</span></span>&#123;</span><br><span class="line">        Item item;</span><br><span class="line">        Node next;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> N == <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">size</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> N;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// �����</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">enqueue</span><span class="params">(Item item)</span></span>&#123;</span><br><span class="line">        Node newNode = <span class="keyword">new</span> Node();</span><br><span class="line">        newNode.item = item;</span><br><span class="line">        newNode.next = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span>(isEmpty())&#123;</span><br><span class="line">            last = newNode;</span><br><span class="line">            first = newNode;</span><br><span class="line">        &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">            last.next = newNode;</span><br><span class="line">            last = newNode;</span><br><span class="line">        &#125;</span><br><span class="line">        N++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// ������</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Item <span class="title">dequeue</span><span class="params">()</span></span>&#123;</span><br><span class="line">        Node node = first;</span><br><span class="line">        first = first.next;</span><br><span class="line">        N--;</span><br><span class="line">        <span class="keyword">return</span> node.item;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="�㷨����"><a href="#�㷨����" class="headerlink" title="�㷨����"></a>�㷨����</h2><h3 id="1-����ת��"><a href="#1-����ת��" class="headerlink" title="1. ����ת��"></a>1. ����ת��</h3><p>ָ����������ת��Ϊ���Ժ������Ӷ��ں���ͼ������ʾ�ĸ�ֱ�ۡ�</p><p>T(N)=aN<sup>3</sup> ת��Ϊ lg(T(N))=3lgN+lga</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/5510045a-8f32-487f-a756-463e51a6dab0.png" alt=""></p><h3 id="2-��ѧg��"><a href="#2-��ѧg��" class="headerlink" title="2. ��ѧģ��"></a>2. ��ѧģ��</h3><p><strong>����</strong></p><p>ʹ�� ~f(N) ����ʾ�������� N ��������� f(N) �Ľ�������� 1 �ĺ��� , ���� N<sup>3</sup>/6-N<sup>2</sup>/2+N/3 ~ N<sup>3</sup>/6��</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/ca3a793e-06e5-4ff3-b28e-a9c20540d164.png" alt=""></p><p><strong>����������</strong></p><p>�������������㷨������ʵ�ָ��뿪����һ���㷨������������Ϊ N<sup>3</sup> �����Ƿ��� Java ʵ�֣��Ƿ��������ض���������޹ء�</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/1ea4dc9a-c4dd-46b5-bb11-49f98d57ded1.png" alt=""></p><p><strong>��ѭ��</strong></p><p>ִ����Ƶ����ָ������˳���ִ�е���ʱ�䣬����Щָ���Ϊ�������ѭ����</p><p><strong>�ɱ�ģ��</strong></p><p>ʹ�óɱ�ģ���������㷨����������ķ��ʴ�������һ�ֳɱ�ģ�͡�</p><h3 id="3-ThreeSum"><a href="#3-ThreeSum" class="headerlink" title="3. ThreeSum"></a>3. ThreeSum</h3><p>ThreeSum ��������ͳ��һ����������Ԫ��ĺ�Ϊ 0 ��������</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ThreeSum</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">count</span><span class="params">(<span class="keyword">int</span>[] a)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> N = a.length;</span><br><span class="line">        <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; N; j++) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> k = j + <span class="number">1</span>; k &lt; N; k++) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (a[i] + a[j] + a[k] == <span class="number">0</span>) &#123;</span><br><span class="line">                        cnt++;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> cnt;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>�ó������ѭ��Ϊ if (a[i] + a[j] + a[k] == 0) ��䣬�ܹ�ִ�еĴ���Ϊ N<sup>3</sup>/6-N<sup>2</sup>/2+N/3��������Ľ���ִ�д���Ϊ ~N<sup>3</sup>/6������������Ϊ N<sup>3</sup>��</p><p><strong>�Ľ�</strong></p><p>ͨ�������������򣬶�����Ԫ����ͣ����ö��ֲ��ҷ��������Ƿ���ڸú͵��෴����������ڣ���˵��������Ԫ��ĺ�Ϊ 0��</p><p>�÷������Խ� ThreeSum �㷨��������������Ϊ N<sup>2</sup>logN��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ThreeSumFast</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">count</span><span class="params">(<span class="keyword">int</span>[] a)</span> </span>&#123;</span><br><span class="line">        Arrays.sort(a);</span><br><span class="line">        <span class="keyword">int</span> N = a.length;</span><br><span class="line">        <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; N; j++) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> k = j + <span class="number">1</span>; k &lt; N; k++) &#123;</span><br><span class="line">                    <span class="comment">// rank() ��������Ԫ���������е��±꣬���Ԫ�ز����ڣ�����᷵�� -1��Ӧ��ע��������±������� j�������Ͳ����ظ�ͳ���ˡ�</span></span><br><span class="line">                    <span class="keyword">if</span> (BinarySearch.rank(-a[i] - a[j], a) &gt; j) &#123;</span><br><span class="line">                        cnt++;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> cnt;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-����ʵ��"><a href="#4-����ʵ��" class="headerlink" title="4. ����ʵ��"></a>4. ����ʵ��</h3><p>��� T(N) ~ aN<sup>b</sup>lgN����ô T(2N)/T(N) ~ 2<sup>b</sup>��������ڱ��������� ThreeSum �㷨������ʱ��Ϊ ~N<sup>3</sup>/6���������б���ʵ��õ����½����</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/6f5ed46f-86d7-4852-a34f-c1cf1b6343a0.png" alt=""></p><p>�ɼ� T(2N)/T(N)~2<sup>3</sup>��Ҳ���� b Ϊ 3��</p><h3 id="5-ע������"><a href="#5-ע������" class="headerlink" title="5. ע������"></a>5. ע������</h3><p><strong>����</strong></p><p>�������ʱ������ͼ���ĳ���ϵ���ܴ���ô���ƵĽ�����Ǵ���ġ�</p><p><strong>����</strong></p><p>�����ϵͳ��ʹ�û��漼������֯�ڴ棬�����������ڵ�Ԫ�ػ�ȷ��ʲ����ڵ�Ԫ�ؿ�ܶࡣ</p><p><strong>�������µ����ܵı�֤</strong></p><p>�ں˷�Ӧ�ѡ�������������ɲ���������е�����������µ�������ʮ����Ҫ�ġ�</p><p><strong>������㷨</strong></p><p>ͨ���������룬ȥ���㷨�������������</p><p><strong>��̯����</strong></p><p>�����в������ܳɱ����Բ������������ɱ���̯�������һ����ջ���� N �������� push() ������Ҫ���������Ԫ��Ϊ N+4+8+16+…+2N=5N-4��N ��������д��Ԫ�أ�����Ķ��ǵ��������Сʱ���и�����Ҫ�ķ����������������̯��ÿ�β������������ƽ������Ϊ������</p><h2 id="union-find"><a href="#union-find" class="headerlink" title="union-find"></a>union-find</h2><p><strong>����</strong></p><p>���ڽ����̬��ͨ�����⣬�ܶ�̬���������㣬�����ж��������Ƿ����ӡ�</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/5d387d02-6f96-44d6-b5d0-4538349f868e.png" alt=""></p><p><strong>API</strong></p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/a9b91b7d-65d7-4aa3-8ef6-21876b05ad16.png" alt=""></p><p><strong>�������ݽṹ</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UF</span> </span>&#123;</span><br><span class="line">    <span class="comment">// ʹ�� id ��������������ͨ��Ϣ</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span>[] id;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">UF</span><span class="params">(<span class="keyword">int</span> N)</span> </span>&#123;</span><br><span class="line">        id = <span class="keyword">new</span> <span class="keyword">int</span>[N];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++) &#123;</span><br><span class="line">            id[i] = i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">connected</span><span class="params">(<span class="keyword">int</span> p, <span class="keyword">int</span> q)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> find(p) == find(q);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-quick-find-�㷨"><a href="#1-quick-find-�㷨" class="headerlink" title="1. quick-find �㷨"></a>1. quick-find �㷨</h3><p>��֤��ͬһ��ͨ���������д���� id ֵ��ȡ�</p><p>���ַ������Կ���ȡ��һ������� id ֵ�������ж����������Ƿ���ͨ������ union �Ĳ�������ȴ�ܸߣ���Ҫ������һ����ͨ�����е����нڵ� id ֵ���޸�Ϊ��һ���ڵ�� id ֵ��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> p)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> id[p];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">union</span><span class="params">(<span class="keyword">int</span> p, <span class="keyword">int</span> q)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> pID = find(p);</span><br><span class="line">    <span class="keyword">int</span> qID = find(q);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (pID == qID) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; id.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (id[i] == pID) id[i] = qID;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-quick-union-�㷨"><a href="#2-quick-union-�㷨" class="headerlink" title="2. quick-union �㷨"></a>2. quick-union �㷨</h3><p>�� union ʱֻ������� id ֵָ����һ������ id ֵ����ֱ���� id ���洢�������ͨ�����������͹���һ�����õ����νṹ�����ڵ���Ҫָ���Լ����ڽ��в���һ���ڵ��������ͨ����ʱ��Ҫһֱ���ϲ���ֱ�����ڵ㣬��ʹ�ø��ڵ�� id ֵ��Ϊ����ͨ������ idֵ��</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/9192dc0a-a7cd-4030-8df6-e388600644cf.jpg" alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> p)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (p != id[p]) p = id[p];</span><br><span class="line">    <span class="keyword">return</span> p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">union</span><span class="params">(<span class="keyword">int</span> p, <span class="keyword">int</span> q)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> pRoot = find(p);</span><br><span class="line">    <span class="keyword">int</span> qRoot = find(q);</span><br><span class="line">    <span class="keyword">if</span> (pRoot == qRoot) <span class="keyword">return</span>;</span><br><span class="line">    id[pRoot] = qRoot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>���ַ������Կ��ٽ��� union ���������� find ���������߳����ȣ������������ĸ߶�Ϊ�������Ŀ��</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/d206d090-d911-4263-a1fe-d6f63f5d1776.png" alt=""></p><h3 id="3-��E-quick-union-�㷨"><a href="#3-��E-quick-union-�㷨" class="headerlink" title="3. ��Ȩ quick-union �㷨"></a>3. ��Ȩ quick-union �㷨</h3><p>Ϊ�˽�� quick-union ����ͨ����ܸߵ����⣬��Ȩ quick-union �� union ����ʱ���ý�С�������ӽϴ�������档</p><p>�����о�֤������Ȩ quick-union �㷨������������಻���� lgN��</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/8d6af5ac-74eb-4e07-99aa-654b9f21f1d3.jpg" alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WeightedQuickUnionUF</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span>[] id;</span><br><span class="line">    <span class="comment">// ����ڵ��������Ϣ</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span>[] sz;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">WeightedQuickUnionUF</span><span class="params">(<span class="keyword">int</span> N)</span> </span>&#123;</span><br><span class="line">        id = <span class="keyword">new</span> <span class="keyword">int</span>[N];</span><br><span class="line">        sz = <span class="keyword">new</span> <span class="keyword">int</span>[N];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++) &#123;</span><br><span class="line">            id[i] = i;</span><br><span class="line">            sz[i] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">connected</span><span class="params">(<span class="keyword">int</span> p, <span class="keyword">int</span> q)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> find(p) == find(q);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> p)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (p != id[p]) p = id[p];</span><br><span class="line">        <span class="keyword">return</span> p;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">union</span><span class="params">(<span class="keyword">int</span> p, <span class="keyword">int</span> q)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i = find(p);</span><br><span class="line">        <span class="keyword">int</span> j = find(q);</span><br><span class="line">        <span class="keyword">if</span> (i == j) <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">if</span> (sz[i] &lt; sz[j]) &#123;</span><br><span class="line">            id[i] = j;</span><br><span class="line">            sz[j] += sz[i];</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            id[j] = i;</span><br><span class="line">            sz[i] += sz[j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-·��ѹ���l�E-quick-union-�㷨"><a href="#4-·��ѹ���l�E-quick-union-�㷨" class="headerlink" title="4. ·��ѹ���ļ�Ȩ quick-union �㷨"></a>4. ·��ѹ���ļ�Ȩ quick-union �㷨</h3><p>�ڼ��ڵ��ͬʱ������ֱ�����ӵ����ڵ㣬ֻ��Ҫ�� find �����һ��ѭ�����ɡ�</p><h3 id="5-����-union-find-�㷨�iL�"><a href="#5-����-union-find-�㷨�iL�" class="headerlink" title="5. ���� union-find �㷨�ıȽ�"></a>5. ���� union-find �㷨�ıȽ�</h3><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/e5baeb38-0ec9-4ad7-8374-1cdb0dba74a6.jpg" alt=""></p><h1 id="�ڶ���-����"><a href="#�ڶ���-����" class="headerlink" title="�ڶ��� ����"></a>�ڶ��� ����</h1><h2 id="���������㷨"><a href="#���������㷨" class="headerlink" title="���������㷨"></a>���������㷨</h2><h3 id="1-Լ��"><a href="#1-Լ��" class="headerlink" title="1. Լ��"></a>1. Լ��</h3><p>�������Ԫ����Ҫʵ�� Java �� Comparable �ӿڣ��ýӿ��� compareTo() ������</p><p>�о������㷨�ĳɱ�ģ��ʱ��������ǱȽϺͽ����Ĵ�����</p><p>ʹ�ø������� less() �� exch() �����бȽϺͽ����Ĳ�����ʹ�ô���Ŀɶ��ԺͿ���ֲ�Ը��á�</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">less</span><span class="params">(Comparable v, Comparable w)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> v.compareTo(w) &lt; <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">exch</span><span class="params">(Comparable[] a, <span class="keyword">int</span> i, <span class="keyword">int</span> j)</span></span>&#123;</span><br><span class="line">    Comparable t = a[i];</span><br><span class="line">    a[i] = a[j];</span><br><span class="line">    a[j] = t;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-ѡ������"><a href="#2-ѡ������" class="headerlink" title="2. ѡ������"></a>2. ѡ������</h3><p>�ҵ������е���СԪ�أ�Ȼ����������ĵ�һ��Ԫ�ؽ���λ�á�Ȼ���ٴ�ʣ�µ�Ԫ�����ҵ���С��Ԫ�أ�����������ĵڶ���Ԫ�ؽ���λ�á����Ͻ��������Ĳ�����ֱ����������������</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/222768a7-914f-4d64-b874-d98f3b926fb6.jpg" alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Selection</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">sort</span><span class="params">(Comparable[] a)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> N = a.length;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> min = i;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; N; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (less(a[j], a[min])) min = j;</span><br><span class="line">            &#125;</span><br><span class="line">            exch(a, i, min);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ѡ��������Ҫ ~N<sup>2</sup>/2 �αȽϺ� ~N �ν�������������ʱ���������޹أ�����ص�ʹ������һ���Ѿ����������Ҳ��Ҫ��ô��ıȽϺͽ���������</p><h3 id="3-��������"><a href="#3-��������" class="headerlink" title="3. ��������"></a>3. ��������</h3><p>��һ��Ԫ�ز��뵽������������У�ʹ�ò���֮�������Ҳ������ġ�������������Ҳ���ÿ��Ԫ�أ�ÿ�β���֮���󲿵�������������ġ�</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/065c3bbb-3ea0-4dbf-8f26-01d0e0ba7db7.png" alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Insertion</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">sort</span><span class="params">(Comparable[] a)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> N = a.length;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; N; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &gt; <span class="number">0</span> &amp;&amp; less(a[j], a[j - <span class="number">1</span>]); j--) &#123;</span><br><span class="line">                exch(a, j, j - <span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>��������ĸ��Ӷ�ȡ��������ĳ�ʼ˳����������Ѿ����������ˣ���ô���������ܿ졣ƽ������²���������Ҫ ~N<sup>2</sup>/4 �Ƚ��Լ� ~N<sup>2</sup>/4 �ν���������������Ҫ ~N<sup>2</sup>/2 �Ƚ��Լ� ~N<sup>2</sup>/2 �ν�����������������������ģ�����õ��������Ҫ N-1 �αȽϺ� 0 �ν�������õ�������������Ѿ������ˡ�</p><p>����������ڲ������������С��ģ�����ر��Ч��</p><h3 id="4-ѡ������Ͳ�������iL�"><a href="#4-ѡ������Ͳ�������iL�" class="headerlink" title="4. ѡ������Ͳ�������ıȽ�"></a>4. ѡ������Ͳ�������ıȽ�</h3><p>���������������ظ����������飬���������ѡ�����������ʱ����ƽ������ģ�����֮����һ����С�ĳ�����</p><h3 id="5-ϣ������"><a href="#5-ϣ������" class="headerlink" title="5. ϣ������"></a>5. ϣ������</h3><p>���ڴ��ģ�����飬���������������Ϊ��ֻ�ܽ������ڵ�Ԫ�أ����Ҫ��Ԫ�ش�һ���Ƶ���һ�ˣ�����Ҫ�ܶ�β�����</p><p>ϣ������ĳ��־���Ϊ�˸Ľ�������������־����ԣ���ͨ�����������ڵ�Ԫ�أ�ʹ��Ԫ�ظ�����Ƶ���ȷ��λ���ϡ�</p><p>ϣ������ʹ�ò�������Լ�� h �����н���������� h �ܴ���ôԪ�ؾ��ܺܿ���Ƶ���Զ�ĵط���ͨ�����ϼ�С h������� h=1���Ϳ���ʹ����������������ġ�</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/8320bad6-3f91-4a15-8e3d-68e8f39649b5.png" alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Shell</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">sort</span><span class="params">(Comparable[] a)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> N = a.length;</span><br><span class="line">        <span class="keyword">int</span> h = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (h &lt; N / <span class="number">3</span>) &#123;</span><br><span class="line">            h = <span class="number">3</span> * h + <span class="number">1</span>;<span class="comment">// 1, 4, 13, 40, ...</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (h &gt;= <span class="number">1</span>) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = h; i &lt; N; i++) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &gt;= h &amp;&amp; less(a[j], a[j - h]); j -= h) &#123;</span><br><span class="line">                    exch(a, j, j - h);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            h = h / <span class="number">3</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ϣ�����������ʱ��ﲻ��ƽ������ʹ�õ������� 1, 4, 13, 40, … ��ϣ����������Ҫ�ıȽϴ������ᳬ�� N ����ɱ����ڵ������еĳ��ȡ�������ܵĸ߼������㷨ֻ���ϣ��������������ҡ�</p><h2 id="�鲢����"><a href="#�鲢����" class="headerlink" title="�鲢����"></a>�鲢����</h2><p>�鲢�����˼���ǽ�����ֳ������֣��ֱ��������Ȼ��鲢������</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/dcf265ad-fe35-424d-b4b7-d149cdf239f4.png" alt=""></p><h3 id="1-�鲢����"><a href="#1-�鲢����" class="headerlink" title="1. �鲢����"></a>1. �鲢����</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MergeSort</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> Comparable[] aux;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">merge</span><span class="params">(Comparable[] a, <span class="keyword">int</span> lo, <span class="keyword">int</span> mid, <span class="keyword">int</span> hi)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i = lo, j = mid + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> k = lo; k &lt;= hi; k++) &#123;</span><br><span class="line">            aux[k] = a[k]; <span class="comment">// �����ݸ��Ƶ���������</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> k = lo; k &lt;= hi; k++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i &gt; mid) a[k] = aux[j++];</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (j &gt; hi) a[k] = aux[i++];</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (aux[i].compareTo(a[j]) &lt; <span class="number">0</span>) a[k] = aux[i++]; <span class="comment">// �Ƚ�����һ������֤�ȶ���</span></span><br><span class="line">            <span class="keyword">else</span> a[k] = aux[j++];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-�Զ����¹鲢����"><a href="#2-�Զ����¹鲢����" class="headerlink" title="2. �Զ����¹鲢����"></a>2. �Զ����¹鲢����</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">sort</span><span class="params">(Comparable[] a)</span> </span>&#123;</span><br><span class="line">    aux = <span class="keyword">new</span> Comparable[a.length];</span><br><span class="line">    sort(a, <span class="number">0</span>, a.length - <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">sort</span><span class="params">(Comparable[] a, <span class="keyword">int</span> lo, <span class="keyword">int</span> hi)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (hi &lt;= lo) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">int</span> mid = lo + (hi - lo) / <span class="number">2</span>;</span><br><span class="line">    sort(a, lo, mid);</span><br><span class="line">    sort(a, mid + <span class="number">1</span>, hi);</span><br><span class="line">    merge(a, lo, mid, hi);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/6468a541-3a9a-4008-82b6-03a0fe941d2a.png" alt=""></p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/c7665f73-c52f-4ce4-aed3-592bbd76265b.png" alt=""></p><p>�����׿����������㷨��ʱ�临�Ӷ�Ϊ O(Nlg<sub>N</sub>)��</p><p>��ΪС����ĵݹ���������Ƶ�������ʹ�ò�������������С���齫���ø��ߵ����ܡ�</p><h3 id="3-�Ե����Ϲ鲢����"><a href="#3-�Ե����Ϲ鲢����" class="headerlink" title="3. �Ե����Ϲ鲢����"></a>3. �Ե����Ϲ鲢����</h3><p>�ȹ鲢��Щ΢�����飬Ȼ��ɶԹ鲢�õ��������顣</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/c7b9b4c8-83d1-4eb0-8408-ea6576a9ed90.png" alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">busort</span><span class="params">(Comparable[] a)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> N = a.length;</span><br><span class="line">    aux = <span class="keyword">new</span> Comparable[N];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> sz = <span class="number">1</span>; sz &lt; N; sz += sz) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> lo = <span class="number">0</span>; lo &lt; N - sz; lo += sz + sz) &#123;</span><br><span class="line">            merge(a, lo, lo + sz - <span class="number">1</span>, Math.min(lo + sz + sz - <span class="number">1</span>, N - <span class="number">1</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="��������"><a href="#��������" class="headerlink" title="��������"></a>��������</h2><h3 id="1-�����㷨"><a href="#1-�����㷨" class="headerlink" title="1. �����㷨"></a>1. �����㷨</h3><p>�鲢���������Ϊ����������ֱ����򣬲��������������鲢ʹ�������������򣻿�������ͨ��һ���з�Ԫ�ؽ������Ϊ���������飬��������С�ڵ����з�Ԫ�أ�����������ڵ����з�Ԫ�أ�������������������Ҳ�ͽ��������������ˡ�</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/61b4832d-71f3-413c-84b6-237e219b9fdc.png" alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QuickSort</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">sort</span><span class="params">(Comparable[] a)</span> </span>&#123;</span><br><span class="line">        shuffle(a);</span><br><span class="line">        sort(a, <span class="number">0</span>, a.length - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">sort</span><span class="params">(Comparable[] a, <span class="keyword">int</span> lo, <span class="keyword">int</span> hi)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (hi &lt;= lo) <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">int</span> j = partition(a, lo, hi);</span><br><span class="line">        sort(a, lo, j - <span class="number">1</span>);</span><br><span class="line">        sort(a, j + <span class="number">1</span>, hi);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-�з�"><a href="#2-�з�" class="headerlink" title="2. �з�"></a>2. �з�</h3><p>ȡ a[lo] ��Ϊ�з�Ԫ�أ�Ȼ���������������ɨ��ֱ���ҵ���һ�����ڵ�������Ԫ�أ��ٴ�������Ҷ�����ɨ���ҵ���һ��С�ڵ�������Ԫ�أ�����������Ԫ�أ������ϼ���������̣��Ϳ��Ա�֤��ָ������Ԫ�ض��������з�Ԫ�أ���ָ�� j ���Ҳ�Ԫ�ض���С���з�Ԫ�ء�������ָ������ʱ�����з�Ԫ�� a[lo] �������������Ҳ��Ԫ�� a[j] ����Ȼ�󷵻� j ���ɡ�</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/e198c201-f386-4491-8ad6-f7e433bf992d.png" alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">partition</span><span class="params">(Comparable[] a, <span class="keyword">int</span> lo, <span class="keyword">int</span> hi)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = lo, j = hi + <span class="number">1</span>;</span><br><span class="line">    Comparable v = a[lo];</span><br><span class="line">    <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">        <span class="keyword">while</span> (less(a[++i], v)) <span class="keyword">if</span> (i == hi) <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">while</span> (less(v, a[--j])) <span class="keyword">if</span> (j == lo) <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">if</span> (i &gt;= j) <span class="keyword">break</span>;</span><br><span class="line">        exch(a, i, j);</span><br><span class="line">    &#125;</span><br><span class="line">    exch(a, lo, j);</span><br><span class="line">    <span class="keyword">return</span> j;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-���ܷ���"><a href="#3-���ܷ���" class="headerlink" title="3. ���ܷ���"></a>3. ���ܷ���</h3><p>����������ԭ�����򣬲���Ҫ�������飬���ǵݹ������Ҫ����ջ��</p><p>����������õ��������ÿ�ζ������ܽ�����԰�֣������ݹ���ô����������ٵġ���������±Ƚϴ���Ϊ C<sub>N</sub>=2C<sub>N/2</sub>+N��Ҳ���Ǹ��Ӷ�Ϊ O(Nlg<sub>N</sub>)��</p><p>�������£���һ�δ���С��Ԫ���з֣��ڶ��δӵڶ�С��Ԫ���з֣������㡣�������������Ҫ�Ƚ� N<sup>2</sup>/2��Ϊ�˷�ֹ�����ʼ��������ģ��ڽ��п�������ʱ��Ҫ����������顣</p><h3 id="4-�㷨�L�"><a href="#4-�㷨�L�" class="headerlink" title="4. �㷨�Ľ�"></a>4. �㷨�Ľ�</h3><h4 id="4-1-�л�����������"><a href="#4-1-�л�����������" class="headerlink" title="4.1 �л�����������"></a>4.1 �л�����������</h4><p>��Ϊ����������С������Ҳ������Լ�������С���飬��������ȿ�����������ܸ��ã������С�����п����л�����������</p><h4 id="4-2-��ȡ��"><a href="#4-2-��ȡ��" class="headerlink" title="4.2 ��ȡ��"></a>4.2 ��ȡ��</h4><p>��õ��������ÿ�ζ���ȡ�������λ����Ϊ�з�Ԫ�أ����Ǽ�����λ���Ĵ��ۺܸߡ����Ƿ���ȡ 3 ��Ԫ�ز�����С���е�Ԫ����Ϊ�з�Ԫ�ص�Ч����á�</p><h4 id="4-3-�����з�"><a href="#4-3-�����з�" class="headerlink" title="4.3 �����з�"></a>4.3 �����з�</h4><p>�����д����ظ�Ԫ�ص����飬���Խ������з�Ϊ�����֣��ֱ��ӦС�ڡ����ںʹ����з�Ԫ�ء�</p><p>�����зֿ����������ֻ����ɲ�ͬ����������������������ʱ�����������</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/9d2226dc-c4a3-40ec-9b3e-a46bf86af499.png" alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Quick3Way</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">sort</span><span class="params">(Comparable[] a, <span class="keyword">int</span> lo, <span class="keyword">int</span> hi)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (hi &lt;= lo) <span class="keyword">return</span>;</span><br><span class="line">        <span class="keyword">int</span> lt = lo, i = lo + <span class="number">1</span>, gt = hi;</span><br><span class="line">        Comparable v = a[lo];</span><br><span class="line">        <span class="keyword">while</span> (i &lt;= gt) &#123;</span><br><span class="line">            <span class="keyword">int</span> cmp = a[i].compareTo(v);</span><br><span class="line">            <span class="keyword">if</span> (cmp &lt; <span class="number">0</span>) exch(a, lt++, i++);</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (cmp &gt; <span class="number">0</span>) exch(a, i, gt--);</span><br><span class="line">            <span class="keyword">else</span> i++;</span><br><span class="line">        &#125;</span><br><span class="line">        sort(a, lo, lt - <span class="number">1</span>);</span><br><span class="line">        sort(a, gt + <span class="number">1</span>, hi);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="���ȶ���"><a href="#���ȶ���" class="headerlink" title="���ȶ���"></a>���ȶ���</h2><p>���ȶ�����Ҫ���ڴ������Ԫ�ء�</p><h3 id="1-��"><a href="#1-��" class="headerlink" title="1. ��"></a>1. ��</h3><p>���壺һ�Ŷ�������ÿ���ڵ㶼���ڵ������������ӽڵ㡣</p><p>�ѿ�������������ʾ����Ϊ����һ����ȫ������������ȫ�����������׾ʹ洢�������С�λ�� k �Ľڵ�ĸ��ڵ�λ��Ϊ k/2�������������ӽڵ��λ�÷ֱ�Ϊ 2k �� 2k+1���������ǲ�ʹ����������Ϊ 0 ��λ�ã���Ϊ�˸����������ڵ�Ĺ�ϵ��</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/a9b6c1db-0f4a-4e91-8ac8-6b19bd106b51.png" alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MaxPQ</span>&lt;<span class="title">Key</span> <span class="keyword">extends</span> <span class="title">Comparable</span>&lt;<span class="title">Key</span>&gt; </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Key[] pq;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> N = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MaxPQ</span><span class="params">(<span class="keyword">int</span> maxN)</span> </span>&#123;</span><br><span class="line">        pq = (Key[]) <span class="keyword">new</span> Comparable[maxN + <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isEmpty</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> N == <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">size</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> N;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">less</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> j)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> pq[i].compareTo(pq[j]) &lt; <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">exch</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> j)</span> </span>&#123;</span><br><span class="line">        Key t = pq[i];</span><br><span class="line">        pq[i] = pq[j];</span><br><span class="line">        pq[j] = t;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-�ϸ����³�"><a href="#2-�ϸ����³�" class="headerlink" title="2. �ϸ����³�"></a>2. �ϸ����³�</h3><p>�ڶ��У���һ���ڵ�ȸ��ڵ����ô��Ҫ������������ڵ㡣�����󻹿��ܱ����µĸ��ڵ�������Ҫ���ϵؽ��бȽϺͽ��������������ֲ�����Ϊ�ϸ���</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">swim</span><span class="params">(<span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (k &gt; <span class="number">1</span> &amp;&amp; less(k / <span class="number">2</span>, k)) &#123;</span><br><span class="line">        exch(k / <span class="number">2</span>, k);</span><br><span class="line">        k = k / <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>���Ƶأ���һ���ڵ���ӽڵ�����С��Ҳ��Ҫ���ϵ����±ȽϺͽ��������������ֲ�����Ϊ�³���һ���ڵ��������ӽڵ㣬Ӧ���������ӽڵ��������ô�ڵ���н�����</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">sink</span><span class="params">(<span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="number">2</span> * k &lt;= N) &#123;</span><br><span class="line">        <span class="keyword">int</span> j = <span class="number">2</span> * k;</span><br><span class="line">        <span class="keyword">if</span> (j &lt; N &amp;&amp; less(j, j + <span class="number">1</span>)) j++;</span><br><span class="line">        <span class="keyword">if</span> (!less(k, j)) <span class="keyword">break</span>;</span><br><span class="line">        exch(k, j);</span><br><span class="line">        k = j;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-����Ԫ��"><a href="#3-����Ԫ��" class="headerlink" title="3. ����Ԫ��"></a>3. ����Ԫ��</h3><p>����Ԫ�طŵ�����ĩβ��Ȼ���ϸ������ʵ�λ�á�</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insert</span><span class="params">(Key v)</span> </span>&#123;</span><br><span class="line">    pq[++N] = v;</span><br><span class="line">    swim(N);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-ɾ�����Ԫ��"><a href="#4-ɾ�����Ԫ��" class="headerlink" title="4. ɾ�����Ԫ��"></a>4. ɾ�����Ԫ��</h3><p>�����鶥��ɾ������Ԫ�أ�������������һ��Ԫ�طŵ����ˣ��������Ԫ���³������ʵ�λ�á�</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Key <span class="title">delMax</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Key max = pq[<span class="number">1</span>];</span><br><span class="line">    exch(<span class="number">1</span>, N--);</span><br><span class="line">    pq[N + <span class="number">1</span>] = <span class="keyword">null</span>;</span><br><span class="line">    sink(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> max;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-������"><a href="#5-������" class="headerlink" title="5. ������"></a>5. ������</h3><p>���ڶѿ��Ժ����׵õ�����Ԫ�ز�ɾ���������ϵؽ������ֲ������Եõ�һ���ݼ����С���������Ԫ�غ͵�ǰ������������һ��Ԫ�ؽ���λ�ã����Ҳ�ɾ��������ô�Ϳ��Եõ�һ����β��ͷ�ĵݼ����У���������������һ���������С���˺�����ʹ�ö����������򣬲��Ҷ�������ԭ�����򣬲�ռ�ö���ռ䡣</p><p>������Ҫ�������׶Σ���һ���׶��ǰ��������齨��һ���ѣ��ڶ����׶��ǽ������Ԫ�غ͵�ǰ�ѵ��������һ��Ԫ�أ����ҽ����³�����ά�ֶѵ�����״̬��</p><p>�������齨������ֱ�ӵķ����Ǵ����ұ������飬Ȼ������ϸ�������һ������Ч�ķ����Ǵ�����������³����������һ���ڵ�������ڵ㶼�Ѿ��Ƕ�������ô�����³���������ʹ������ڵ�Ϊ���ڵ�Ķ�����Ҷ�ӽڵ㲻��Ҫ�����³���������˿��Ժ���Ҷ�ӽڵ��Ԫ�أ����ֻ��Ҫ����һ���Ԫ�ؼ��ɡ�</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/a2670745-a7b1-497b-90a4-dbddc4e2006d.jpg" alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">sort</span><span class="params">(Comparable[] a)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> N = a.length;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k = N/<span class="number">2</span>; k &gt;= <span class="number">1</span>; k--)&#123;</span><br><span class="line">        sink(a, k, N);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(N &gt; <span class="number">1</span>)&#123;</span><br><span class="line">        exch(a, <span class="number">1</span>, N--);</span><br><span class="line">        sink(a, <span class="number">1</span>, N);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-����"><a href="#6-����" class="headerlink" title="6. ����"></a>6. ����</h3><p>һ���ѵĸ߶�Ϊ lgN������ڶ��в���Ԫ�غ�ɾ�����Ԫ�صĸ��Ӷȶ�Ϊ lgN��</p><p>���ڶ���������Ҫ�� N ���ڵ�����³���������˸��Ӷ�Ϊ NlgN��</p><p>������ʱһ��ԭ������û�����ö���Ŀռ䡣</p><p>�ִ�����ϵͳ����ʹ�ö�������Ϊ���޷����û��棬Ҳ��������Ԫ�غ��ٺ����ڵ�Ԫ�ؽ��бȽϡ�</p><h2 id="Ӧ��"><a href="#Ӧ��" class="headerlink" title="Ӧ��"></a>Ӧ��</h2><h3 id="1-�����㷨�iL�"><a href="#1-�����㷨�iL�" class="headerlink" title="1. �����㷨�ıȽ�"></a>1. �����㷨�ıȽ�</h3><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/be53c00b-2534-4dc6-ad03-c55995c47db9.jpg" alt=""></p><p>��������ʱ����ͨ�������㷨��������ѭ����ָ����٣��������������û��棬��Ϊ������˳��ط������ݡ���������ʱ������������Ϊ ~cNlgN������� c ���������Զ�������������㷨��ҪС��ʹ�������з�֮��ʵ��Ӧ���п��ܳ��ֵ�ĳЩ�ֲ��������ܹ��ﵽ���Լ��𣬶����������㷨��Ȼ��Ҫ���Զ���ʱ�䡣</p><h3 id="2-Java-�������㷨ʵ��"><a href="#2-Java-�������㷨ʵ��" class="headerlink" title="2. Java �������㷨ʵ��"></a>2. Java �������㷨ʵ��</h3><p>Java ϵͳ���е���Ҫ���򷽷�Ϊ java.util.Arrays.sort()������ԭʼ��������ʹ�������зֵĿ������򣬶�����������ʹ�ù鲢����</p><h3 id="3-�����зֵL���ѡ���㷨"><a href="#3-�����зֵL���ѡ���㷨" class="headerlink" title="3. �����зֵĿ���ѡ���㷨"></a>3. �����зֵĿ���ѡ���㷨</h3><p>��������� partition() �������Ὣ����� a[lo] �� a[hi] �������򲢷���һ������ j ʹ�� a[lo..j-1] С�ڵ��� a[j]���� a[j+1..hi] ���ڵ��� a[j]����ô��� j=k��a[j] ���ǵ� k ������</p><p>���㷨�����Լ���ģ���Ϊÿ�����ý�������֣���ô�Ƚϵ��ܴ���Ϊ (N+N/2+N/4+..)��ֱ���ҵ��� k ��Ԫ�أ��������ȻС�� 2N��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Comparable <span class="title">select</span><span class="params">(Comparable[] a, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> lo = <span class="number">0</span>, hi = a.length - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (hi &gt; lo) &#123;</span><br><span class="line">        <span class="keyword">int</span> j = partion(a, lo, hi);</span><br><span class="line">        <span class="keyword">if</span> (j == k) <span class="keyword">return</span> a[k];</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (j &gt; k) hi = j - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> lo = j + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> a[k];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="������-����"><a href="#������-����" class="headerlink" title="������ ����"></a>������ ����</h1><p>����ʹ�����־��������������ʵ�ָ�Ч�ķ��ű�������������������ɢ�б�</p><h2 id="���u�"><a href="#���u�" class="headerlink" title="���ű�"></a>���ű�</h2><h3 id="1-������u�"><a href="#1-������u�" class="headerlink" title="1. ������ű�"></a>1. ������ű�</h3><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/b69d7184-ab62-4957-ba29-fb4fa25f9b65.jpg" alt=""></p><h3 id="2-������u�"><a href="#2-������u�" class="headerlink" title="2. ������ű�"></a>2. ������ű�</h3><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/ba6ae411-82da-4d86-a434-6776d1731e8e.jpg" alt=""></p><p>������ű�ļ���Ҫʵ�� Comparable �ӿڡ�</p><p>���ҵĳɱ�ģ�ͣ����ıȽϴ������ڲ����бȽ�ʱʹ������ķ��ʴ�����</p><h3 id="3-���ֲ���ʵ��������u�"><a href="#3-���ֲ���ʵ��������u�" class="headerlink" title="3. ���ֲ���ʵ��������ű�"></a>3. ���ֲ���ʵ��������ű�</h3><p>ʹ��һ��ƽ�����飬һ���洢��һ���洢ֵ��</p><p>��Ҫ����һ�� Key ���͵� Comparable ���������һ�� Value ���͵� Object �������顣</p><p>rank() ����������Ҫ�������ڱ���ʱ�����ܹ�֪���ü���λ�ã��������ڱ���ʱ����Ҳ��֪���ںδ������¼���</p><p>���Ӷȣ����ֲ��������Ҫ lgN+1 �αȽϣ�ʹ�ö��ֲ���ʵ�ֵķ��ű�Ĳ��Ҳ�������Ҫ��ʱ������Ƕ�������ġ����ǲ��������Ҫ�ƶ�����Ԫ�أ������Լ���ġ�</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BinarySearchST</span>&lt;<span class="title">Key</span> <span class="keyword">extends</span> <span class="title">Comparable</span>&lt;<span class="title">Key</span>&gt;, <span class="title">Value</span>&gt; </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Key[] keys;</span><br><span class="line">    <span class="keyword">private</span> Value[] values;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> N;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">BinarySearchST</span><span class="params">(<span class="keyword">int</span> capacity)</span> </span>&#123;</span><br><span class="line">        keys = (Key[]) <span class="keyword">new</span> Comparable[capacity];</span><br><span class="line">        values = (Value[]) <span class="keyword">new</span> Object[capacity];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">size</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> N;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Value <span class="title">get</span><span class="params">(Key key)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i = rank(key);</span><br><span class="line">        <span class="keyword">if</span> (i &lt; N &amp;&amp; keys[i].compareTo(key) == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> values[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">rank</span><span class="params">(Key key)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> lo = <span class="number">0</span>, hi = N - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (lo &lt;= hi) &#123;</span><br><span class="line">            <span class="keyword">int</span> mid = lo + (hi - lo) / <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">int</span> cmp = key.compareTo(keys[mid]);</span><br><span class="line">            <span class="keyword">if</span> (cmp == <span class="number">0</span>) <span class="keyword">return</span> mid;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (cmp &lt; <span class="number">0</span>) hi = mid - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> lo = mid + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> lo;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">put</span><span class="params">(Key key, Value value)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i = rank(key);</span><br><span class="line">        <span class="keyword">if</span> (i &lt; N &amp;&amp; keys[i].compareTo(key) == <span class="number">0</span>) &#123;</span><br><span class="line">            values[i] = value;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = N; j &gt; i; j--) &#123;</span><br><span class="line">            keys[j] = keys[j - <span class="number">1</span>];</span><br><span class="line">            values[j] = values[j - <span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        keys[i] = key;</span><br><span class="line">        values[i] = value;</span><br><span class="line">        N++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Key <span class="title">ceiling</span><span class="params">(Key key)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i = rank(key);</span><br><span class="line">        <span class="keyword">return</span> keys[i];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="���������"><a href="#���������" class="headerlink" title="���������"></a>���������</h2><p><strong>������</strong> ����Ϊһ�������ӣ�������һ���������������ӵĽڵ㣬ÿ�����Ӷ�ָ��һ���Ӷ�������</p><p><strong>���������</strong>��BST����һ�Ŷ�����������ÿ���ڵ�ļ����������������е�����ڵ�ļ���С��������������ڵ�ļ���</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/25226bb2-92cc-40cb-9e7f-c44e79fbb64a.jpg" alt=""></p><p>����������Ĳ��Ҳ���ÿ�ε����������������һ�룬�Ͷ��ֲ������ơ�</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BST</span>&lt;<span class="title">Key</span> <span class="keyword">extends</span> <span class="title">Comparable</span>&lt;<span class="title">Key</span>&gt;, <span class="title">Value</span>&gt; </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Node root;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">Node</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> Key key;</span><br><span class="line">        <span class="keyword">private</span> Value val;</span><br><span class="line">        <span class="keyword">private</span> Node left, right;</span><br><span class="line">        <span class="comment">// �Ըýڵ�Ϊ���������нڵ�����</span></span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">int</span> N;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Node</span><span class="params">(Key key, Value val, <span class="keyword">int</span> N)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">this</span>.key = key;</span><br><span class="line">            <span class="keyword">this</span>.val = val;</span><br><span class="line">            <span class="keyword">this</span>.N = N;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">size</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> size(root);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">size</span><span class="params">(Node x)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (x == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> x.N;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="1-get"><a href="#1-get" class="headerlink" title="1. get()"></a>1. get()</h3><p>������ǿյģ������δ���У���������ҵļ��͸��ڵ�ļ���ȣ��������У�����ݹ���������в��ң���������ҵļ���С�����������в��ң��ϴ�����������в��ҡ�</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Value <span class="title">get</span><span class="params">(Key key)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> get(root, key);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">private</span> Value <span class="title">get</span><span class="params">(Node x, Key key)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">int</span> cmp = key.compareTo(x.key);</span><br><span class="line">    <span class="keyword">if</span> (cmp == <span class="number">0</span>) <span class="keyword">return</span> x.val;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (cmp &lt; <span class="number">0</span>) <span class="keyword">return</span> get(x.left, key);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> get(x.right, key);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-put"><a href="#2-put" class="headerlink" title="2. put()"></a>2. put()</h3><p>������ļ������������У���Ҫ����һ���½ڵ㣬���Ҹ����ϲ�ڵ������ʹ�øýڵ���ȷ���ӵ����С�</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">put</span><span class="params">(Key key, Value val)</span> </span>&#123;</span><br><span class="line">    root = put(root, key, val);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">private</span> Node <span class="title">put</span><span class="params">(Node x, Key key, Value val)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">new</span> Node(key, val, <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">int</span> cmp = key.compareTo(x.key);</span><br><span class="line">    <span class="keyword">if</span> (cmp == <span class="number">0</span>) x.val = val;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (cmp &lt; <span class="number">0</span>) x.left = put(x.left, key, val);</span><br><span class="line">    <span class="keyword">else</span> x.right = put(x.right, key, val);</span><br><span class="line">    x.N = size(x.left) + size(x.right) + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-����"><a href="#3-����" class="headerlink" title="3. ����"></a>3. ����</h3><p>������������㷨����ʱ��ȡ����������״����������״��ȡ���ڼ���������Ⱥ�˳����õ������������ȫƽ��ģ�ÿ�������Ӻ͸��ڵ�ľ��붼Ϊ lgN�����������£����ĸ߶�Ϊ N��</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/73a3983d-dd18-4373-897e-64b706a7e370.jpg" alt=""></p><p>���Ӷȣ����ҺͲ��������Ϊ��������</p><h3 id="4-floor"><a href="#4-floor" class="headerlink" title="4. floor()"></a>4. floor()</h3><p>��� key С�ڸ��ڵ�� key����ôС�ڵ��� key �������ڵ�һ�����������У���� key ���ڸ��ڵ�� key��ֻ�е����ڵ��������д���С�ڵ��� key �Ľڵ㣬С�ڵ��� key �������ڵ�����������У�������ڵ����С�ڵ��� key �������ڵ㡣</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Key <span class="title">floor</span><span class="params">(Key key)</span> </span>&#123;</span><br><span class="line">    Node x = floor(root, key);</span><br><span class="line">    <span class="keyword">if</span> (x == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">return</span> x.key;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">private</span> Node <span class="title">floor</span><span class="params">(Node x, Key key)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">int</span> cmp = key.compareTo(x.key);</span><br><span class="line">    <span class="keyword">if</span> (cmp == <span class="number">0</span>) <span class="keyword">return</span> x;</span><br><span class="line">    <span class="keyword">if</span> (cmp &lt; <span class="number">0</span>) <span class="keyword">return</span> floor(x.left, key);</span><br><span class="line">    Node t = floor(x.right, key);</span><br><span class="line">    <span class="keyword">if</span> (t != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> t;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-rank"><a href="#5-rank" class="headerlink" title="5. rank()"></a>5. rank()</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">rank</span><span class="params">(Key key)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> rank(key, root);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">rank</span><span class="params">(Key key, Node x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> cmp = key.compareTo(x.key);</span><br><span class="line">    <span class="keyword">if</span> (cmp == <span class="number">0</span>) <span class="keyword">return</span> size(x.left);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (cmp &lt; <span class="number">0</span>) <span class="keyword">return</span> rank(key, x.left);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="number">1</span> + size(x.left) + rank(key, x.right);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-min"><a href="#6-min" class="headerlink" title="6. min()"></a>6. min()</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> Node <span class="title">min</span><span class="params">(Node x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x.left == <span class="keyword">null</span>) <span class="keyword">return</span> x;</span><br><span class="line">    <span class="keyword">return</span> min(x.left);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-deleteMin"><a href="#7-deleteMin" class="headerlink" title="7. deleteMin()"></a>7. deleteMin()</h3><p>��ָ����С�ڵ������ָ����С�ڵ����������</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/6e2cb20a-8d2a-46fe-9ac7-68a2126b7bd5.jpg" alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">deleteMin</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    root = deleteMin(root);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">public</span> Node <span class="title">deleteMin</span><span class="params">(Node x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x.left == <span class="keyword">null</span>) <span class="keyword">return</span> x.right;</span><br><span class="line">    x.left = deleteMin(x.left);</span><br><span class="line">    x.N = size(x.left) + size(x.right) + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="8-delete"><a href="#8-delete" class="headerlink" title="8. delete()"></a>8. delete()</h3><p>�����ɾ���Ľڵ�ֻ��һ����������ôֻ��Ҫ��ָ���ɾ���ڵ������ָ��Ψһ���������ɣ�����������������С�ڵ��滻�ýڵ㡣</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/b488282d-bfe0-464f-9e91-1f5b83a975bd.jpg" alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">(Key key)</span> </span>&#123;</span><br><span class="line">    root = delete(root, key);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">private</span> Node <span class="title">delete</span><span class="params">(Node x, Key key)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">int</span> cmp = key.compareTo(x.key);</span><br><span class="line">    <span class="keyword">if</span> (cmp &lt; <span class="number">0</span>) x.left = delete(x.left, key);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (cmp &gt; <span class="number">0</span>) x.right = delete(x.right, key);</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (x.right == <span class="keyword">null</span>) <span class="keyword">return</span> x.left;</span><br><span class="line">        <span class="keyword">if</span> (x.left == <span class="keyword">null</span>) <span class="keyword">return</span> x.right;</span><br><span class="line">        Node t = x;</span><br><span class="line">        x = min(t.right);</span><br><span class="line">        x.right = deleteMin(t.right);</span><br><span class="line">        x.left = t.left;</span><br><span class="line">    &#125;</span><br><span class="line">    x.N = size(x.left) + size(x.right) + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="9-keys"><a href="#9-keys" class="headerlink" title="9. keys()"></a>9. keys()</h3><p>���ö����������������Ľ��Ϊ�������е��ص㡣</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Iterable&lt;Key&gt; <span class="title">keys</span><span class="params">(Key lo, Key hi)</span> </span>&#123;</span><br><span class="line">    Queue&lt;Key&gt; queue = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">    keys(root, queue, lo, hi);</span><br><span class="line">    <span class="keyword">return</span> queue;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">keys</span><span class="params">(Node x, Queue&lt;Key&gt; queue, Key lo, Key hi)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x == <span class="keyword">null</span>) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">int</span> cmpLo = lo.compareTo(x.key);</span><br><span class="line">    <span class="keyword">int</span> cmpHi = hi.compareTo(x.key);</span><br><span class="line">    <span class="keyword">if</span> (cmpLo &lt; <span class="number">0</span>) keys(x.left, queue, lo, hi);</span><br><span class="line">    <span class="keyword">if</span> (cmpLo &lt;= <span class="number">0</span> &amp;&amp; cmpHi &gt;= <span class="number">0</span>) queue.add(x.key);</span><br><span class="line">    <span class="keyword">if</span> (cmpHi &gt; <span class="number">0</span>) keys(x.right, queue, lo, hi);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="10-���ܷ���"><a href="#10-���ܷ���" class="headerlink" title="10. ���ܷ���"></a>10. ���ܷ���</h3><p>���Ӷȣ�������������в�����������������Ҫ��ʱ�䶼�����ĸ߶ȳ����ȡ�</p><h2 id="ƽ�������"><a href="#ƽ�������" class="headerlink" title="ƽ�������"></a>ƽ�������</h2><h3 id="2-3-������"><a href="#2-3-������" class="headerlink" title="2-3 ������"></a>2-3 ������</h3><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/2548f2ec-7b00-4ec7-b286-20fc3022e084.jpg" alt=""></p><p>һ������ƽ��� 2-3 �����������п����ӵ����ڵ�ľ���Ӧ������ͬ�ġ�</p><h4 id="1-�������"><a href="#1-�������" class="headerlink" title="1. �������"></a>1. �������</h4><p>������֮�����һ����ʱ 4- �ڵ�ʱ����Ҫ�� 4- �ڵ���ѳ� 3 �� 2- �ڵ㣬�����м�� 2- �ڵ��Ƶ��ϲ�ڵ��С�������Ʋ�������������ʱ 4- �ڵ���һֱ���з������ƣ�ֱ����������ʱ 4- �ڵ㡣</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/912174d8-0786-4222-b7ef-a611d36e5db9.jpg" alt=""></p><h4 id="2-����"><a href="#2-����" class="headerlink" title="2. ����"></a>2. ����</h4><p>2-3 ��������������ı任���Ǿֲ��ģ�������صĽڵ������֮�ⲻ���޸Ļ��߼�������������֣�����Щ�ֲ��任����Ӱ������ȫ�������Ժ�ƽ���ԡ�</p><p>2-3 �������Ĳ��ҺͲ���������ӶȺͲ���˳�� <strong>�޹�</strong>�����������²��ҺͲ���������ʵĽڵ��Ȼ������ logN �������� 10 �ڸ��ڵ�� 2-3 ���������ֻ��Ҫ���� 30 ���ڵ���ܽ�������Ĳ��ҺͲ��������</p><h3 id="��ڶ��������"><a href="#��ڶ��������" class="headerlink" title="��ڶ��������"></a>��ڶ��������</h3><p>2-3 ��������Ҫ�õ� 2- �ڵ�� 3- �ڵ㣬�����ʹ�ú�������ʵ�� 3- �ڵ㡣ָ��һ���ڵ��������ɫ���Ϊ��ɫ����ô����ڵ���ϲ�ڵ��ʾ����һ�� 3- �ڵ㣬����ɫ������ͨ���ӡ�</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/7080a928-06ba-4e10-9792-b8dd190dc8e2.jpg" alt=""></p><p>����������������ʣ�</p><ol><li>�����Ӷ�Ϊ�����ӣ�</li><li>������ɫƽ�⣬����������ӵ����ڵ��·���ϵĺ�����������ͬ��</li></ol><p>�������ʱ���Խ������ӻ�ƽ��</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/62077f5d-a06d-4129-9b43-78715b82cb03.png" alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedBlackBST</span>&lt;<span class="title">Key</span> <span class="keyword">extends</span> <span class="title">Comparable</span>&lt;<span class="title">Key</span>&gt;, <span class="title">Value</span>&gt; </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Node root;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">boolean</span> RED = <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">boolean</span> BLACK = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">Node</span> </span>&#123;</span><br><span class="line">        Key key;</span><br><span class="line">        Value val;</span><br><span class="line">        Node left, right;</span><br><span class="line">        <span class="keyword">int</span> N;</span><br><span class="line">        <span class="keyword">boolean</span> color;</span><br><span class="line"></span><br><span class="line">        Node(Key key, Value val, <span class="keyword">int</span> n, <span class="keyword">boolean</span> color) &#123;</span><br><span class="line">            <span class="keyword">this</span>.key = key;</span><br><span class="line">            <span class="keyword">this</span>.val = val;</span><br><span class="line">            N = n;</span><br><span class="line">            <span class="keyword">this</span>.color = color;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">isRed</span><span class="params">(Node x)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (x == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">return</span> x.color == RED;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="1-����ת"><a href="#1-����ת" class="headerlink" title="1. ����ת"></a>1. ����ת</h4><p>��Ϊ�Ϸ��ĺ����Ӷ�Ϊ�����ӣ��������������Ϊ�����ӣ���ô����Ҫ��������ת������</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/33a4e822-2dd0-481e-ac89-7f6161034402.jpg" alt=""></p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/5e0cef33-4087-4f21-a428-16d5fddda671.jpg" alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Node <span class="title">rotateLeft</span><span class="params">(Node h)</span> </span>&#123;</span><br><span class="line">    Node x = h.right;</span><br><span class="line">    h.right = x.left;</span><br><span class="line">    x.left = h;</span><br><span class="line">    x.color = h.color;</span><br><span class="line">    h.color = RED;</span><br><span class="line">    x.N = h.N;</span><br><span class="line">    h.N = <span class="number">1</span> + size(h.left) + size(h.right);</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-����ת"><a href="#2-����ת" class="headerlink" title="2. ����ת"></a>2. ����ת</h4><p>��������ת��Ϊ��ת������������������ӣ������֮��Ĳ��������̽�֡�</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/dfd078b2-aa4f-4c50-8319-232922d822b8.jpg" alt=""></p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/3f8d8c9d-a9a9-4d7a-813c-2de05ee5a97e.jpg" alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Node <span class="title">rotateRight</span><span class="params">(Node h)</span> </span>&#123;</span><br><span class="line">    Node x = h.left;</span><br><span class="line">    h.left = x.right;</span><br><span class="line">    x.color = h.color;</span><br><span class="line">    h.color = RED;</span><br><span class="line">    x.N = h.N;</span><br><span class="line">    h.N = <span class="number">1</span> + size(h.left) + size(h.right);</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-��lת��"><a href="#3-��lת��" class="headerlink" title="3. ��ɫת��"></a>3. ��ɫת��</h4><p>һ�� 4- �ڵ��ں�����б���Ϊһ���ڵ�������ӽڵ㶼�Ǻ�ɫ�ġ����� 4- �ڵ������Ҫ���ӽڵ����ɫ�ɺ���֮�⣬ͬʱ��Ҫ�����ڵ����ɫ�ɺڱ�죬�� 2-3 ���ĽǶȿ����ǽ��м�ڵ��Ƶ��ϲ�ڵ㡣</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/de7c5a31-55f5-4e9d-92ec-4ed5b2ec3828.jpg" alt=""></p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/e5ad625e-729d-4a8d-923a-7c3df5773e1c.jpg" alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">flipColors</span><span class="params">(Node h)</span></span>&#123;</span><br><span class="line">    h.color = RED;</span><br><span class="line">    h.left.color = BLACK;</span><br><span class="line">    h.right.color = BLACK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-����"><a href="#4-����" class="headerlink" title="4. ����"></a>4. ����</h4><p>�Ƚ�һ���ڵ㰴����������ķ������뵽��ȷλ�ã�Ȼ���ٽ���������ɫ������</p><ul><li>������ӽڵ��Ǻ�ɫ�Ķ����ӽڵ��Ǻ�ɫ�ģ���������ת��</li><li>������ӽڵ��Ǻ�ɫ�����������ӽڵ�Ҳ�Ǻ�ɫ�ģ���������ת��</li><li>��������ӽڵ��Ϊ��ɫ�ģ�������ɫת����</li></ul><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/40639782-5df2-4e96-a4f3-f9dd664d0ca1.jpg" alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">put</span><span class="params">(Key key, Value val)</span> </span>&#123;</span><br><span class="line">    root = put(root, key, val);</span><br><span class="line">    root.color = BLACK;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> Node <span class="title">put</span><span class="params">(Node x, Key key, Value val)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">new</span> Node(key, val, <span class="number">1</span>, RED);</span><br><span class="line">    <span class="keyword">int</span> cmp = key.compareTo(x.key);</span><br><span class="line">    <span class="keyword">if</span> (cmp == <span class="number">0</span>) x.val = val;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (cmp &lt; <span class="number">0</span>) x.left = put(x.left, key, val);</span><br><span class="line">    <span class="keyword">else</span> x.right = put(x.right, key, val);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (isRed(x.right) &amp;&amp; !isRed(x.left)) x = rotateLeft(x);</span><br><span class="line">    <span class="keyword">if</span> (isRed(x.left) &amp;&amp; isRed(x.left.left)) x = rotateRight(x);</span><br><span class="line">    <span class="keyword">if</span> (isRed(x.left) &amp;&amp; isRed(x.right)) flipColors(x);</span><br><span class="line"></span><br><span class="line">    x.N = size(x.left) + size(x.right) + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>���Կ����ò�������� BST �Ĳ���������ƣ�ֻ��������������ת����ɫ�任�������ɡ�</p><p>���ڵ�һ��Ϊ��ɫ����Ϊ���ڵ�û���ϲ�ڵ㣬Ҳ��û���ϲ�ڵ��������ָ����ڵ㡣flipColors() �п��ܻ�ʹ�ø��ڵ����ɫ��Ϊ��ɫ��ÿ�����ڵ��ɺ�ɫ��ɺ�ɫʱ���ĺ����Ӹ߶ȼ� 1.</p><h4 id="5-ɾ����С��"><a href="#5-ɾ����С��" class="headerlink" title="5. ɾ����С��"></a>5. ɾ����С��</h4><p>�����С����һ�� 2- �ڵ��У���ôɾ���ü�������һ�������ӣ����ƻ���ƽ���ԣ����Ҫȷ����С������ 2- �ڵ��С��� 2- �ڵ�ת���� 3- �ڵ���� 4- �ڵ������ַ�����һ�������ϲ�ڵ���һ�� key��һ�������ֵܽڵ���һ�� key������ϲ�ڵ��� 2- �ڵ㣬��ô��û�취���ϲ�ڵ��� key �ˣ����Ҫ��֤ɾ��·���ϵ����нڵ㶼���� 2- �ڵ㡣������ɾ���Ĺ����У���֤�������֮һ������</p><ol><li>�����ǰ�ڵ�����ӽڵ㲻�� 2- �ڵ㣬��ɣ�</li><li>�����ǰ�ڵ�����ӽڵ��� 2- �ڵ�������ֵܽڵ㲻�� 2- �ڵ㣬���ֵܽڵ���һ�� key ������</li><li>�����ǰ�ڵ�����ӽڵ�������ֵܽڵ㶼�� 2- �ڵ㣬�����ӽڵ㡢���ڵ��е���С����������ֵܽڵ�ϲ�Ϊһ�� 4- �ڵ㡣</li></ol><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/b001fa64-307c-49af-b4b2-2043fc26154e.png" alt=""></p><p>���õ�һ��������С���� 3- �ڵ���� 4- �ڵ㣬ֱ�Ӵ���ɾ����Ȼ���ٴ�ͷ�ֽ�������ʱ�� 4- �ڵ㡣</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/70b66757-755c-4e17-a7b7-5ce808023643.png" alt=""></p><h4 id="6-����-1"><a href="#6-����-1" class="headerlink" title="6. ����"></a>6. ����</h4><p>һ�Ŵ�СΪ N �ĺ�����ĸ߶Ȳ��ᳬ�� 2lgN������������������Ӧ�� 2-3 ���й�������ߵ�·���ڵ�ȫ������ 3- �ڵ�����඼�� 2- �ڵ㡣</p><p>�����������Ĳ�������Ҫ��ʱ�䶼�Ƕ�������ġ�</p><h2 id="ɢ�б�"><a href="#ɢ�б�" class="headerlink" title="ɢ�б�"></a>ɢ�б�</h2><p>ɢ�б����������飬���԰�ɢ�б��ɢ��ֵ�������������ֵ������ɢ�б�ͷ�������Ԫ��һ�����٣��������ڳ���ʱ����ʵ�ֲ��ҺͲ���ķ��ű�</p><p>�����޷�ͨ��ɢ��ֵ֪�����Ĵ�С��ϵ�����ɢ�б��޷�ʵ�������Բ�����</p><h3 id="1-ɢ�к���"><a href="#1-ɢ�к���" class="headerlink" title="1. ɢ�к���"></a>1. ɢ�к���</h3><p>����һ����СΪ M ��ɢ�б�ɢ�к����ܹ��������ת��Ϊ [0, M-1] �ڵ�������������������Ϊ hash ֵ��</p><p>ɢ�б��г�ͻ�Ĵ��ڣ�Ҳ����������ͬ�ļ���������ͬ�� hash ֵ��</p><p>ɢ�к���Ӧ��������������������</p><ol><li>һ���ԣ���ȵļ�Ӧ������ȵ� hash ֵ��</li><li>��Ч�ԣ�����Ӧ����㣬�б�Ҫ�Ļ����԰� hash ֵ�����������ڵ��� hash ����ʱֱ�ӷ��ء�</li><li>�����ԣ����м��� hash ֵӦ�����ȵطֲ��� [0, M-1] ֮�䣬�������������Ҫ��ֱ��Ӱ�쵽ɢ�б�����ܡ�</li></ol><p>�������������Խ�����ɢ�е� [0, M-1] ֮�䣬����һ�������� k������ k%M �ȿɵõ�һ�� [0, M-1] ֮��� hash ֵ��ע�� M ������һ�������������޷����ü�������������Ϣ������ M Ϊ 10<sup>k</sup>����ôֻ�����ü��ĺ� k λ��</p><p>���������������Խ���ת������������ʽ��Ȼ�����ó�����������������ڸ����������Խ����ʾ�ɶ�������ʽ��Ȼ��ʹ�ö�������ʽ������ֵ���г�����������</p><p>�����жಿ����ϵļ���ÿ���ֶ���Ҫ���� hash ֵ���������ϲ�ʱ��Ҫ��ÿ���� hash ֵ������ͬ����Ҫ�ĵ�λ�����Խ��ü����� R ���Ƶ�����������ÿ���ֶ����в�ͬ��Ȩֵ��</p><p>���磬�ַ�����ɢ�к���ʵ������</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> hash = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s.length(); i++)</span><br><span class="line">    hash = (R * hash + s.charAt(i)) % M;</span><br></pre></td></tr></table></figure><p>�ٱ��磬ӵ�ж����Ա���Զ�����Ĺ�ϣ��������</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> hash = (((day * R + month) % M) * R + year) % M;</span><br></pre></td></tr></table></figure><p>R ��ֵ���Ǻ���Ҫ��ͨ��ȡ 31��</p><p>Java �е� hashCode() ʵ���� hash ����������Ĭ��ʹ�ö�����ڴ��ֵַ����ʹ�� hashCode() ����ʱ��Ӧ����ϳ�����������ʹ�á���Ϊ�ڴ��ַ�� 32 λ����������ֻ��Ҫ 31 λ�ķǸ����������Ӧ�����η���λ֮����ʹ�ó�����������</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> hash = (x.hashCode() &amp; <span class="number">0x7fffffff</span>) % M;</span><br></pre></td></tr></table></figure><p>ʹ�� Java �Դ��� HashMap ���Դ��Ĺ�ϣ��ʵ��ʱ��ֻ��Ҫȥʵ�� Key ���͵� hashCode() �������ɡ�Java �涨 hashCode() �ܹ��������ȷֲ������е� 32 λ������Java �е� String��Integer �ȶ���� hashCode() ����ʵ����һ�㡣����չʾ���Զ����������ʵ�� hashCode()��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Transaction</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> String who;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> Date when;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> <span class="keyword">double</span> amount;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">hashCode</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> hash = <span class="number">17</span>;</span><br><span class="line">        hash = <span class="number">31</span> * hash + who.hashCode();</span><br><span class="line">        hash = <span class="number">31</span> * hash + when.hashCode();</span><br><span class="line">        hash = <span class="number">31</span> * hash + ((Double) amount).hashCode();</span><br><span class="line">        <span class="keyword">return</span> hash;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-������������ɢ�б�"><a href="#2-������������ɢ�б�" class="headerlink" title="2. ������������ɢ�б�"></a>2. ������������ɢ�б�</h3><p>������ʹ���������洢 hash ֵ��ͬ�ļ����Ӷ������ͻ����ʱ������Ҫ�����������Ȳ��� Key ���ڵ�����Ȼ����������˳����ҡ�</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/540133af-aaaf-4208-8f7f-33cb89ac9621.png" alt=""></p><p>���� N ������M ������ (N&gt;M)�������ϣ�����ܹ���������Ե�������ÿ������Ĵ�С������ N/M�����δ���еĲ��ҺͲ����������Ҫ�ıȽϴ���Ϊ ~N/M��</p><h3 id="3-��������̽�ⷨ��ɢ�б�"><a href="#3-��������̽�ⷨ��ɢ�б�" class="headerlink" title="3. ��������̽�ⷨ��ɢ�б�"></a>3. ��������̽�ⷨ��ɢ�б�</h3><p>����̽�ⷨʹ�ÿ�λ�������ͻ������ͻ����ʱ����ǰ̽��һ����λ���洢��ͻ�ļ���ʹ���߳�̽�ⷨ������Ĵ�С M Ӧ�����ڼ��ĸ��� N��M&gt;N)��</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/2b3410f1-9559-4dd1-bc3d-e3e572247be2.png" alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LinearProbingHashST</span>&lt;<span class="title">Key</span>, <span class="title">Value</span>&gt; </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> N;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> M = <span class="number">16</span>;</span><br><span class="line">    <span class="keyword">private</span> Key[] keys;</span><br><span class="line">    <span class="keyword">private</span> Value[] vals;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">LinearProbingHashST</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        init();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">LinearProbingHashST</span><span class="params">(<span class="keyword">int</span> M)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.M = M;</span><br><span class="line">        init();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        keys = (Key[]) <span class="keyword">new</span> Object[M];</span><br><span class="line">        vals = (Value[]) <span class="keyword">new</span> Object[M];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">hash</span><span class="params">(Key key)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (key.hashCode() &amp; <span class="number">0x7fffffff</span>) % M;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-1-����"><a href="#3-1-����" class="headerlink" title="3.1 ����"></a>3.1 ����</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> Value <span class="title">get</span><span class="params">(Key key)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = hash(key); keys[i] != <span class="keyword">null</span>; i = (i + <span class="number">1</span>) % M) &#123;</span><br><span class="line">        <span class="keyword">if</span> (keys[i].equals(key)) &#123;</span><br><span class="line">            <span class="keyword">return</span> vals[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-2-����"><a href="#3-2-����" class="headerlink" title="3.2 ����"></a>3.2 ����</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">put</span><span class="params">(Key key, Value val)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i = hash(key); keys[i] != <span class="keyword">null</span>; i = (i + <span class="number">1</span>) % M) &#123;</span><br><span class="line">        <span class="keyword">if</span> (keys[i].equals(key)) &#123;</span><br><span class="line">            vals[i] = val;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    keys[i] = key;</span><br><span class="line">    vals[i] = val;</span><br><span class="line">    N++;</span><br><span class="line">    resize();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-3-ɾ��"><a href="#3-3-ɾ��" class="headerlink" title="3.3 ɾ��"></a>3.3 ɾ��</h4><p>ɾ������Ӧ�����Ҳ��������ڵļ�ֵ���²���ɢ�б��С�</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">(Key key)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!contains(key)) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">int</span> i = hash(key);</span><br><span class="line">    <span class="keyword">while</span> (!key.equals(keys[i])) &#123;</span><br><span class="line">        i = (i + <span class="number">1</span>) % M;</span><br><span class="line">    &#125;</span><br><span class="line">    keys[i] = <span class="keyword">null</span>;</span><br><span class="line">    vals[i] = <span class="keyword">null</span>;</span><br><span class="line">    i = (i + <span class="number">1</span>) % M;</span><br><span class="line">    <span class="keyword">while</span> (keys[i] != <span class="keyword">null</span>) &#123;</span><br><span class="line">        Key keyToRedo = keys[i];</span><br><span class="line">        Value valToRedo = vals[i];</span><br><span class="line">        keys[i] = <span class="keyword">null</span>;</span><br><span class="line">        vals[i] = <span class="keyword">null</span>;</span><br><span class="line">        N--;</span><br><span class="line">        put(keyToRedo, valToRedo);</span><br><span class="line">        i = (i + <span class="number">1</span>) % M;</span><br><span class="line">    &#125;</span><br><span class="line">    N--;</span><br><span class="line">    resize();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-4-���������С"><a href="#3-4-���������С" class="headerlink" title="3.4 ���������С"></a>3.4 ���������С</h4><p>����̽�ⷨ�ĳɱ�ȡ����������Ŀ�ĳ��ȣ�������ĿҲ�о۴ء����۴غܳ�ʱ���ڲ��ҺͲ���ʱҲ��Ҫ���кܶ��̽�⡣</p><p>�� = N/M���� �� ��Ϊ�����ʡ�����֤������ �� С�� 1/2 ʱ̽���Ԥ�ƴ���ֻ�� 1.5 �� 2.5 ֮�䡣</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/0ddebc5c-7c24-46b1-98db-4fa5e54db16b.png" alt=""></p><p>Ϊ�˱�֤ɢ�б�����ܣ�Ӧ����������Ĵ�С��ʹ�� �� �� [1/4, 1/2] ֮�䡣</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">resize</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (N &gt;= M / <span class="number">2</span>) resize(<span class="number">2</span> * M);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (N &lt;= M / <span class="number">8</span>) resize(M / <span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">resize</span><span class="params">(<span class="keyword">int</span> cap)</span> </span>&#123;</span><br><span class="line">    LinearProbingHashST&lt;Key, Value&gt; t = <span class="keyword">new</span> LinearProbingHashST&lt;&gt;(cap);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; M; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (keys[i] != <span class="keyword">null</span>) &#123;</span><br><span class="line">            t.put(keys[i], vals[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    keys = t.keys;</span><br><span class="line">    vals = t.vals;</span><br><span class="line">    M = t.M;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>��Ȼÿ�����µ������鶼��Ҫ���°�ÿ����ֵ�Բ��뵽ɢ�б����Ǵ�̯�������ĽǶ�����������Ҫ�Ĵ���ȴ�Ǻ�С�ġ�����ͼ���Կ�����ÿ�����鳤�ȼӱ����ۼ�ƽ��ֵ�������� 1����Ϊ����ÿ��������Ҫ���¼���ɢ��ֵ���������ƽ��ֵ���½���</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/01658047-0d86-4a7a-a8ca-7ea20fa1fdde.png" alt=""></p><h2 id="Ӧ��-1"><a href="#Ӧ��-1" class="headerlink" title="Ӧ��"></a>Ӧ��</h2><h3 id="1-���ַ��u�ʵ�ֵiL�"><a href="#1-���ַ��u�ʵ�ֵiL�" class="headerlink" title="1. ���ַ��ű�ʵ�ֵıȽ�"></a>1. ���ַ��ű�ʵ�ֵıȽ�</h3><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/9ee83c8c-1165-476c-85a6-e6e434e5307a.jpg" alt=""></p><p>Ӧ�����ȿ���ɢ�б�����Ҫ�����Բ���ʱʹ�ú������</p><h3 id="2-Java-�k��u�ʵ��"><a href="#2-Java-�k��u�ʵ��" class="headerlink" title="2. Java �ķ��ű�ʵ��"></a>2. Java �ķ��ű�ʵ��</h3><p>Java �� java.util.TreeMap �� java.util.HashMap �ֱ��ǻ��ں��������������ɢ�б�ķ��ű�ʵ�֡�</p><h3 id="3-��������-1"><a href="#3-��������-1" class="headerlink" title="3. ��������"></a>3. ��������</h3><p>���˷��ű���������Ҳ����ʹ�ã���ֻ�м�û��ֵ�������ü����������洢һϵ�еļ�Ȼ���ж�һ�����Ƿ��ڼ����С�</p><h3 id="4-ϡ�������˷�"><a href="#4-ϡ�������˷�" class="headerlink" title="4. ϡ�������˷�"></a>4. ϡ�������˷�</h3><p>������Ϊϡ������ʱ������ʹ�÷��ű����洢�����еķ� 0 ������ֵ��ʹ�ó˷�����ֻ��Ҫ����Щ�� 0 Ԫ�ؽ��м��ɡ�</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SparseVector</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> HashMap&lt;Integer, Double&gt; hashMap;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">SparseVector</span><span class="params">(<span class="keyword">double</span>[] vector)</span> </span>&#123;</span><br><span class="line">        hashMap = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; vector.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (vector[i] != <span class="number">0</span>) &#123;</span><br><span class="line">                hashMap.put(i, vector[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">get</span><span class="params">(<span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> hashMap.getOrDefault(i, <span class="number">0.0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">dot</span><span class="params">(SparseVector other)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">double</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i : hashMap.keySet()) &#123;</span><br><span class="line">            sum += <span class="keyword">this</span>.get(i) * other.get(i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- GFM-TOC --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#��һ��-����&quot;&gt;��һ�� ����&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#ջ&quot;&gt;ջ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#����&quot;&gt;����&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2018/03/29/programming-basics-master/notes/%E7%A8%8B%E5%BA%8F%E5%91%98%E7%9A%84%E8%81%8C%E4%B8%9A%E7%B4%A0%E5%85%BB/"/>
    <id>http://yoursite.com/2018/03/29/programming-basics-master/notes/程序员的职业素养/</id>
    <published>2018-03-29T14:37:48.206Z</published>
    <updated>2018-02-26T04:13:28.000Z</updated>
    
    <content type="html"><![CDATA[<!-- GFM-TOC --><ul><li><a href="#������">������</a></li><li><a href="#ǰ��">ǰ��</a></li><li><a href="#רҵ����">רҵ����</a></li><li><a href="#˵��">˵��</a></li><li><a href="#˵��">˵��</a></li><li><a href="#���">���</a></li><li><a href="#������������">������������</a></li><li><a href="#��ϰ">��ϰ</a><!-- GFM-TOC --></li></ul><h1 id="������"><a href="#������" class="headerlink" title="������"></a>������</h1><p>���� Bob ���壬���С�������������ԭ��ģʽ��ʵ��������������֮����������Ա��ְҵ������</p><p>���ڽ�����⣬��Ҫ�Ĳ������Ȿ�����ǽ������ķ�ʽ�������Լ���˼����ȣ������ְҵ������</p><h1 id="j��"><a href="#j��" class="headerlink" title="ǰ��"></a>ǰ��</h1><p>���ڹ��������ٺܴ�Ĳ��������ѹ�����������Ӽ�����Ա������Σ�վ��棬���Ž����������ˡ���ս�ߡ�����ɻ������յ��º���ɻ��ڸ߿ձ�ը����˵������Ա�Ѿ����ܶ�����ȥ��ֹ��η��䣬���ǲ�����˵�����������������ģ��������Ǿ�û�д�绰ȥ����̨��¶�˴η����Σ���ԡ�</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/bccb799f-56e2-4356-95f0-a9ea05b0de2a.jpg" alt=""></p><h1 id="רҵ����"><a href="#רҵ����" class="headerlink" title="רҵ����"></a>רҵ����</h1><p>רҵ���岻����ζ�������ͽ�����Ҳ��ζ�����Ρ�</p><p>�������Լ�������һ���绰��·���ϼ��ϵͳʱ����Ϊ�����ڵ����ս����¹��ܣ�û�ж�����ϵͳ���в��ԣ�������һ�� bug �ĳ��֡�������Ϊ����һ�ֲ������εı��֣�Ҳ���ǲ�רҵ�ı��֡�</p><p>������������ bug�����ǲ���ζ���㲻��Ϊ bug ����</p><p>���˰� QA ���ɲ� bug �Ļ��������� QA ���� bug�����Լ�ȴ������ȥ���� bug�����ǲ��Եġ�</p><p>Ϊ�˱�֤�������ȷ�ԣ���ҪдһЩ��ʱ�������еĵ�Ԫ���ԣ����Ҳ��ϵ�ȥ�������ǡ�</p><p>�����Ŀ�ĸ���ԭ�� - �����޸ġ�Ϊ�����Լ�����������޸ģ���Ҫ����ȥ�޸�����</p><p>��Ԫ���Կ����ó���Ա��������ȥ�޸Ĵ��룬��Ϊ��������ȷ���޸ĵ��Ƿ���ȷ��</p><p>רҵ���������������ݣ�</p><ol><li>���ѧϰ</li><li>ÿ����ϰһЩ�򵥵ı����Ŀ</li><li>�����Ǻ������ӱ˴�����ѧ�����ණ��</li><li>������ͨ����������Լ���˼�룬�����Լ��Ĳ����Լ������˼���ϵĲ��졣</li><li>�˽�ҵ�������Ҽ������������鿴��</li><li>����� / �ͻ�����һ��</li><li>ǫѷ����Ϊ����֪���Լ�Ҳ���ܷ���</li></ol><h1 id="˵��"><a href="#˵��" class="headerlink" title="˵��"></a>˵��</h1><p>��һЩ�������Ҫ�󣬲���ֻ��˵�����Կ�������ᱻ�����ǽ��������Ҫ������Լ���֪���ֲ������Ҫ��ᵼ�����صĺ�����Ͳ�����������չ��ȥ������һҪ��˵��������</p><p>˵������ʱҪ������ϸ��ϸ����˵���������Ƿ���ط�����</p><p>��Ҫ�����Բ�����ʱ������Э��һЩ˫�����ܽ��ܵķ�����</p><p>“�п���д���ô�����” ��ƪ���ģ�������һ�ο���һ��������Ϊ����”��ɫ������”�ܹ��ù˿Ϳ�����Ʒ��Ϣ�̵���Ϣ�Լ������Ż���ȹ��ܵ� ipone Ӧ�ã��ʼ�����̵ľ����ŵ˵ֻҪд��Ӳ�����Ӧ�þ����ˣ����ǿͻ���Ҫ���κ�һ��ܣ��ܱ����ʼʱ��˵��Ҫ������ࡣ���ʱ��Ľ���ͻ����Ĳ���ϣ��Լ�����ı�����ò�������д��һ�Ѻ��õĴ��룬�����Լ�ȷʵ����Щ���ģʽ�ȸ߼����������Ƿǳ����Եġ���������Ϊ��ʵ�ʵĿ�������Ϊ�ͻ�����������أ�����д���Լ���д�Ĵ��롣Bob ��Ϊ��������ƪ���ĵ����߲��Ǵ˴ο���������������Щ����ĸ����ˣ���Ϊ��û�ж���Щ�������Ҫ��˵����</p><h1 id="˵��-1"><a href="#˵��-1" class="headerlink" title="˵��"></a>˵��</h1><p>������ŵ�����������裺��ͷ�ϴ�Ӧ��������������ж���</p><p>ȱ����ŵ�Ĵ��</p><ol><li>��Ҫ������Ҫ���������ꣻ</li><li>ϣ����ϣ�����������������</li><li>�����ǣ������ǰ���������ꡣ</li></ol><p>ȱ����ŵ���˲�����ص�����Լ����ϣ�Ҳ������ȷ˵��һ������Ľ�ֹ���ڡ������ĳ�ŵ�������ġ��һ���…֮ǰ…��</p><p>���Լ��޷���ȫ���յ��£���Ҫ���׳�ŵ��</p><p>�����Լ��޷�������ŵ������ȥ�������˶����Ԥ�ڡ�</p><p>�����Կ���˵���Լ��Գ�ŵ�������е�˼ɣ���˲�Ҫ�����Կ�����Ϊһ�ֳ�ŵ���������ȷ���Լ��ܴﵽ��ŵ�����ݶ�����ŵ����ô���������������صĺ����</p><h1 id="���"><a href="#���" class="headerlink" title="���"></a>���</h1><p>Ҫ��ͨһ�����Ҫ�Ըü����߱������ġ��͡���֪��������</p><p>״̬���õ�ʱ����ñ�д���롣״̬���÷�Ϊ��ƣ�ͣ����簾ҹ�����ǣ���Ϊ�����������Լ����ܰ������������ʱ��Ӧ���µ������ٽ��б�̡�</p><p>������״̬�ĸо��ܺã����ÿ������ܶ��£�������״̬��ʵ��һ��ǳ��ڤ�룬˼ά�������½������Ҫ���������״̬��</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/f0321ed1-fa93-460e-951b-4239fef819f3.jpg" alt=""></p><p>��״̬���ص��Ǹ����ͨ������Ա���ܹ��������ָ������˽�Ա���ܹ���ֹ������״̬��</p><p>���Լ�û���������ʱ����Ա���Ǹ���ѡ�񣬽�Ա��ʱ�����Ժ�������л�ѧ�仯��Ҳ����˵˼ά��ʽ��ı䣬������ͻ�Ƶ�ǰ��˼ά����״̬��</p><p>������ʱ���ֻ�ռ��һ����������Դ����˻ᵼ��Ч���½��������ⲻ�Ǿ��ԡ�</p><p>������һЩ�����Ե����ݣ�����ƻ�С˵�ȣ��Լ��Ĵ�����Ҳ��õ�������</p><p>����ʱ��Ҳ�ܱ��󣬲������������ܹ����͵��Ե�ʱ�䡣</p><p>�������������һ�����޷�ȫ���������ٶȳ�̣�ֻ��ͨ������������ά�ֽ�����ȡ��ʤ�������Ҫ���ֺ��Լ��Ľ��࣬��ƣ�͵�ʱ���ʵ���Ϣ��</p><p>���������Ⱥ��������ֹ�Ԥ������׼Ԥ���ͱ���Ԥ��������ʱ��㡣</p><p>����Լ�Ԥ���Ľ��ȸϲ��Ͻ�ֹʱ�䣬��Ҫ��Ӧ�ڽ�ֹʱ��ȥ��ɣ���Ϊ��֪�������Լ���Ԥ�����ǲ����ܵġ�</p><p>������ɵı�׼ͨ����һ���Զ��������ղ��������塣</p><p>��������Ҳ����Լ������ô����ڰ������˵�ʱ��Ҫ���Լ��������ִܲ٣������������Ӧ����һ��������˲���Ҫ�ر���ʱ�䡣ҲҪѧ��������˵İ�������Ϊ�Լ������������ܵģ�ͨ�����˵İ����ܸ��õĽ�����⡣</p><h1 id="������������"><a href="#������������" class="headerlink" title="������������"></a>������������</h1><p>TDD ���������ں̣ܶ�����һ�����ӾͿ�������һ�γ��򣬶����ڿ��Կ��ٵõ������������ڿ������ر���Ҫ��һ��������߳���Ա����ļ��飬��һ�������ܹ����緢�� bug���� bug Խ�緢���޸ĵش���ҲԽ�͡�</p><p>TDD ������</p><ol><li>��д���ԣ�</li><li>��һ����Ԫ����ʧ�ܵ�ʱ�򣬲�Ҫ��д���Դ��룻</li><li>��Ʒ������ǡ��ͨ����ǰʧ�ܵĵ�Ԫ���Լ��ɣ���Ҫ��д��</li></ol><p>TDD �ŵ�</p><ol><li>ȷ���ԣ�ȷ����ǰϵͳ�Ƿ���ȷ��</li><li>���ģ�����Ա������Ϣȥ�޸Ļ��ҵĴ��룬��Ϊͨ����Ԫ���Կ���֪���Ƿ��޸ĵ���ȷ��</li><li>�ĵ�����Ԫ�����ǵײ����ϸ�ڵ��ĵ���ͨ���Ķ���Ԫ�����ܹ�֪����������з�ʽ��</li></ol><h1 id="��ϰ"><a href="#��ϰ" class="headerlink" title="��ϰ"></a>��ϰ</h1><p>����������������һ����ƺõ���ʽ������ʽģ����ʵ����������ϰ���߲���ѵ������������Ϥ����ʽ���Ӷ��������졣��̿�����һ�ױ�̹����û����ͼ��̵Ķ�������ϰ�߲���Ϊ�˽�����������⣬��Ϊ�Ѿ�֪���˽��������������ϰ��������������Ҫ�Ķ����;��ߡ�</p><p>������ʹ���˶����Ŀ������ڱ�����򣬿�����һ����д��Ԫ���ԣ���һ����д����ͨ����Ԫ���ԡ����磬һ����ʵ�������㷨��д���Ե��˿��Ժ����׵������ٶȺ��ڴ棬��ͬ��ʩѹ��</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- GFM-TOC --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#������&quot;&gt;������&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#ǰ��&quot;&gt;ǰ��&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#רҵ����&quot;&gt;רҵ����&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a hre
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2018/03/29/programming-basics-master/notes/%E5%89%91%E6%8C%87%20offer%20%E9%A2%98%E8%A7%A3/"/>
    <id>http://yoursite.com/2018/03/29/programming-basics-master/notes/剑指 offer 题解/</id>
    <published>2018-03-29T14:37:48.204Z</published>
    <updated>2018-02-26T04:13:28.000Z</updated>
    
    <content type="html"><![CDATA[<!-- GFM-TOC --><ul><li><a href="#�ڶ���-������Ҫ�Ļ���֪ʶ">�ڶ��� ������Ҫ�Ļ���֪ʶ</a><ul><li><a href="#2-ʵ��-singleton">2. ʵ�� Singleton</a></li><li><a href="#3-�������ظ�������">3. �������ظ�������</a></li><li><a href="#4-��ά�����еĲ���">4. ��ά�����еĲ���</a></li><li><a href="#5-�滻�ո�">5. �滻�ո�</a></li><li><a href="#6-��β��ͷ��ӡ����">6. ��β��ͷ��ӡ����</a></li><li><a href="#7-�ؽ�������">7. �ؽ�������</a></li><li><a href="#8-����������һ�����">8. ����������һ�����</a></li><li><a href="#9-������ջʵ�ֶ���">9. ������ջʵ�ֶ���</a></li><li><a href="#101-쳲���������">10.1 쳲���������</a></li><li><a href="#102-��̨��">10.2 ��̨��</a></li><li><a href="#103-��̬��̨��">10.3 ��̬��̨��</a></li><li><a href="#104-���θ���">10.4 ���θ���</a></li><li><a href="#11-��ת�������С����">11. ��ת�������С����</a></li><li><a href="#12-�����е�·��">12. �����е�·��</a></li><li><a href="#13-�����˵��˶���Χ">13. �����˵��˶���Χ</a></li><li><a href="#14-������">14. ������</a></li><li><a href="#15-��������-1-�ĸ���">15. �������� 1 �ĸ���</a></li></ul></li><li><a href="#������-�������Ĵ���">������ �������Ĵ���</a><ul><li><a href="#16-��ֵ�������η�">16. ��ֵ�������η�</a></li><li><a href="#18-ɾ���������ظ��Ľ��">18. ɾ���������ظ��Ľ��</a></li><li><a href="#19-������ʽƥ��">19. ������ʽƥ��</a></li><li><a href="#20-��ʾ��ֵ���ַ���">20. ��ʾ��ֵ���ַ���</a></li><li><a href="#21-��������˳��ʹ����λ��ż��ǰ��">21. ��������˳��ʹ����λ��ż��ǰ��</a></li><li><a href="#22-�����е�����-k-�����">22. �����е����� k �����</a></li><li><a href="#23-�����л�����ڽ��">23. �����л�����ڽ��</a></li><li><a href="#24-��ת����">24. ��ת����</a></li><li><a href="#25-�ϲ��������������">25. �ϲ��������������</a></li><li><a href="#26-�����ӽṹ">26. �����ӽṹ</a></li></ul></li><li><a href="#������-����������˼·">������ ����������˼·</a><ul><li><a href="#27-�������ľ���">27. �������ľ���</a></li><li><a href="#281-�ԳƵĶ�����">28.1 �ԳƵĶ�����</a></li><li><a href="#282-ƽ�������">28.2 ƽ�������</a></li><li><a href="#29-˳ʱ���ӡ����">29. ˳ʱ���ӡ����</a></li><li><a href="#30-����-min-������ջ">30. ���� min ������ջ</a></li><li><a href="#31-ջ��ѹ�뵯������">31. ջ��ѹ�롢��������</a></li><li><a href="#321-�������´�ӡ������">32.1 �������´�ӡ������</a></li><li><a href="#323--�Ѷ�������ӡ�ɶ���">32.3  �Ѷ�������ӡ�ɶ���</a></li><li><a href="#323-��֮����˳���ӡ������">32.3 ��֮����˳���ӡ������</a></li><li><a href="#33-�����������ĺ����������">33. �����������ĺ����������</a></li><li><a href="#34-�������к�Ϊĳһֵ��·��">34. �������к�Ϊĳһֵ��·��</a></li><li><a href="#35-��������ĸ���">35. ��������ĸ���</a></li><li><a href="#36-������������˫������">36. ������������˫������</a></li><li><a href="#37-���л�������">37. ���л�������</a></li><li><a href="#38-�ַ���������">38. �ַ���������</a></li></ul></li><li><a href="#������-�Ż�ʱ��Ϳռ�Ч��">������ �Ż�ʱ��Ϳռ�Ч��</a><ul><li><a href="#39-�����г��ִ�������һ�������">39. �����г��ִ�������һ�������</a></li><li><a href="#40-��С��-k-����">40. ��С�� K ����</a></li><li><a href="#411-�������е���λ��">41.1 �������е���λ��</a></li><li><a href="#142-�ַ����е�һ�����ظ����ַ�">14.2 �ַ����е�һ�����ظ����ַ�</a></li><li><a href="#42-���������������">42. ���������������</a></li><li><a href="#43-��-1-��-n-������-1-���ֵĴ���">43. �� 1 �� n ������ 1 ���ֵĴ���</a></li><li><a href="#45-�������ų���С����">45. �������ų���С����</a></li><li><a href="#49-����">49. ����</a></li><li><a href="#50-��һ��ֻ����һ�ε��ַ�λ��">50. ��һ��ֻ����һ�ε��ַ�λ��</a></li><li><a href="#51-�����е������">51. �����е������</a></li><li><a href="#52-��������ĵ�һ���������">52. ��������ĵ�һ���������</a></li></ul></li><li><a href="#������-�����еĸ�������">������ �����еĸ�������</a><ul><li><a href="#53-���������������г��ֵĴ���">53 ���������������г��ֵĴ���</a></li><li><a href="#54-�����������ĵ�-k-�����">54. �����������ĵ� k �����</a></li><li><a href="#55-�����������">55 �����������</a></li><li><a href="#56-������ֻ����һ�ε�����">56. ������ֻ����һ�ε�����</a></li><li><a href="#571-��Ϊ-s-����������">57.1 ��Ϊ S ����������</a></li><li><a href="#572-��Ϊ-s-��������������">57.2 ��Ϊ S ��������������</a></li><li><a href="#581-��ת����˳����">58.1 ��ת����˳����</a></li><li><a href="#582-����ת�ַ���">58.2 ����ת�ַ���</a></li><li><a href="#59-�������ڵ����ֵ">59. �������ڵ����ֵ</a></li><li><a href="#61-�˿���˳��">61. �˿���˳��</a></li><li><a href="#62-ԲȦ�����ʣ�µ���">62. ԲȦ�����ʣ�µ���</a></li><li><a href="#63-��Ʊ���������">63. ��Ʊ���������</a></li><li><a href="#64-��-1+2+3++n">64. �� 1+2+3+…+n</a></li><li><a href="#65-���üӼ��˳����ӷ�">65. ���üӼ��˳����ӷ�</a></li><li><a href="#66-�����˻�����">66. �����˻�����</a></li></ul></li><li><a href="#������-�������԰���">������ �������԰���</a><ul><li><a href="#67-���ַ���ת��������">67. ���ַ���ת��������</a></li><li><a href="#68-���������ڵ����͹�������">68. ���������ڵ����͹�������</a><!-- GFM-TOC --></li></ul></li></ul><h1 id="�ڶ���-������Ҫ�L���֪ʶ"><a href="#�ڶ���-������Ҫ�L���֪ʶ" class="headerlink" title="�ڶ��� ������Ҫ�Ļ���֪ʶ"></a>�ڶ��� ������Ҫ�Ļ���֪ʶ</h1><h2 id="2-ʵ��-Singleton"><a href="#2-ʵ��-Singleton" class="headerlink" title="2. ʵ�� Singleton"></a>2. ʵ�� Singleton</h2><p><a href="https://github.com/CyC2018/InterviewNotes/blob/master/notes/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.md#%E7%AC%AC-5-%E7%AB%A0-%E5%8D%95%E4%BB%B6%E6%A8%A1%E5%BC%8F" target="_blank" rel="noopener">����ģʽ</a></p><h2 id="3-�������ظ�������"><a href="#3-�������ظ�������" class="headerlink" title="3. �������ظ�������"></a>3. �������ظ�������</h2><p><strong>��Ŀ����</strong></p><p>��һ������Ϊ n ����������������ֶ��� 0 �� n-1 �ķ�Χ�ڡ� ������ĳЩ�������ظ��ģ�����֪���м����������ظ��ġ�Ҳ��֪��ÿ�������ظ����Ρ����ҳ�����������һ���ظ������֡� ���磬������볤��Ϊ 7 ������ {2, 3, 1, 0, 2, 5, 3}����ô��Ӧ������ǵ�һ���ظ������� 2��</p><p><strong>����˼·</strong></p><p>��������Ԫ���� [0, n-1] ��Χ�ڵ����⣬���Խ�ֵΪ i ��Ԫ�طŵ��� i ��λ���ϡ�</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">duplicate</span><span class="params">(<span class="keyword">int</span> numbers[], <span class="keyword">int</span> length, <span class="keyword">int</span>[] duplication)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; length; i++) &#123;</span><br><span class="line">        <span class="keyword">while</span> (numbers[i] != i &amp;&amp; numbers[i] != numbers[numbers[i]]) &#123;</span><br><span class="line">            swap(numbers, i, numbers[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (numbers[i] != i &amp;&amp; numbers[i] == numbers[numbers[i]]) &#123;</span><br><span class="line">            duplication[<span class="number">0</span>] = numbers[i];</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span>[] numbers, <span class="keyword">int</span> i, <span class="keyword">int</span> j)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> t = numbers[i];</span><br><span class="line">    numbers[i] = numbers[j];</span><br><span class="line">    numbers[j] = t;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-��ά�����еĲ���"><a href="#4-��ά�����еĲ���" class="headerlink" title="4. ��ά�����еĲ���"></a>4. ��ά�����еĲ���</h2><p><strong>��Ŀ����</strong></p><p>��һ����ά�����У�ÿһ�ж����մ����ҵ�����˳������ÿһ�ж����մ��ϵ��µ�����˳�����������һ������������������һ����ά�����һ���������ж��������Ƿ��и�������</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">Find</span><span class="params">(<span class="keyword">int</span> target, <span class="keyword">int</span> [][] array)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (array == <span class="keyword">null</span> || array.length == <span class="number">0</span> || array[<span class="number">0</span>].length == <span class="number">0</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">int</span> m = array.length, n = array[<span class="number">0</span>].length;</span><br><span class="line">    <span class="keyword">int</span> row = <span class="number">0</span>, col = n - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (row &lt; m &amp;&amp; col &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (target == array[row][col]) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (target &lt; array[row][col]) col--;</span><br><span class="line">        <span class="keyword">else</span> row++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-�滻�ո�"><a href="#5-�滻�ո�" class="headerlink" title="5. �滻�ո�"></a>5. �滻�ո�</h2><p><strong>��Ŀ����</strong></p><p>��ʵ��һ����������һ���ַ����еĿո��滻�ɡ�%20�������磬���ַ���Ϊ We Are Happy. �򾭹��滻֮����ַ���Ϊ We%20Are%20Happy��</p><p><strong>��ĿҪ��</strong></p><p>�� O(1) �Ŀռ临�Ӷ�����⡣</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">replaceSpace</span><span class="params">(StringBuffer str)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = str.length();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (str.charAt(i) == <span class="string">' '</span>) str.append(<span class="string">"  "</span>); <span class="comment">// β���������</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> idxOfOriginal = n - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> idxOfNew = str.length() - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (idxOfOriginal &gt;= <span class="number">0</span> &amp;&amp; idxOfNew &gt; idxOfOriginal) &#123;</span><br><span class="line">        <span class="keyword">if</span> (str.charAt(idxOfOriginal) == <span class="string">' '</span>) &#123;</span><br><span class="line">            str.setCharAt(idxOfNew--, <span class="string">'0'</span>);</span><br><span class="line">            str.setCharAt(idxOfNew--, <span class="string">'2'</span>);</span><br><span class="line">            str.setCharAt(idxOfNew--, <span class="string">'%'</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            str.setCharAt(idxOfNew--, str.charAt(idxOfOriginal));</span><br><span class="line">        &#125;</span><br><span class="line">        idxOfOriginal--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> str.toString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-��β��ͷ��ӡ����"><a href="#6-��β��ͷ��ӡ����" class="headerlink" title="6. ��β��ͷ��ӡ����"></a>6. ��β��ͷ��ӡ����</h2><p>�������Ȼ����� Collections.reverse().</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> ArrayList&lt;Integer&gt; <span class="title">printListFromTailToHead</span><span class="params">(ListNode listNode)</span> </span>&#123;</span><br><span class="line">    ArrayList&lt;Integer&gt; ret = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="keyword">while</span> (listNode != <span class="keyword">null</span>) &#123;</span><br><span class="line">        ret.add(listNode.val);</span><br><span class="line">        listNode = listNode.next;</span><br><span class="line">    &#125;</span><br><span class="line">    Collections.reverse(ret);</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>�ݹ�</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> ArrayList&lt;Integer&gt; <span class="title">printListFromTailToHead</span><span class="params">(ListNode listNode)</span> </span>&#123;</span><br><span class="line">    ArrayList&lt;Integer&gt; ret = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="keyword">if</span>(listNode != <span class="keyword">null</span>) &#123;</span><br><span class="line">        ret.addAll(printListFromTailToHead(listNode.next));</span><br><span class="line">        ret.add(listNode.val);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>��ʹ�ÿ⺯�������Ҳ�ʹ�õݹ�ĵ���ʵ�֣����������ͷ�巨Ϊ��������ԡ�</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> ArrayList&lt;Integer&gt; <span class="title">printListFromTailToHead</span><span class="params">(ListNode listNode)</span> </span>&#123;</span><br><span class="line">    ListNode head = <span class="keyword">new</span> ListNode(-<span class="number">1</span>); <span class="comment">// ͷ���</span></span><br><span class="line">    ListNode cur = listNode;</span><br><span class="line">    <span class="keyword">while</span> (cur != <span class="keyword">null</span>) &#123;</span><br><span class="line">        ListNode next = cur.next;</span><br><span class="line">        cur.next = head.next;</span><br><span class="line">        head.next = cur;</span><br><span class="line">        cur = next;</span><br><span class="line">    &#125;</span><br><span class="line">    ArrayList&lt;Integer&gt; ret = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    head = head.next;</span><br><span class="line">    <span class="keyword">while</span> (head != <span class="keyword">null</span>) &#123;</span><br><span class="line">        ret.add(head.val);</span><br><span class="line">        head = head.next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="7-�ؽ�������"><a href="#7-�ؽ�������" class="headerlink" title="7. �ؽ�������"></a>7. �ؽ�������</h2><p><strong>��Ŀ����</strong></p><p>���ݶ�������ǰ���������������Ľ�����ؽ����ö�������</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> TreeNode <span class="title">reConstructBinaryTree</span><span class="params">(<span class="keyword">int</span>[] pre, <span class="keyword">int</span>[] in)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> reConstructBinaryTree(pre, <span class="number">0</span>, pre.length - <span class="number">1</span>, in, <span class="number">0</span>, in.length - <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">private</span> TreeNode <span class="title">reConstructBinaryTree</span><span class="params">(<span class="keyword">int</span>[] pre, <span class="keyword">int</span> preL, <span class="keyword">int</span> preR, <span class="keyword">int</span>[] in, <span class="keyword">int</span> inL, <span class="keyword">int</span> inR)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(preL &gt; preR || inL &gt; inR) <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    TreeNode root = <span class="keyword">new</span> TreeNode(pre[preL]);</span><br><span class="line">    <span class="keyword">if</span> (preL != preR) &#123;</span><br><span class="line">        <span class="keyword">int</span> idx = inL;</span><br><span class="line">        <span class="keyword">while</span> (idx &lt;= inR &amp;&amp; in[idx] != root.val) idx++;</span><br><span class="line">        <span class="keyword">int</span> leftTreeLen = idx - inL;</span><br><span class="line">        root.left = reConstructBinaryTree(pre, preL + <span class="number">1</span>, preL + leftTreeLen, in, inL, inL + leftTreeLen - <span class="number">1</span>);</span><br><span class="line">        root.right = reConstructBinaryTree(pre, preL + leftTreeLen + <span class="number">1</span>, preR, in, inL + leftTreeLen + <span class="number">1</span>, inR);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> root;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="8-����������һ�����"><a href="#8-����������һ�����" class="headerlink" title="8. ����������һ�����"></a>8. ����������һ�����</h2><p><strong>��Ŀ����</strong></p><p>����һ�������������е�һ����㣬���ҳ��������˳�����һ����㲢�ҷ��ء�ע�⣬���еĽ�㲻�����������ӽ�㣬ͬʱ����ָ�򸸽���ָ�롣</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> TreeLinkNode <span class="title">GetNext</span><span class="params">(TreeLinkNode pNode)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (pNode == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">if</span> (pNode.right != <span class="keyword">null</span>) &#123;</span><br><span class="line">        pNode = pNode.right;</span><br><span class="line">        <span class="keyword">while</span> (pNode.left != <span class="keyword">null</span>) pNode = pNode.left;</span><br><span class="line">        <span class="keyword">return</span> pNode;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        TreeLinkNode parent = pNode.next;</span><br><span class="line">        <span class="keyword">while</span> (parent != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (parent.left == pNode) <span class="keyword">return</span> parent;</span><br><span class="line">            pNode = pNode.next;</span><br><span class="line">            parent = pNode.next;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="9-������ջʵ�ֶ���"><a href="#9-������ջʵ�ֶ���" class="headerlink" title="9. ������ջʵ�ֶ���"></a>9. ������ջʵ�ֶ���</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">Stack&lt;Integer&gt; stack1 = <span class="keyword">new</span> Stack&lt;Integer&gt;();</span><br><span class="line">Stack&lt;Integer&gt; stack2 = <span class="keyword">new</span> Stack&lt;Integer&gt;();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">push</span><span class="params">(<span class="keyword">int</span> node)</span> </span>&#123;</span><br><span class="line">    stack1.push(node);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">pop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (stack2.isEmpty()) &#123;</span><br><span class="line">        <span class="keyword">while</span> (!stack1.isEmpty()) &#123;</span><br><span class="line">            stack2.push(stack1.pop());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> stack2.pop();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="10-1-쳲���������"><a href="#10-1-쳲���������" class="headerlink" title="10.1 쳲���������"></a>10.1 쳲���������</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">int</span>[] fib = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">40</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Solution</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    fib[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    fib[<span class="number">2</span>] = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; fib.length; i++) &#123;</span><br><span class="line">        fib[i] = fib[i - <span class="number">1</span>] + fib[i - <span class="number">2</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">Fibonacci</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> fib[n];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="10-2-��̨��"><a href="#10-2-��̨��" class="headerlink" title="10.2 ��̨��"></a>10.2 ��̨��</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">JumpFloor</span><span class="params">(<span class="keyword">int</span> target)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (target == <span class="number">1</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span>[] dp = <span class="keyword">new</span> <span class="keyword">int</span>[target];</span><br><span class="line">    dp[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    dp[<span class="number">1</span>] = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; dp.length; i++) &#123;</span><br><span class="line">        dp[i] = dp[i - <span class="number">1</span>] + dp[i - <span class="number">2</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> dp[target - <span class="number">1</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="10-3-��̬��̨��"><a href="#10-3-��̬��̨��" class="headerlink" title="10.3 ��̬��̨��"></a>10.3 ��̬��̨��</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">JumpFloorII</span><span class="params">(<span class="keyword">int</span> target)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span>[] dp = <span class="keyword">new</span> <span class="keyword">int</span>[target];</span><br><span class="line">    Arrays.fill(dp, <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; target; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; i; j++) &#123;</span><br><span class="line">            dp[i] += dp[j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> dp[target - <span class="number">1</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="10-4-���θ���"><a href="#10-4-���θ���" class="headerlink" title="10.4 ���θ���"></a>10.4 ���θ���</h2><p><strong>��Ŀ����</strong></p><p>���ǿ����� 2*1 ��С���κ��Ż�������ȥ���Ǹ���ľ��Ρ������� n �� 2*1 ��С�������ص��ظ���һ�� 2*n �Ĵ���Σ��ܹ��ж����ַ�����</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">RectCover</span><span class="params">(<span class="keyword">int</span> target)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (target &lt;= <span class="number">2</span>) <span class="keyword">return</span> target;</span><br><span class="line">    <span class="keyword">return</span> RectCover(target - <span class="number">1</span>) + RectCover(target - <span class="number">2</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="11-��ת�������С����"><a href="#11-��ת�������С����" class="headerlink" title="11. ��ת�������С����"></a>11. ��ת�������С����</h2><p><strong>��Ŀ����</strong></p><p>��һ�������ʼ����ɸ�Ԫ�ذᵽ�����ĩβ�����ǳ�֮Ϊ�������ת�� ����һ���ǵݼ�����������һ����ת�������ת�������СԪ�ء� �������� {3, 4, 5, 1, 2} Ϊ {1, 2, 3, 4, 5} ��һ����ת�����������СֵΪ 1�� NOTE������������Ԫ�ض����� 0���������СΪ 0���뷵�� 0��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">minNumberInRotateArray</span><span class="params">(<span class="keyword">int</span>[] array)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (array.length == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; array.length - <span class="number">1</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (array[i] &gt; array[i + <span class="number">1</span>]) <span class="keyword">return</span> array[i + <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="12-�����е�·��"><a href="#12-�����е�·��" class="headerlink" title="12. �����е�·��"></a>12. �����е�·��</h2><p><strong>��Ŀ����</strong></p><p>�����һ�������������ж���һ���������Ƿ����һ������ĳ�ַ��������ַ���·����·�����ԴӾ����е�����һ�����ӿ�ʼ��ÿһ�������ھ������������ң����ϣ������ƶ�һ�����ӡ����һ��·�������˾����е�ĳһ�����ӣ����·�������ٽ���ø��ӡ� ���� a b c e s f c s a d e e �����а���һ���ַ��� “bcced” ��·�������Ǿ����в����� “abcb” ·������Ϊ�ַ����ĵ�һ���ַ� b ռ���˾����еĵ�һ�еڶ�������֮��·�������ٴν���ø��ӡ�</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">int</span>[][] next = &#123;&#123;<span class="number">0</span>, -<span class="number">1</span>&#125;, &#123;<span class="number">0</span>, <span class="number">1</span>&#125;, &#123;-<span class="number">1</span>, <span class="number">0</span>&#125;, &#123;<span class="number">1</span>, <span class="number">0</span>&#125;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hasPath</span><span class="params">(<span class="keyword">char</span>[] matrix, <span class="keyword">int</span> rows, <span class="keyword">int</span> cols, <span class="keyword">char</span>[] str)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (rows == <span class="number">0</span> || cols == <span class="number">0</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">char</span>[][] m = <span class="keyword">new</span> <span class="keyword">char</span>[rows][cols];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, idx = <span class="number">0</span>; i &lt; rows; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; cols; j++) &#123;</span><br><span class="line">            m[i][j] = matrix[idx++];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; rows; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; cols; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (backtracking(m, rows, cols, str, <span class="keyword">new</span> <span class="keyword">boolean</span>[rows][cols], <span class="number">0</span>, i, j)) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">backtracking</span><span class="params">(<span class="keyword">char</span>[][] m, <span class="keyword">int</span> rows, <span class="keyword">int</span> cols, <span class="keyword">char</span>[] str, <span class="keyword">boolean</span>[][] used, <span class="keyword">int</span> path, <span class="keyword">int</span> r, <span class="keyword">int</span> c)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (path == str.length) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">if</span> (r &lt; <span class="number">0</span> || r &gt;= rows || c &lt; <span class="number">0</span> || c &gt;= cols) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">if</span> (m[r][c] != str[path]) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">if</span> (used[r][c]) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    used[r][c] = <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; next.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (backtracking(m, rows, cols, str, used, path + <span class="number">1</span>, r + next[i][<span class="number">0</span>], c + next[i][<span class="number">1</span>])) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    used[r][c] = <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="13-�����˵��˶���Χ"><a href="#13-�����˵��˶���Χ" class="headerlink" title="13. �����˵��˶���Χ"></a>13. �����˵��˶���Χ</h2><p><strong>��Ŀ����</strong></p><p>������һ�� m �к� n �еķ���һ�������˴����� 0, 0 �ĸ��ӿ�ʼ�ƶ���ÿһ��ֻ�������ң��ϣ����ĸ������ƶ�һ�񣬵��ǲ��ܽ�������������������λ֮�ʹ��� k �ĸ��ӡ� ���磬�� k Ϊ 18 ʱ���������ܹ����뷽��35, 37������Ϊ 3+5+3+7 = 18�����ǣ������ܽ��뷽��35, 38������Ϊ 3+5+3+8 = 19�����ʸû������ܹ��ﵽ���ٸ����ӣ�</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span>[][] next = &#123;&#123;<span class="number">0</span>, -<span class="number">1</span>&#125;, &#123;<span class="number">0</span>, <span class="number">1</span>&#125;, &#123;-<span class="number">1</span>, <span class="number">0</span>&#125;, &#123;<span class="number">1</span>, <span class="number">0</span>&#125;&#125;;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span>[][] digitSum;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">movingCount</span><span class="params">(<span class="keyword">int</span> threshold, <span class="keyword">int</span> rows, <span class="keyword">int</span> cols)</span> </span>&#123;</span><br><span class="line">    initDigitSum(rows, cols);</span><br><span class="line">    dfs(<span class="keyword">new</span> <span class="keyword">boolean</span>[rows][cols], threshold, rows, cols, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">return</span> cnt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">boolean</span>[][] visited, <span class="keyword">int</span> threshold, <span class="keyword">int</span> rows, <span class="keyword">int</span> cols, <span class="keyword">int</span> r, <span class="keyword">int</span> c)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (r &lt; <span class="number">0</span> || r &gt;= rows || c &lt; <span class="number">0</span> || c &gt;= cols) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span> (visited[r][c]) <span class="keyword">return</span>;</span><br><span class="line">    visited[r][c] = <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.digitSum[r][c] &gt; threshold) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">this</span>.cnt++;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>.next.length; i++) &#123;</span><br><span class="line">        dfs(visited, threshold, rows, cols, r + next[i][<span class="number">0</span>], c + next[i][<span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initDigitSum</span><span class="params">(<span class="keyword">int</span> rows, <span class="keyword">int</span> cols)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span>[] digitSumOne = <span class="keyword">new</span> <span class="keyword">int</span>[Math.max(rows, cols)];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; digitSumOne.length; i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> n = i;</span><br><span class="line">        <span class="keyword">while</span> (n &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            digitSumOne[i] += n % <span class="number">10</span>;</span><br><span class="line">            n /= <span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">this</span>.digitSum = <span class="keyword">new</span> <span class="keyword">int</span>[rows][cols];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; rows; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; cols; j++) &#123;</span><br><span class="line">            <span class="keyword">this</span>.digitSum[i][j] = digitSumOne[i] + digitSumOne[j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="14-������"><a href="#14-������" class="headerlink" title="14. ������"></a>14. ������</h2><p><strong>��Ŀ����</strong></p><p>��һ�����Ӽ�ɶ�Σ�����ʹ��ÿ�εĳ��ȳ˻����</p><p><strong>����˼·</strong></p><p>�����ܶ�ü��Ϊ 3 �����ӣ����Ҳ������г���Ϊ 1 �����ӳ��֣���������ˣ��ʹ��Ѿ��кó���Ϊ 3 ���������ó�һ���볤��Ϊ 1 ������������ϣ��������г����γ���Ϊ 2 �����ӡ�</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">maxProductAfterCuttin</span><span class="params">(<span class="keyword">int</span> length)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (length &lt; <span class="number">2</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (length == <span class="number">2</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (length == <span class="number">3</span>) <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">int</span> timesOf3 = length / <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">if</span> (length - timesOf3 * <span class="number">3</span> == <span class="number">1</span>) timesOf3--;</span><br><span class="line">    <span class="keyword">int</span> timesOf2 = (length - timesOf3 * <span class="number">3</span>) / <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">return</span> (<span class="keyword">int</span>) (Math.pow(<span class="number">3</span>, timesOf3)) * (<span class="keyword">int</span>) (Math.pow(<span class="number">2</span>, timesOf2));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="15-��������-1-�ĸ���"><a href="#15-��������-1-�ĸ���" class="headerlink" title="15. �������� 1 �ĸ���"></a>15. �������� 1 �ĸ���</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">NumberOf1</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> Integer.bitCount(n);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>n&amp;(n-1) ��λ������ȥ�� n ��λ����ʾ����͵���һλ��������ڶ����Ʊ�ʾ 10110100����ȥ 1 �õ� 10110011��������������õ� 10110000��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">NumberOf1</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (n != <span class="number">0</span>) &#123;</span><br><span class="line">        cnt++;</span><br><span class="line">        n &amp;= (n - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> cnt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="������-�������J���"><a href="#������-�������J���" class="headerlink" title="������ �������Ĵ���"></a>������ �������Ĵ���</h1><h2 id="16-��ֵ�������η�"><a href="#16-��ֵ�������η�" class="headerlink" title="16. ��ֵ�������η�"></a>16. ��ֵ�������η�</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">Power</span><span class="params">(<span class="keyword">double</span> base, <span class="keyword">int</span> exponent)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (exponent == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (exponent == <span class="number">1</span>) <span class="keyword">return</span> base;</span><br><span class="line">    <span class="keyword">boolean</span> isNegative = <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">if</span> (exponent &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        exponent = -exponent;</span><br><span class="line">        isNegative = <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">double</span> pow = Power(base * base, exponent / <span class="number">2</span>);</span><br><span class="line">    <span class="keyword">if</span> (exponent % <span class="number">2</span> != <span class="number">0</span>) pow = pow * base;</span><br><span class="line">    <span class="keyword">return</span> isNegative ? <span class="number">1</span> / pow : pow;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="18-ɾ���������ظ��L��"><a href="#18-ɾ���������ظ��L��" class="headerlink" title="18. ɾ���������ظ��Ľ��"></a>18. ɾ���������ظ��Ľ��</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> ListNode <span class="title">deleteDuplication</span><span class="params">(ListNode pHead)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (pHead == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">if</span> (pHead.next == <span class="keyword">null</span>) <span class="keyword">return</span> pHead;</span><br><span class="line">    <span class="keyword">if</span> (pHead.val == pHead.next.val) &#123;</span><br><span class="line">        ListNode next = pHead.next;</span><br><span class="line">        <span class="keyword">while</span> (next != <span class="keyword">null</span> &amp;&amp; pHead.val == next.val) &#123;</span><br><span class="line">            next = next.next;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> deleteDuplication(next);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        pHead.next = deleteDuplication(pHead.next);</span><br><span class="line">        <span class="keyword">return</span> pHead;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="19-������ʽp��"><a href="#19-������ʽp��" class="headerlink" title="19. ������ʽƥ��"></a>19. ������ʽƥ��</h2><p><strong>��Ŀ����</strong></p><p>��ʵ��һ����������ƥ����� ‘.’ �� ‘*‘ ��������ʽ��ģʽ�е��ַ� ‘.’ ��ʾ����һ���ַ����� ‘*‘ ��ʾ��ǰ����ַ����Գ�������Σ����� 0 �Σ��� �ڱ����У�ƥ����ָ�ַ����������ַ�ƥ������ģʽ�����磬�ַ��� “aaa” ��ģʽ “a.a” �� “ab*ac*a” ƥ�䣬������ “aa.a” �� “ab*a” ����ƥ��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">match</span><span class="params">(<span class="keyword">char</span>[] str, <span class="keyword">char</span>[] pattern)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = str.length, m = pattern.length;</span><br><span class="line">    <span class="keyword">boolean</span>[][] dp = <span class="keyword">new</span> <span class="keyword">boolean</span>[n + <span class="number">1</span>][m + <span class="number">1</span>];</span><br><span class="line">    dp[<span class="number">0</span>][<span class="number">0</span>] = <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (pattern[i - <span class="number">1</span>] == <span class="string">'*'</span>) dp[<span class="number">0</span>][i] = dp[<span class="number">0</span>][i - <span class="number">2</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (str[i - <span class="number">1</span>] == pattern[j - <span class="number">1</span>] || pattern[j - <span class="number">1</span>] == <span class="string">'.'</span>) dp[i][j] = dp[i - <span class="number">1</span>][j - <span class="number">1</span>];</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (pattern[j - <span class="number">1</span>] == <span class="string">'*'</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (pattern[j - <span class="number">2</span>] != str[i - <span class="number">1</span>] &amp;&amp; pattern[j - <span class="number">2</span>] != <span class="string">'.'</span>) dp[i][j] = dp[i][j - <span class="number">2</span>];</span><br><span class="line">                <span class="keyword">else</span> dp[i][j] = dp[i][j - <span class="number">1</span>] || dp[i][j - <span class="number">2</span>] || dp[i - <span class="number">1</span>][j];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> dp[n][m];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="20-��ʾ��ֵ���ַ���"><a href="#20-��ʾ��ֵ���ַ���" class="headerlink" title="20. ��ʾ��ֵ���ַ���"></a>20. ��ʾ��ֵ���ַ���</h2><p><strong>��Ŀ����</strong></p><p>��ʵ��һ�����������ж��ַ����Ƿ��ʾ��ֵ������������С���������磬�ַ��� “+100”,”5e2”,”-123”,”3.1416” �� “-1E-16” ����ʾ��ֵ�� ���� “12e”,”1a3.14”,”1.2.3”,”+-5” �� “12e+4.3” �����ǡ�</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isNumeric</span><span class="params">(<span class="keyword">char</span>[] str)</span> </span>&#123;</span><br><span class="line">    String string = String.valueOf(str);</span><br><span class="line">    <span class="keyword">return</span> string.matches(<span class="string">"[\\+-]?[0-9]*(\\.[0-9]*)?([eE][\\+-]?[0-9]+)?"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="21-��������˳��ʹ����λ��z��j��"><a href="#21-��������˳��ʹ����λ��z��j��" class="headerlink" title="21. ��������˳��ʹ����λ��ż��ǰ��"></a>21. ��������˳��ʹ����λ��ż��ǰ��</h2><p>ʱ�临�Ӷ� : O(n<sup>2</sup>)<br>�ռ临�Ӷ� : O(1)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">reOrderArray</span><span class="params">(<span class="keyword">int</span>[] array)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = array.length;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (array[i] % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">int</span> nextOddIdx = i + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span> (nextOddIdx &lt; n &amp;&amp; array[nextOddIdx] % <span class="number">2</span> == <span class="number">0</span>) nextOddIdx++;</span><br><span class="line">            <span class="keyword">if</span> (nextOddIdx == n) <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">int</span> nextOddVal = array[nextOddIdx];</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = nextOddIdx; j &gt; i; j--) &#123;</span><br><span class="line">                array[j] = array[j - <span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">            array[i] = nextOddVal;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ʱ�临�Ӷ� : O(n)<br>�ռ临�Ӷ� : O(n)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">reOrderArray</span><span class="params">(<span class="keyword">int</span>[] array)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> oddCnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> num : array) <span class="keyword">if</span> (num % <span class="number">2</span> == <span class="number">1</span>) oddCnt++;</span><br><span class="line">    <span class="keyword">int</span>[] copy = array.clone();</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, j = oddCnt;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> num : copy) &#123;</span><br><span class="line">        <span class="keyword">if</span> (num % <span class="number">2</span> == <span class="number">1</span>) array[i++] = num;</span><br><span class="line">        <span class="keyword">else</span> array[j++] = num;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="22-�����е�����-k-�����"><a href="#22-�����е�����-k-�����" class="headerlink" title="22. �����е����� k �����"></a>22. �����е����� k �����</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> ListNode <span class="title">FindKthToTail</span><span class="params">(ListNode head, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (head == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    ListNode fast, slow;</span><br><span class="line">    fast = slow = head;</span><br><span class="line">    <span class="keyword">while</span> (fast != <span class="keyword">null</span> &amp;&amp; k-- &gt; <span class="number">0</span>) fast = fast.next;</span><br><span class="line">    <span class="keyword">if</span> (k &gt; <span class="number">0</span>) <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">while</span> (fast != <span class="keyword">null</span>) &#123;</span><br><span class="line">        fast = fast.next;</span><br><span class="line">        slow = slow.next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> slow;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="23-�����л�����ڽ��"><a href="#23-�����л�����ڽ��" class="headerlink" title="23. �����л�����ڽ��"></a>23. �����л�����ڽ��</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> ListNode <span class="title">EntryNodeOfLoop</span><span class="params">(ListNode pHead)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (pHead == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    ListNode slow = pHead, fast = pHead;</span><br><span class="line">    <span class="keyword">while</span> (fast != <span class="keyword">null</span> &amp;&amp; fast.next != <span class="keyword">null</span>) &#123;</span><br><span class="line">        fast = fast.next.next;</span><br><span class="line">        slow = slow.next;</span><br><span class="line">        <span class="keyword">if</span> (slow == fast) &#123;</span><br><span class="line">            fast = pHead;</span><br><span class="line">            <span class="keyword">while</span> (slow != fast) &#123;</span><br><span class="line">                slow = slow.next;</span><br><span class="line">                fast = fast.next;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> slow;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="24-��ת����"><a href="#24-��ת����" class="headerlink" title="24. ��ת����"></a>24. ��ת����</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> ListNode <span class="title">ReverseList</span><span class="params">(ListNode head)</span> </span>&#123;</span><br><span class="line">    ListNode newList = <span class="keyword">new</span> ListNode(-<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">while</span> (head != <span class="keyword">null</span>) &#123;</span><br><span class="line">        ListNode next = head.next;</span><br><span class="line">        head.next = newList.next;</span><br><span class="line">        newList.next = head;</span><br><span class="line">        head = next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> newList.next;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="25-�ϲ��������������"><a href="#25-�ϲ��������������" class="headerlink" title="25. �ϲ��������������"></a>25. �ϲ��������������</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> ListNode <span class="title">Merge</span><span class="params">(ListNode list1, ListNode list2)</span> </span>&#123;</span><br><span class="line">    ListNode head = <span class="keyword">new</span> ListNode(-<span class="number">1</span>);</span><br><span class="line">    ListNode cur = head;</span><br><span class="line">    <span class="keyword">while</span> (list1 != <span class="keyword">null</span> &amp;&amp; list2 != <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (list1.val &lt; list2.val) &#123;</span><br><span class="line">            cur.next = list1;</span><br><span class="line">            list1 = list1.next;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            cur.next = list2;</span><br><span class="line">            list2 = list2.next;</span><br><span class="line">        &#125;</span><br><span class="line">        cur = cur.next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (list1 != <span class="keyword">null</span>) cur.next = list1;</span><br><span class="line">    <span class="keyword">if</span> (list2 != <span class="keyword">null</span>) cur.next = list2;</span><br><span class="line">    <span class="keyword">return</span> head.next;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="26-�����ӽu"><a href="#26-�����ӽu" class="headerlink" title="26. �����ӽṹ"></a>26. �����ӽṹ</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">HasSubtree</span><span class="params">(TreeNode root1, TreeNode root2)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (root1 == <span class="keyword">null</span> || root2 == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">return</span> isSubtree(root1, root2) || HasSubtree(root1.left, root2) || HasSubtree(root1.right, root2);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">isSubtree</span><span class="params">(TreeNode root1, TreeNode root2)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (root1 == <span class="keyword">null</span> &amp;&amp; root2 == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">if</span> (root1 == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">if</span> (root2 == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">if</span> (root1.val != root2.val) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">return</span> isSubtree(root1.left, root2.left) &amp;&amp; isSubtree(root1.right, root2.right);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="������-����������˼·"><a href="#������-����������˼·" class="headerlink" title="������ ����������˼·"></a>������ ����������˼·</h1><h2 id="27-�������l���"><a href="#27-�������l���" class="headerlink" title="27. �������ľ���"></a>27. �������ľ���</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Mirror</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (root == <span class="keyword">null</span>) <span class="keyword">return</span>;</span><br><span class="line">    TreeNode t = root.left;</span><br><span class="line">    root.left = root.right;</span><br><span class="line">    root.right = t;</span><br><span class="line">    Mirror(root.left);</span><br><span class="line">    Mirror(root.right);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="28-1-�ԳZK�����"><a href="#28-1-�ԳZK�����" class="headerlink" title="28.1 �ԳƵĶ�����"></a>28.1 �ԳƵĶ�����</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">isSymmetrical</span><span class="params">(TreeNode pRoot)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (pRoot == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">return</span> isSymmetrical(pRoot.left, pRoot.right);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">boolean</span> <span class="title">isSymmetrical</span><span class="params">(TreeNode t1, TreeNode t2)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (t1 == <span class="keyword">null</span> &amp;&amp; t2 == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">if</span> (t1 == <span class="keyword">null</span> || t2 == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">if</span> (t1.val != t2.val) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">return</span> isSymmetrical(t1.left, t2.right) &amp;&amp; isSymmetrical(t1.right, t2.left);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="28-2-ƽ�������"><a href="#28-2-ƽ�������" class="headerlink" title="28.2 ƽ�������"></a>28.2 ƽ�������</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">boolean</span> isBalanced = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">IsBalanced_Solution</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">    height(root);</span><br><span class="line">    <span class="keyword">return</span> isBalanced;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">height</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (root == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> left = height(root.left);</span><br><span class="line">    <span class="keyword">int</span> right = height(root.right);</span><br><span class="line">    <span class="keyword">if</span> (Math.abs(left - right) &gt; <span class="number">1</span>) isBalanced = <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span> + Math.max(left, right);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="29-˳ʱ���ӡ����"><a href="#29-˳ʱ���ӡ����" class="headerlink" title="29. ˳ʱ���ӡ����"></a>29. ˳ʱ���ӡ����</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> ArrayList&lt;Integer&gt; <span class="title">printMatrix</span><span class="params">(<span class="keyword">int</span>[][] matrix)</span> </span>&#123;</span><br><span class="line">    ArrayList&lt;Integer&gt; ret = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="keyword">int</span> r1 = <span class="number">0</span>, r2 = matrix.length - <span class="number">1</span>, c1 = <span class="number">0</span>, c2 = matrix[<span class="number">0</span>].length - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (r1 &lt;= r2 &amp;&amp; c1 &lt;= c2) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = c1; i &lt;= c2; i++) ret.add(matrix[r1][i]);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = r1 + <span class="number">1</span>; i &lt;= r2; i++) ret.add(matrix[i][c2]);</span><br><span class="line">        <span class="keyword">if</span> (r1 != r2) <span class="keyword">for</span> (<span class="keyword">int</span> i = c2 - <span class="number">1</span>; i &gt;= c1; i--) ret.add(matrix[r2][i]);</span><br><span class="line">        <span class="keyword">if</span> (c1 != c2) <span class="keyword">for</span> (<span class="keyword">int</span> i = r2 - <span class="number">1</span>; i &gt; r1; i--) ret.add(matrix[i][c1]);</span><br><span class="line">        r1++; r2--; c1++; c2--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="30-����-min-������ջ"><a href="#30-����-min-������ջ" class="headerlink" title="30. ���� min ������ջ"></a>30. ���� min ������ջ</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> Stack&lt;Integer&gt; stack = <span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line"><span class="keyword">private</span> Stack&lt;Integer&gt; minStack = <span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> min = Integer.MAX_VALUE;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">push</span><span class="params">(<span class="keyword">int</span> node)</span> </span>&#123;</span><br><span class="line">    stack.push(node);</span><br><span class="line">    <span class="keyword">if</span> (min &gt; node) min = node;</span><br><span class="line">    minStack.push(min);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">pop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    stack.pop();</span><br><span class="line">    minStack.pop();</span><br><span class="line">    min = minStack.peek();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">top</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> stack.peek();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">min</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> minStack.peek();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="31-ջ��ѹ�롢��������"><a href="#31-ջ��ѹ�롢��������" class="headerlink" title="31. ջ��ѹ�롢��������"></a>31. ջ��ѹ�롢��������</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">IsPopOrder</span><span class="params">(<span class="keyword">int</span>[] pushA, <span class="keyword">int</span>[] popA)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = pushA.length;</span><br><span class="line">    Stack&lt;Integer&gt; stack = <span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        stack.push(pushA[i]);</span><br><span class="line">        <span class="keyword">while</span> (j &lt; n &amp;&amp; stack.peek() == popA[j]) &#123;</span><br><span class="line">            stack.pop();</span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> stack.isEmpty();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="32-1-�������´�ӡ������"><a href="#32-1-�������´�ӡ������" class="headerlink" title="32.1 �������´�ӡ������"></a>32.1 �������´�ӡ������</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> ArrayList&lt;Integer&gt; <span class="title">PrintFromTopToBottom</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">    Queue&lt;TreeNode&gt; queue = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">    ArrayList&lt;Integer&gt; ret = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="keyword">if</span> (root == <span class="keyword">null</span>) <span class="keyword">return</span> ret;</span><br><span class="line">    queue.add(root);</span><br><span class="line">    <span class="keyword">while</span> (!queue.isEmpty()) &#123;</span><br><span class="line">        <span class="keyword">int</span> cnt = queue.size();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; cnt; i++) &#123;</span><br><span class="line">            TreeNode t = queue.poll();</span><br><span class="line">            <span class="keyword">if</span> (t.left != <span class="keyword">null</span>) queue.add(t.left);</span><br><span class="line">            <span class="keyword">if</span> (t.right != <span class="keyword">null</span>) queue.add(t.right);</span><br><span class="line">            ret.add(t.val);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="32-3-�Ѷ�������ӡ�ɶ���"><a href="#32-3-�Ѷ�������ӡ�ɶ���" class="headerlink" title="32.3  �Ѷ�������ӡ�ɶ���"></a>32.3  �Ѷ�������ӡ�ɶ���</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">ArrayList&lt;ArrayList&lt;Integer&gt;&gt; Print(TreeNode pRoot) &#123;</span><br><span class="line">    ArrayList&lt;ArrayList&lt;Integer&gt;&gt; ret = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="keyword">if</span> (pRoot == <span class="keyword">null</span>) <span class="keyword">return</span> ret;</span><br><span class="line">    Queue&lt;TreeNode&gt; queue = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">    queue.add(pRoot);</span><br><span class="line">    <span class="keyword">while</span> (!queue.isEmpty()) &#123;</span><br><span class="line">        <span class="keyword">int</span> cnt = queue.size();</span><br><span class="line">        ArrayList&lt;Integer&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; cnt; i++) &#123;</span><br><span class="line">            TreeNode node = queue.poll();</span><br><span class="line">            list.add(node.val);</span><br><span class="line">            <span class="keyword">if</span> (node.left != <span class="keyword">null</span>) queue.add(node.left);</span><br><span class="line">            <span class="keyword">if</span> (node.right != <span class="keyword">null</span>) queue.add(node.right);</span><br><span class="line">        &#125;</span><br><span class="line">        ret.add(list);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="32-3-��֮����˳���ӡ������"><a href="#32-3-��֮����˳���ӡ������" class="headerlink" title="32.3 ��֮����˳���ӡ������"></a>32.3 ��֮����˳���ӡ������</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> ArrayList&lt;ArrayList&lt;Integer&gt;&gt; Print(TreeNode pRoot) &#123;</span><br><span class="line">    ArrayList&lt;ArrayList&lt;Integer&gt;&gt; ret = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="keyword">if</span> (pRoot == <span class="keyword">null</span>) <span class="keyword">return</span> ret;</span><br><span class="line">    Queue&lt;TreeNode&gt; queue = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">    queue.add(pRoot);</span><br><span class="line">    <span class="keyword">boolean</span> reverse = <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">while</span> (!queue.isEmpty()) &#123;</span><br><span class="line">        <span class="keyword">int</span> cnt = queue.size();</span><br><span class="line">        ArrayList&lt;Integer&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; cnt; i++) &#123;</span><br><span class="line">            TreeNode node = queue.poll();</span><br><span class="line">            list.add(node.val);</span><br><span class="line">            <span class="keyword">if</span> (node.left != <span class="keyword">null</span>) queue.add(node.left);</span><br><span class="line">            <span class="keyword">if</span> (node.right != <span class="keyword">null</span>) queue.add(node.right);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (reverse) &#123;</span><br><span class="line">            Collections.reverse(list);</span><br><span class="line">            reverse = <span class="keyword">false</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            reverse = <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ret.add(list);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="33-�����������l����������"><a href="#33-�����������l����������" class="headerlink" title="33. �����������ĺ����������"></a>33. �����������ĺ����������</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">VerifySquenceOfBST</span><span class="params">(<span class="keyword">int</span>[] sequence)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (sequence.length == <span class="number">0</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">return</span> verify(sequence, <span class="number">0</span>, sequence.length - <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">verify</span><span class="params">(<span class="keyword">int</span>[] sequence, <span class="keyword">int</span> start, <span class="keyword">int</span> end)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (end - start &lt;= <span class="number">1</span>) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">int</span> rootVal = sequence[end];</span><br><span class="line">    <span class="keyword">int</span> cutIdx = start;</span><br><span class="line">    <span class="keyword">while</span> (cutIdx &lt; end) &#123;</span><br><span class="line">        <span class="keyword">if</span> (sequence[cutIdx] &gt; rootVal) <span class="keyword">break</span>;</span><br><span class="line">        cutIdx++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = cutIdx + <span class="number">1</span>; i &lt; end; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (sequence[i] &lt; rootVal) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> verify(sequence, start, cutIdx - <span class="number">1</span>) &amp;&amp; verify(sequence, cutIdx, end - <span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="34-�������к�Ϊĳһֵ��·��"><a href="#34-�������к�Ϊĳһֵ��·��" class="headerlink" title="34. �������к�Ϊĳһֵ��·��"></a>34. �������к�Ϊĳһֵ��·��</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> ArrayList&lt;ArrayList&lt;Integer&gt;&gt; ret = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> ArrayList&lt;ArrayList&lt;Integer&gt;&gt; FindPath(TreeNode root, <span class="keyword">int</span> target) &#123;</span><br><span class="line">    dfs(root, target, <span class="number">0</span>, <span class="keyword">new</span> ArrayList&lt;&gt;());</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(TreeNode node, <span class="keyword">int</span> target, <span class="keyword">int</span> curSum, ArrayList&lt;Integer&gt; path)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (node == <span class="keyword">null</span>) <span class="keyword">return</span>;</span><br><span class="line">    curSum += node.val;</span><br><span class="line">    path.add(node.val);</span><br><span class="line">    <span class="keyword">if</span> (curSum == target &amp;&amp; node.left == <span class="keyword">null</span> &amp;&amp; node.right == <span class="keyword">null</span>) &#123;</span><br><span class="line">        ret.add(<span class="keyword">new</span> ArrayList(path));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        dfs(node.left, target, curSum, path);</span><br><span class="line">        dfs(node.right, target, curSum, path);</span><br><span class="line">    &#125;</span><br><span class="line">    path.remove(path.size() - <span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="35-��������ĸ���"><a href="#35-��������ĸ���" class="headerlink" title="35. ��������ĸ���"></a>35. ��������ĸ���</h2><p><strong>��Ŀ����</strong></p><p>����һ����������ÿ���ڵ����нڵ�ֵ���Լ�����ָ�룬һ��ָ����һ���ڵ㣬��һ������ָ��ָ������һ���ڵ㣩�����ؽ��Ϊ���ƺ�������� head����ע�⣬���������벻Ҫ���ز����еĽڵ����ã�������������ֱ�ӷ��ؿգ�</p><p>��һ������ÿ���ڵ�ĺ�����븴�ƵĽڵ㡣</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/f8b12555-967b-423d-a84e-bc9eff104b8b.jpg" alt=""></p><p>�ڶ������Ը��ƽڵ�� random ���ӽ��и�ֵ��</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/7b877a2a-8fd1-40d8-a34c-c445827300b8.jpg" alt=""></p><p>����������֡�</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/b2b6253c-c701-4b30-aff4-bc3c713542a7.jpg" alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> RandomListNode <span class="title">Clone</span><span class="params">(RandomListNode pHead)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (pHead == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    <span class="comment">// �����½ڵ�</span></span><br><span class="line">    RandomListNode cur = pHead;</span><br><span class="line">    <span class="keyword">while</span> (cur != <span class="keyword">null</span>) &#123;</span><br><span class="line">        RandomListNode node = <span class="keyword">new</span> RandomListNode(cur.label);</span><br><span class="line">        node.next = cur.next;</span><br><span class="line">        cur.next = node;</span><br><span class="line">        cur = node.next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// ���� random ����</span></span><br><span class="line">    cur = pHead;</span><br><span class="line">    <span class="keyword">while</span> (cur != <span class="keyword">null</span>) &#123;</span><br><span class="line">        RandomListNode clone = cur.next;</span><br><span class="line">        <span class="keyword">if</span> (cur.random != <span class="keyword">null</span>) &#123;</span><br><span class="line">            clone.random = cur.random.next;</span><br><span class="line">        &#125;</span><br><span class="line">        cur = clone.next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// ���</span></span><br><span class="line">    RandomListNode pCloneHead = pHead.next;</span><br><span class="line">    cur = pHead;</span><br><span class="line">    <span class="keyword">while</span> (cur.next != <span class="keyword">null</span>) &#123;</span><br><span class="line">        RandomListNode t = cur.next;</span><br><span class="line">        cur.next = t.next;</span><br><span class="line">        cur = t;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> pCloneHead;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="36-������������˫������"><a href="#36-������������˫������" class="headerlink" title="36. ������������˫������"></a>36. ������������˫������</h2><p><strong>��Ŀ����</strong></p><p>����һ�ö��������������ö���������ת����һ�������˫������Ҫ���ܴ����κ��µĽ�㣬ֻ�ܵ������н��ָ���ָ��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> TreeNode pre = <span class="keyword">null</span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> TreeNode <span class="title">Convert</span><span class="params">(TreeNode pRootOfTree)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(pRootOfTree == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    inOrder(pRootOfTree);</span><br><span class="line">    <span class="keyword">while</span>(pRootOfTree.left != <span class="keyword">null</span>) pRootOfTree = pRootOfTree.left;</span><br><span class="line">    <span class="keyword">return</span> pRootOfTree;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">inOrder</span><span class="params">(TreeNode node)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(node == <span class="keyword">null</span>) <span class="keyword">return</span>;</span><br><span class="line">    inOrder(node.left);</span><br><span class="line">    node.left = pre;</span><br><span class="line">    <span class="keyword">if</span>(pre != <span class="keyword">null</span>) pre.right = node;</span><br><span class="line">    pre = node;</span><br><span class="line">    inOrder(node.right);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="37-���л�������"><a href="#37-���л�������" class="headerlink" title="37. ���л�������"></a>37. ���л�������</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> String serizeString = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line"><span class="function">String <span class="title">Serialize</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (root == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="string">"#"</span>;</span><br><span class="line">    <span class="keyword">return</span> root.val + <span class="string">" "</span> + Serialize(root.left) + <span class="string">" "</span></span><br><span class="line">        + Serialize(root.right);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">TreeNode <span class="title">Deserialize</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.serizeString = str;</span><br><span class="line">    <span class="keyword">return</span> Deserialize();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> TreeNode <span class="title">Deserialize</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.serizeString.length() == <span class="number">0</span>) <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">int</span> idx = <span class="keyword">this</span>.serizeString.indexOf(<span class="string">" "</span>);</span><br><span class="line">    <span class="keyword">if</span> (idx == -<span class="number">1</span>) <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    String sub = <span class="keyword">this</span>.serizeString.substring(<span class="number">0</span>, idx);</span><br><span class="line">    <span class="keyword">this</span>.serizeString = <span class="keyword">this</span>.serizeString.substring(idx + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span> (sub.equals(<span class="string">"#"</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> val = Integer.valueOf(sub);</span><br><span class="line">    TreeNode t = <span class="keyword">new</span> TreeNode(val);</span><br><span class="line">    t.left = Deserialize();</span><br><span class="line">    t.right = Deserialize();</span><br><span class="line">    <span class="keyword">return</span> t;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="38-�ַ���������"><a href="#38-�ַ���������" class="headerlink" title="38. �ַ���������"></a>38. �ַ���������</h2><p><strong>��Ŀ����</strong></p><p>����һ���ַ��� , ���ֵ����ӡ�����ַ������ַ����������С����������ַ��� abc, ���ӡ�����ַ� a, b, c �������г����������ַ��� abc, acb, bac, bca, cab �� cba��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> ArrayList&lt;String&gt; ret = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> ArrayList&lt;String&gt; <span class="title">Permutation</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (str.length() == <span class="number">0</span>) <span class="keyword">return</span> <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="keyword">char</span>[] chars = str.toCharArray();</span><br><span class="line">    Arrays.sort(chars);</span><br><span class="line">    backtracking(chars, <span class="keyword">new</span> <span class="keyword">boolean</span>[chars.length], <span class="string">""</span>);</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">backtracking</span><span class="params">(<span class="keyword">char</span>[] chars, <span class="keyword">boolean</span>[] used, String s)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (s.length() == chars.length) &#123;</span><br><span class="line">        ret.add(s);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; chars.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (used[i]) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span> (i != <span class="number">0</span> &amp;&amp; chars[i] == chars[i - <span class="number">1</span>] &amp;&amp; !used[i - <span class="number">1</span>]) <span class="keyword">continue</span>; <span class="comment">// ��֤���ظ�</span></span><br><span class="line">        used[i] = <span class="keyword">true</span>;</span><br><span class="line">        backtracking(chars, used, s + chars[i]);</span><br><span class="line">        used[i] = <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="������-�Z�ʱ��Ϳռ�Ч��"><a href="#������-�Z�ʱ��Ϳռ�Ч��" class="headerlink" title="������ �Ż�ʱ��Ϳռ�Ч��"></a>������ �Ż�ʱ��Ϳռ�Ч��</h1><h2 id="39-�����г��ִ�������һ�������"><a href="#39-�����г��ִ�������һ�������" class="headerlink" title="39. �����г��ִ�������һ�������"></a>39. �����г��ִ�������һ�������</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">MoreThanHalfNum_Solution</span><span class="params">(<span class="keyword">int</span>[] array)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="number">1</span>, num = array[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; array.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (array[i] == num) cnt++;</span><br><span class="line">        <span class="keyword">else</span> cnt--;</span><br><span class="line">        <span class="keyword">if</span> (cnt == <span class="number">0</span>) &#123;</span><br><span class="line">            num = array[i];</span><br><span class="line">            cnt = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; array.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (num == array[i]) cnt++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> cnt &gt; array.length / <span class="number">2</span> ? num : <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="40-��С��-K-����"><a href="#40-��С��-K-����" class="headerlink" title="40. ��С�� K ����"></a>40. ��С�� K ����</h2><p>������СΪ k ��С���ѡ�</p><p>ʱ�临�Ӷȣ�O(nlgk)<br>�ռ临�Ӷȣ�O(k)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> ArrayList&lt;Integer&gt; <span class="title">GetLeastNumbers_Solution</span><span class="params">(<span class="keyword">int</span>[] input, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (k &gt; input.length || k &lt;= <span class="number">0</span>) <span class="keyword">return</span> <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    PriorityQueue&lt;Integer&gt; pq = <span class="keyword">new</span> PriorityQueue&lt;&gt;((o1, o2) -&gt; o2 - o1);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> num : input) &#123;</span><br><span class="line">        pq.add(num);</span><br><span class="line">        <span class="keyword">if</span> (pq.size() &gt; k) &#123;</span><br><span class="line">            pq.poll();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ArrayList&lt;Integer&gt; ret = <span class="keyword">new</span> ArrayList&lt;&gt;(pq);</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>���ÿ���ѡ��</p><p>ʱ�临�Ӷȣ�O(n)<br>�ռ临�Ӷȣ�O(1)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> ArrayList&lt;Integer&gt; <span class="title">GetLeastNumbers_Solution</span><span class="params">(<span class="keyword">int</span>[] input, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (k &gt; input.length || k &lt;= <span class="number">0</span>) <span class="keyword">return</span> <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="keyword">int</span> kthSmallest = findKthSmallest(input, k - <span class="number">1</span>);</span><br><span class="line">    ArrayList&lt;Integer&gt; ret = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> num : input) &#123;</span><br><span class="line">        <span class="keyword">if</span>(num &lt;= kthSmallest &amp;&amp; ret.size() &lt; k) ret.add(num);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findKthSmallest</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> lo = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> hi = nums.length - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (lo &lt; hi) &#123;</span><br><span class="line">        <span class="keyword">int</span> j = partition(nums, lo, hi);</span><br><span class="line">        <span class="keyword">if</span> (j &lt; k) &#123;</span><br><span class="line">            lo = j + <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (j &gt; k) &#123;</span><br><span class="line">            hi = j - <span class="number">1</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> nums[k];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">partition</span><span class="params">(<span class="keyword">int</span>[] a, <span class="keyword">int</span> lo, <span class="keyword">int</span> hi)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = lo;</span><br><span class="line">    <span class="keyword">int</span> j = hi + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">        <span class="keyword">while</span> (i &lt; hi &amp;&amp; less(a[++i], a[lo])) ;</span><br><span class="line">        <span class="keyword">while</span> (j &gt; lo &amp;&amp; less(a[lo], a[--j])) ;</span><br><span class="line">        <span class="keyword">if</span> (i &gt;= j) &#123;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        exch(a, i, j);</span><br><span class="line">    &#125;</span><br><span class="line">    exch(a, lo, j);</span><br><span class="line">    <span class="keyword">return</span> j;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">exch</span><span class="params">(<span class="keyword">int</span>[] a, <span class="keyword">int</span> i, <span class="keyword">int</span> j)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> tmp = a[i];</span><br><span class="line">    a[i] = a[j];</span><br><span class="line">    a[j] = tmp;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">less</span><span class="params">(<span class="keyword">int</span> v, <span class="keyword">int</span> w)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> v &lt; w;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="41-1-�������е���λ��"><a href="#41-1-�������е���λ��" class="headerlink" title="41.1 �������е���λ��"></a>41.1 �������е���λ��</h2><p><strong>��Ŀ����</strong></p><p>��εõ�һ���������е���λ����������������ж�����������ֵ����ô��λ������������ֵ����֮��λ���м����ֵ��������������ж���ż������ֵ����ô��λ������������ֵ����֮���м���������ƽ��ֵ��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> PriorityQueue&lt;Integer&gt; maxHeap = <span class="keyword">new</span> PriorityQueue&lt;&gt;((o1, o2) -&gt; o2-o1); <span class="comment">// ʵ����߲���</span></span><br><span class="line"><span class="keyword">private</span> PriorityQueue&lt;Integer&gt; minHeep = <span class="keyword">new</span> PriorityQueue&lt;&gt;(); <span class="comment">// ʵ���ұ߲��֣��ұ߲�������Ԫ�ش�����߲���</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Insert</span><span class="params">(Integer num)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// ����Ҫ��֤�����Ѵ���ƽ��״̬</span></span><br><span class="line">    <span class="keyword">if</span>(cnt % <span class="number">2</span> == <span class="number">0</span>) &#123; </span><br><span class="line">        <span class="comment">// Ϊż��������²��뵽��С�ѣ��Ⱦ�������ɸѡ���������ܱ�֤�����е�Ԫ�ض�С����С���е�Ԫ��</span></span><br><span class="line">        maxHeap.add(num);</span><br><span class="line">        minHeep.add(maxHeap.poll());</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        minHeep.add(num);</span><br><span class="line">        maxHeap.add(minHeep.poll());</span><br><span class="line">    &#125;</span><br><span class="line">    cnt++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> Double <span class="title">GetMedian</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(cnt % <span class="number">2</span> == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> (maxHeap.peek() + minHeep.peek()) / <span class="number">2.0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">double</span>) minHeep.peek();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="14-2-�ַ����е�һ�����ظ����ַ�"><a href="#14-2-�ַ����е�һ�����ظ����ַ�" class="headerlink" title="14.2 �ַ����е�һ�����ظ����ַ�"></a>14.2 �ַ����е�һ�����ظ����ַ�</h2><p><strong>��Ŀ����</strong></p><p>��ʵ��һ�����������ҳ��ַ����е�һ��ֻ����һ�ε��ַ������磬�����ַ�����ֻ����ǰ�����ַ� “go” ʱ����һ��ֻ����һ�ε��ַ��� “g”�����Ӹ��ַ����ж���ǰ�����ַ���google” ʱ����һ��ֻ����һ�ε��ַ��� “l”��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Insert one char from stringstream</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span>[] cnts = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">256</span>];</span><br><span class="line"><span class="keyword">private</span> Queue&lt;Character&gt; queue = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Insert</span><span class="params">(<span class="keyword">char</span> ch)</span> </span>&#123;</span><br><span class="line">    cnts[ch]++;</span><br><span class="line">    queue.add(ch);</span><br><span class="line">    <span class="keyword">while</span> (!queue.isEmpty() &amp;&amp; cnts[queue.peek()] &gt; <span class="number">1</span>) &#123;</span><br><span class="line">        queue.poll();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//return the first appearence once char in current stringstream</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">char</span> <span class="title">FirstAppearingOnce</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (queue.isEmpty()) <span class="keyword">return</span> <span class="string">'#'</span>;</span><br><span class="line">    <span class="keyword">return</span> queue.peek();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="42-���������������"><a href="#42-���������������" class="headerlink" title="42. ���������������"></a>42. ���������������</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">FindGreatestSumOfSubArray</span><span class="params">(<span class="keyword">int</span>[] array)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(array.length == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> ret = Integer.MIN_VALUE;</span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> num : array) &#123;</span><br><span class="line">        <span class="keyword">if</span>(sum &lt;= <span class="number">0</span>) sum = num;</span><br><span class="line">        <span class="keyword">else</span> sum += num;</span><br><span class="line">        ret = Math.max(ret, sum);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="43-��-1-��-n-������-1-���ֵJ���"><a href="#43-��-1-��-n-������-1-���ֵJ���" class="headerlink" title="43. �� 1 �� n ������ 1 ���ֵĴ���"></a>43. �� 1 �� n ������ 1 ���ֵĴ���</h2><p>����ο���<a href="https://leetcode.com/problems/number-of-digit-one/discuss/64381/4+-lines-O(log-n" target="_blank" rel="noopener">Leetcode : 233. Number of Digit One</a>-C++JavaPython)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">NumberOf1Between1AndN_Solution</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> m = <span class="number">1</span>; m &lt;= n; m *= <span class="number">10</span>) &#123;</span><br><span class="line">        <span class="keyword">int</span> a = n / m, b = n % m;</span><br><span class="line">        cnt += (a + <span class="number">8</span>) / <span class="number">10</span> * m + (a % <span class="number">10</span> == <span class="number">1</span> ? b + <span class="number">1</span> : <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> cnt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="45-�������u���С����"><a href="#45-�������u���С����" class="headerlink" title="45. �������ų���С����"></a>45. �������ų���С����</h2><p><strong>��Ŀ����</strong></p><p>����һ�����������飬����������������ƴ�������ų�һ��������ӡ��ƴ�ӳ���������������С��һ���������������� {3��32��321}�����ӡ���������������ųɵ���С����Ϊ 321323��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">PrintMinNumber</span><span class="params">(<span class="keyword">int</span>[] numbers)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = numbers.length;</span><br><span class="line">    String[] nums = <span class="keyword">new</span> String[n];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) nums[i] = numbers[i] + <span class="string">""</span>;</span><br><span class="line">    Arrays.sort(nums, (s1, s2) -&gt; (s1 + s2).compareTo(s2 + s1));</span><br><span class="line">    String ret = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">for</span> (String str : nums) ret += str;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="49-����"><a href="#49-����" class="headerlink" title="49. ����"></a>49. ����</h2><p><strong>��Ŀ����</strong></p><p>��ֻ�������� 2��3 �� 5 ��������������Ugly Number�������� 6��8 ���ǳ������� 14 ���ǣ���Ϊ���������� 7�� ϰ�������ǰ� 1 �����ǵ�һ���������󰴴�С�����˳��ĵ� N ��������</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">GetUglyNumber_Solution</span><span class="params">(<span class="keyword">int</span> index)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (index &lt;= <span class="number">6</span>) <span class="keyword">return</span> index;</span><br><span class="line">    <span class="keyword">int</span> i2 = <span class="number">0</span>, i3 = <span class="number">0</span>, i5 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span>[] dp = <span class="keyword">new</span> <span class="keyword">int</span>[index];</span><br><span class="line">    dp[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (cnt &lt; index) &#123;</span><br><span class="line">        <span class="keyword">int</span> n2 = dp[i2] * <span class="number">2</span>, n3 = dp[i3] * <span class="number">3</span>, n5 = dp[i5] * <span class="number">5</span>;</span><br><span class="line">        <span class="keyword">int</span> tmp = Math.min(n2, Math.min(n3, n5));</span><br><span class="line">        dp[cnt++] = tmp;</span><br><span class="line">        <span class="keyword">if</span> (tmp == n2) i2++;</span><br><span class="line">        <span class="keyword">if</span> (tmp == n3) i3++;</span><br><span class="line">        <span class="keyword">if</span> (tmp == n5) i5++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> dp[index - <span class="number">1</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="50-��һ��ֻ����һ�ε��ַ�λ��"><a href="#50-��һ��ֻ����һ�ε��ַ�λ��" class="headerlink" title="50. ��һ��ֻ����һ�ε��ַ�λ��"></a>50. ��һ��ֻ����һ�ε��ַ�λ��</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">FirstNotRepeatingChar</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span>[] cnts = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">256</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; str.length(); i++) cnts[str.charAt(i)]++;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; str.length(); i++) <span class="keyword">if</span> (cnts[str.charAt(i)] == <span class="number">1</span>) <span class="keyword">return</span> i;</span><br><span class="line">    <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="51-�����е������"><a href="#51-�����е������" class="headerlink" title="51. �����е������"></a>51. �����е������</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">long</span> cnt = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">InversePairs</span><span class="params">(<span class="keyword">int</span>[] array)</span> </span>&#123;</span><br><span class="line">    mergeSortUp2Down(array, <span class="number">0</span>, array.length - <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> (<span class="keyword">int</span>) (cnt % <span class="number">1000000007</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">mergeSortUp2Down</span><span class="params">(<span class="keyword">int</span>[] a, <span class="keyword">int</span> start, <span class="keyword">int</span> end)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (end - start &lt; <span class="number">1</span>) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">int</span> mid = start + (end - start) / <span class="number">2</span>;</span><br><span class="line">    mergeSortUp2Down(a, start, mid);</span><br><span class="line">    mergeSortUp2Down(a, mid + <span class="number">1</span>, end);</span><br><span class="line">    merge(a, start, mid, end);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span>[] a, <span class="keyword">int</span> start, <span class="keyword">int</span> mid, <span class="keyword">int</span> end)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span>[] tmp = <span class="keyword">new</span> <span class="keyword">int</span>[end - start + <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">int</span> i = start, j = mid + <span class="number">1</span>, k = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt;= mid || j &lt;= end) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i &gt; mid) tmp[k] = a[j++];</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (j &gt; end) tmp[k] = a[i++];</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (a[i] &lt; a[j]) tmp[k] = a[i++];</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            tmp[k] = a[j++];</span><br><span class="line">            <span class="keyword">this</span>.cnt += mid - i + <span class="number">1</span>; <span class="comment">// a[i] &gt; a[j] ��˵�� a[i...mid] ������ a[j]</span></span><br><span class="line">        &#125;</span><br><span class="line">        k++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (k = <span class="number">0</span>; k &lt; tmp.length; k++) &#123;</span><br><span class="line">        a[start + k] = tmp[k];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="52-��������j�һ���������"><a href="#52-��������j�һ���������" class="headerlink" title="52. ��������ĵ�һ���������"></a>52. ��������ĵ�һ���������</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> ListNode <span class="title">FindFirstCommonNode</span><span class="params">(ListNode pHead1, ListNode pHead2)</span> </span>&#123;</span><br><span class="line">    ListNode l1 = pHead1, l2 = pHead2;</span><br><span class="line">    <span class="keyword">while</span> (l1 != l2) &#123;</span><br><span class="line">        <span class="keyword">if</span> (l1 == <span class="keyword">null</span>) l1 = pHead2;</span><br><span class="line">        <span class="keyword">else</span> l1 = l1.next;</span><br><span class="line">        <span class="keyword">if</span> (l2 == <span class="keyword">null</span>) l2 = pHead1;</span><br><span class="line">        <span class="keyword">else</span> l2 = l2.next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> l1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="������-�����еĸ�������"><a href="#������-�����еĸ�������" class="headerlink" title="������ �����еĸ�������"></a>������ �����еĸ�������</h1><h2 id="53-���������������г��ֵJ���"><a href="#53-���������������г��ֵJ���" class="headerlink" title="53 ���������������г��ֵĴ���"></a>53 ���������������г��ֵĴ���</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">GetNumberOfK</span><span class="params">(<span class="keyword">int</span>[] array, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> l = <span class="number">0</span>, h = array.length - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (l &lt;= h) &#123;</span><br><span class="line">        <span class="keyword">int</span> m = l + (h - l) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (array[m] &gt;= k) h = m - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> l = m + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (l &lt; array.length &amp;&amp; array[l++] == k) cnt++;</span><br><span class="line">    <span class="keyword">return</span> cnt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="54-�����������j�-k-�����"><a href="#54-�����������j�-k-�����" class="headerlink" title="54. �����������ĵ� k �����"></a>54. �����������ĵ� k �����</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">TreeNode ret;</span><br><span class="line"><span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function">TreeNode <span class="title">KthNode</span><span class="params">(TreeNode pRoot, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">    inorder(pRoot, k);</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">inorder</span><span class="params">(TreeNode root, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (root == <span class="keyword">null</span>) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span> (cnt &gt; k) <span class="keyword">return</span>;</span><br><span class="line">    inorder(root.left, k);</span><br><span class="line">    cnt++;</span><br><span class="line">    <span class="keyword">if</span> (cnt == k) ret = root;</span><br><span class="line">    inorder(root.right, k);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="55-�����������"><a href="#55-�����������" class="headerlink" title="55 �����������"></a>55 �����������</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">TreeDepth</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (root == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span> + Math.max(TreeDepth(root.left), TreeDepth(root.right));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="56-������ֻ����һ�ε�����"><a href="#56-������ֻ����һ�ε�����" class="headerlink" title="56. ������ֻ����һ�ε�����"></a>56. ������ֻ����һ�ε�����</h2><p><strong>��Ŀ����</strong></p><p>һ�����������������������֮�⣬���������ֶ����������Σ��ҳ�����������</p><p><strong>����˼·</strong></p><p>��������ȵ�Ԫ����λ����ʾ�ϱض�����һλ���ڲ�ͬ��</p><p>�����������Ԫ�����õ��Ľ��Ϊ�������ظ�������Ԫ�����Ľ����</p><p>diff &amp;= -diff �õ��� diff ���Ҳ಻Ϊ 0 ��λ��Ҳ���ǲ������ظ�������Ԫ����λ����ʾ�����Ҳ಻ͬ����һλ��������һλ�Ϳ��Խ�����Ԫ�����ֿ�����</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">FindNumsAppearOnce</span><span class="params">(<span class="keyword">int</span>[] array, <span class="keyword">int</span> num1[], <span class="keyword">int</span> num2[])</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> diff = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> num : array) diff ^= num;</span><br><span class="line">    <span class="comment">// �õ�����һλ</span></span><br><span class="line">    diff &amp;= -diff;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> num : array) &#123;</span><br><span class="line">        <span class="keyword">if</span> ((num &amp; diff) == <span class="number">0</span>) num1[<span class="number">0</span>] ^= num;</span><br><span class="line">        <span class="keyword">else</span> num2[<span class="number">0</span>] ^= num;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="57-1-��Ϊ-S-����������"><a href="#57-1-��Ϊ-S-����������" class="headerlink" title="57.1 ��Ϊ S ����������"></a>57.1 ��Ϊ S ����������</h2><p><strong>��Ŀ����</strong></p><p>����һ����������������һ������ S���������в������������ǵ����ǵĺ������� S������ж�����ֵĺ͵��� S������������ĳ˻���С�ġ�</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> ArrayList&lt;Integer&gt; <span class="title">FindNumbersWithSum</span><span class="params">(<span class="keyword">int</span>[] array, <span class="keyword">int</span> sum)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, j = array.length - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; j) &#123;</span><br><span class="line">        <span class="keyword">int</span> cur = array[i] + array[j];</span><br><span class="line">        <span class="keyword">if</span> (cur == sum) <span class="keyword">return</span> <span class="keyword">new</span> ArrayList&lt;Integer&gt;(Arrays.asList(array[i], array[j]));</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (cur &lt; sum) i++;</span><br><span class="line">        <span class="keyword">else</span> j--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> ArrayList&lt;Integer&gt;();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="57-2-��Ϊ-S-��������������"><a href="#57-2-��Ϊ-S-��������������" class="headerlink" title="57.2 ��Ϊ S ��������������"></a>57.2 ��Ϊ S ��������������</h2><p><strong>��Ŀ����</strong></p><p>��Ϊ 100 ������������ 18, 19, 20, 21, 22</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> ArrayList&lt;ArrayList&lt;Integer&gt;&gt; FindContinuousSequence(<span class="keyword">int</span> sum) &#123;</span><br><span class="line">    ArrayList&lt;ArrayList&lt;Integer&gt;&gt; ret = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="keyword">int</span> start = <span class="number">1</span>, end = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">int</span> mid = sum / <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">int</span> curSum = <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">while</span> (start &lt;= mid &amp;&amp; end &lt; sum) &#123;</span><br><span class="line">        <span class="keyword">if</span> (curSum &gt; sum) &#123;</span><br><span class="line">            curSum -= start;</span><br><span class="line">            start++;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (curSum &lt; sum) &#123;</span><br><span class="line">            end++;</span><br><span class="line">            curSum += end;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            ArrayList&lt;Integer&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = start; i &lt;= end; i++) &#123;</span><br><span class="line">                list.add(i);</span><br><span class="line">            &#125;</span><br><span class="line">            ret.add(list);</span><br><span class="line">            curSum -= start;</span><br><span class="line">            start++;</span><br><span class="line">            end++;</span><br><span class="line">            curSum += end;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="58-1-��ת����˳����"><a href="#58-1-��ת����˳����" class="headerlink" title="58.1 ��ת����˳����"></a>58.1 ��ת����˳����</h2><p><strong>��Ŀ����</strong></p><p>���룺”I am a student.”</p><p>�����”student. a am I”</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">ReverseSentence</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (str.length() == <span class="number">0</span>) <span class="keyword">return</span> str;</span><br><span class="line">    <span class="keyword">int</span> n = str.length();</span><br><span class="line">    <span class="keyword">char</span>[] chars = str.toCharArray();</span><br><span class="line">    <span class="keyword">int</span> start = <span class="number">0</span>, end = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (end &lt;= n) &#123;</span><br><span class="line">        <span class="keyword">if</span> (end == n || chars[end] == <span class="string">' '</span>) &#123;</span><br><span class="line">            reverse(chars, start, end - <span class="number">1</span>);</span><br><span class="line">            start = end + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        end++;</span><br><span class="line">    &#125;</span><br><span class="line">    reverse(chars, <span class="number">0</span>, n - <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> String(chars);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">reverse</span><span class="params">(<span class="keyword">char</span>[] c, <span class="keyword">int</span> start, <span class="keyword">int</span> end)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (start &lt; end) &#123;</span><br><span class="line">        <span class="keyword">char</span> t = c[start];</span><br><span class="line">        c[start] = c[end];</span><br><span class="line">        c[end] = t;</span><br><span class="line">        start++;</span><br><span class="line">        end--;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="58-2-����ת�ַ���"><a href="#58-2-����ת�ַ���" class="headerlink" title="58.2 ����ת�ַ���"></a>58.2 ����ת�ַ���</h2><p><strong>��Ŀ����</strong></p><p>����һ���������ַ����� S���������ѭ������ K λ���������������磬�ַ����� S=��abcXYZdef��, Ҫ�����ѭ������ 3 λ��Ľ��������XYZdefabc����</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">LeftRotateString</span><span class="params">(String str, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (str.length() == <span class="number">0</span>) <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">char</span>[] c = str.toCharArray();</span><br><span class="line">    reverse(c, <span class="number">0</span>, n - <span class="number">1</span>);</span><br><span class="line">    reverse(c, n, c.length - <span class="number">1</span>);</span><br><span class="line">    reverse(c, <span class="number">0</span>, c.length - <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> String(c);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">reverse</span><span class="params">(<span class="keyword">char</span>[] c, <span class="keyword">int</span> i, <span class="keyword">int</span> j)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; j) &#123;</span><br><span class="line">        <span class="keyword">char</span> t = c[i];</span><br><span class="line">        c[i] = c[j];</span><br><span class="line">        c[j] = t;</span><br><span class="line">        i++;</span><br><span class="line">        j--;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="59-�������ڵ����ֵ"><a href="#59-�������ڵ����ֵ" class="headerlink" title="59. �������ڵ����ֵ"></a>59. �������ڵ����ֵ</h2><p><strong>��Ŀ����</strong></p><p>����һ������ͻ������ڵĴ�С���ҳ����л�����������ֵ�����ֵ�����磬����������� {2, 3, 4, 2, 6, 2, 5, 1} ���������ڵĴ�С 3����ôһ������ 6 ���������ڣ����ǵ����ֵ�ֱ�Ϊ {4, 4, 6, 6, 6, 5}��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> ArrayList&lt;Integer&gt; <span class="title">maxInWindows</span><span class="params">(<span class="keyword">int</span>[] num, <span class="keyword">int</span> size)</span> </span>&#123;</span><br><span class="line">    ArrayList&lt;Integer&gt; ret = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="keyword">if</span> (size &gt; num.length || size &lt; <span class="number">1</span>) <span class="keyword">return</span> ret;</span><br><span class="line">    PriorityQueue&lt;Integer&gt; heap = <span class="keyword">new</span> PriorityQueue&lt;Integer&gt;((o1, o2) -&gt; o2 - o1);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; size; i++) heap.add(num[i]);</span><br><span class="line">    ret.add(heap.peek());</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i + size - <span class="number">1</span> &lt; num.length; i++) &#123;</span><br><span class="line">        heap.remove(num[i - <span class="number">1</span>]);</span><br><span class="line">        heap.add(num[i + size - <span class="number">1</span>]);</span><br><span class="line">        ret.add(heap.peek());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="61-�˿���˳��"><a href="#61-�˿���˳��" class="headerlink" title="61. �˿���˳��"></a>61. �˿���˳��</h2><p><strong>��Ŀ����</strong></p><p>�����ƣ����д�С��Ϊ��ӣ������СΪ 0���ж��Ƿ������˳�ӡ�</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isContinuous</span><span class="params">(<span class="keyword">int</span>[] numbers)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (numbers.length &lt; <span class="number">5</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    Arrays.sort(numbers);</span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> num : numbers) <span class="keyword">if</span> (num == <span class="number">0</span>) cnt++;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = cnt; i &lt; numbers.length - <span class="number">1</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (numbers[i + <span class="number">1</span>] == numbers[i]) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">int</span> cut = numbers[i + <span class="number">1</span>] - numbers[i] - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (cut &gt; cnt) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        cnt -= cut;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="62-ԲA�����ʣ�µ���"><a href="#62-ԲA�����ʣ�µ���" class="headerlink" title="62. ԲȦ�����ʣ�µ���"></a>62. ԲȦ�����ʣ�µ���</h2><p><strong>��Ŀ����</strong></p><p>��С������Χ��һ����Ȧ��Ȼ�� , �����ָ��һ���� m, �ñ��Ϊ 0 ��С���ѿ�ʼ������ÿ�κ��� m-1 ���Ǹ�С����Ҫ���г��׸� , Ȼ���������Ʒ�����������ѡ���� , ���Ҳ��ٻص�Ȧ�� , ��������һ��С���ѿ�ʼ , ���� 0…m-1 ���� …. ������ȥ …. ֱ��ʣ�����һ��С���� , ���Բ��ñ��ݡ�</p><p><strong>����˼·</strong></p><p>Լɪ��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">LastRemaining_Solution</span><span class="params">(<span class="keyword">int</span> n, <span class="keyword">int</span> m)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">0</span>) <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">1</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> (LastRemaining_Solution(n - <span class="number">1</span>, m) + m) % n;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="63-��Ʊ���������"><a href="#63-��Ʊ���������" class="headerlink" title="63. ��Ʊ���������"></a>63. ��Ʊ���������</h2><p><strong>��Ŀ����</strong></p><p>������һ�������һ����������������ǰ����������档</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(<span class="keyword">int</span>[] prices)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = prices.length;</span><br><span class="line">    <span class="keyword">if</span>(n == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> soFarMin = prices[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">int</span> max = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(soFarMin &gt; prices[i]) soFarMin = prices[i];</span><br><span class="line">        <span class="keyword">else</span> max = Math.max(max, prices[i] - soFarMin);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> max;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="64-��-1-2-3-…-n"><a href="#64-��-1-2-3-…-n" class="headerlink" title="64. �� 1+2+3+…+n"></a>64. �� 1+2+3+…+n</h2><p><strong>��Ŀ����</strong></p><p>�� 1+2+3+…+n��Ҫ����ʹ�ó˳�����for��while��if��else��switch��case �ȹؼ��ּ������ж���䣨A?B:C��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">Sum_Solution</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> n + Sum_Solution(n - <span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="65-���uӼ��˳����ӷ�"><a href="#65-���uӼ��˳����ӷ�" class="headerlink" title="65. ���üӼ��˳����ӷ�"></a>65. ���üӼ��˳����ӷ�</h2><p>a ^ b ��ʾû�п��ǽ�λ������������ĺͣ�(a &amp; b) &lt;&lt; 1 ���ǽ�λ���ݹ����ֹ��ԭ���� (a &amp; b) &lt;&lt; 1 ���ұ߻��һ�� 0����ô�����ݹ飬��λ���ұߵ� 0 ���������࣬����λ���Ϊ 0���ݹ���ֹ��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">Add</span><span class="params">(<span class="keyword">int</span> num1, <span class="keyword">int</span> num2)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(num2 == <span class="number">0</span>) <span class="keyword">return</span> num1;</span><br><span class="line">    <span class="keyword">return</span> Add(num1 ^ num2, (num1 &amp; num2) &lt;&lt; <span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="66-�����˻�����"><a href="#66-�����˻�����" class="headerlink" title="66. �����˻�����"></a>66. �����˻�����</h2><p><strong>��Ŀ����</strong></p><p>����һ������ A[0, 1,…, n-1], �빹��һ������ B[0, 1,…, n-1], ���� B �е�Ԫ�� B[i]=A[0]*A[1]*…*A[i-1]*A[i+1]*…*A[n-1]������ʹ�ó�����</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">int</span>[] multiply(<span class="keyword">int</span>[] A) &#123;</span><br><span class="line">    <span class="keyword">int</span> n = A.length;</span><br><span class="line">    <span class="keyword">int</span>[][] dp = <span class="keyword">new</span> <span class="keyword">int</span>[n][n];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        dp[i][i] = A[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; n; j++) &#123;</span><br><span class="line">            dp[i][j] = dp[i][j - <span class="number">1</span>] * A[j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span>[] B = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">    Arrays.fill(B, <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i != <span class="number">0</span>) B[i] *= dp[<span class="number">0</span>][i - <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span> (i != n - <span class="number">1</span>) B[i] *= dp[i + <span class="number">1</span>][n - <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> B;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="������-�������԰���"><a href="#������-�������԰���" class="headerlink" title="������ �������԰���"></a>������ �������԰���</h1><h2 id="67-���ַ���ת��������"><a href="#67-���ַ���ת��������" class="headerlink" title="67. ���ַ���ת��������"></a>67. ���ַ���ת��������</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">StrToInt</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (str.length() == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">char</span>[] chars = str.toCharArray();</span><br><span class="line">    <span class="keyword">boolean</span> isNegative = chars[<span class="number">0</span>] == <span class="string">'-'</span>;</span><br><span class="line">    <span class="keyword">int</span> ret = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; chars.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i == <span class="number">0</span> &amp;&amp; (chars[i] == <span class="string">'+'</span> || chars[i] == <span class="string">'-'</span>)) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span> (chars[i] &lt; <span class="string">'0'</span> || chars[i] &gt; <span class="string">'9'</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        ret = ret * <span class="number">10</span> + (chars[i] - <span class="string">'0'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> isNegative ? -ret : ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="68-���������ڵ����͹�������"><a href="#68-���������ڵ����͹�������" class="headerlink" title="68. ���������ڵ����͹�������"></a>68. ���������ڵ����͹�������</h2><p>���Ƕ������������͹����������⣺</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> TreeNode <span class="title">lowestCommonAncestor</span><span class="params">(TreeNode root, TreeNode p, TreeNode q)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(root.val &gt; p.val &amp;&amp; root.val &gt; q.val) <span class="keyword">return</span> lowestCommonAncestor(root.left, p, q);</span><br><span class="line">    <span class="keyword">if</span>(root.val &lt; p.val &amp;&amp; root.val &lt; q.val) <span class="keyword">return</span> lowestCommonAncestor(root.right, p, q);</span><br><span class="line">    <span class="keyword">return</span> root;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- GFM-TOC --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#�ڶ���-������Ҫ�Ļ���֪ʶ&quot;&gt;�ڶ��� ������Ҫ�Ļ���֪ʶ&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#2-ʵ��-singleton&quot;&gt;2. ʵ�� Singleton&lt;/a&gt;&lt;/
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2018/03/29/programming-basics-master/notes/SQL%20%E8%AF%AD%E6%B3%95/"/>
    <id>http://yoursite.com/2018/03/29/programming-basics-master/notes/SQL 语法/</id>
    <published>2018-03-29T14:37:48.180Z</published>
    <updated>2018-02-26T04:13:28.000Z</updated>
    
    <content type="html"><![CDATA[<!-- GFM-TOC --><ul><li><a href="#����">����</a></li><li><a href="#��ѯ">��ѯ</a></li><li><a href="#����">����</a></li><li><a href="#����">����</a></li><li><a href="#ͨ���">ͨ���</a></li><li><a href="#�����ֶ�">�����ֶ�</a></li><li><a href="#����">����</a><ul><li><a href="#�ı�����">�ı�����</a></li><li><a href="#���ں�ʱ�䴦��">���ں�ʱ�䴦��</a></li><li><a href="#��ֵ����">��ֵ����</a></li><li><a href="#����">����</a></li></ul></li><li><a href="#����">����</a></li><li><a href="#�Ӳ�ѯ">�Ӳ�ѯ</a></li><li><a href="#����">����</a><ul><li><a href="#������">������</a></li><li><a href="#������">������</a></li><li><a href="#��Ȼ����">��Ȼ����</a></li><li><a href="#������">������</a></li></ul></li><li><a href="#��ϲ�ѯ">��ϲ�ѯ</a></li><li><a href="#����">����</a></li><li><a href="#����">����</a></li><li><a href="#ɾ��">ɾ��</a></li><li><a href="#������">������</a></li><li><a href="#�޸ı�">�޸ı�</a></li><li><a href="#��ͼ">��ͼ</a></li><li><a href="#�洢����">�洢����</a></li><li><a href="#�α�">�α�</a></li><li><a href="#������">������</a></li><li><a href="#������">������</a></li><li><a href="#�ַ���">�ַ���</a></li><li><a href="#Ȩ�޹���">Ȩ�޹���</a><!-- GFM-TOC --></li></ul><h1 id="����"><a href="#����" class="headerlink" title="����"></a>����</h1><p>ģʽ��������������δ洢���洢ʲô���������Լ�������ηֽ����Ϣ�����ݿ�ͱ���ģʽ��</p><p>������ֵ�������޸ģ�Ҳ�������ã�����ʹ���Ѿ�ɾ��������ֵ�����������е���������</p><p>SQL��Structured Query Language)����׼ SQL �� ANSI ��׼ίԱ������Ӷ���Ϊ ANSI SQL������ DBMS �����Լ���ʵ�֣��� PL/SQL��Transact-SQL �ȡ�</p><h1 id="��ѯ"><a href="#��ѯ" class="headerlink" title="��ѯ"></a>��ѯ</h1><p>SQL ��䲻���ִ�Сд���������ݿ������������ֵ�Ƿ����������ھ���� DBMS �Լ����á�</p><p><strong>DISTINCT</strong></p><p>��ֵֻͬ�����һ�Ρ��������������У�Ҳ����˵�����е�ֵ����ͬ������ͬ��</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> col1, col2</span><br><span class="line"><span class="keyword">FROM</span> mytable;</span><br></pre></td></tr></table></figure><p><strong>LIMIT</strong></p><p>���Ʒ��ص�������������������������һ������Ϊ��ʼ�У��� 0 ��ʼ���ڶ�������Ϊ���ص���������</p><p>����ǰ 5 �е� SQL��</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> mytable</span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">5</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> mytable</span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">0</span>, <span class="number">5</span>;</span><br></pre></td></tr></table></figure><p>���ص� 3 ~ 5 �У�</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> mytable</span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">2</span>, <span class="number">3</span>;</span><br></pre></td></tr></table></figure><p><strong>ע��</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># ע��</span><br><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> mytable <span class="comment">-- ע��</span></span><br><span class="line"><span class="comment">/* ע��1</span></span><br><span class="line"><span class="comment">   ע��2 */</span></span><br></pre></td></tr></table></figure><h1 id="����-1"><a href="#����-1" class="headerlink" title="����"></a>����</h1><p><strong>ASC</strong>������Ĭ�ϣ�<br><strong>DESC</strong>������</p><p>���԰�����н�������</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> mytable</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> col1 <span class="keyword">DESC</span>, col2 <span class="keyword">ASC</span>;</span><br></pre></td></tr></table></figure><h1 id="����-2"><a href="#����-2" class="headerlink" title="����"></a>����</h1><p>��Ӧ�ò�Ҳ���Թ������ݣ����ǲ��ڷ������˽��й��˵����ݷǳ��󣬵���ͨ�����紫���˺ܶ��������ݣ��Ӷ��˷����������</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> mytable</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">col</span> <span class="keyword">IS</span> <span class="literal">NULL</span>;</span><br></pre></td></tr></table></figure><p>�±���ʾ�� WHERE �Ӿ���õĲ�����</p><table><thead><tr><th>������</th><th>˵��</th></tr></thead><tbody><tr><td>= &lt;  &gt;</td><td>���� С�� ����</td></tr><tr><td>&lt;&gt; !=</td><td>������</td></tr><tr><td>&lt;= !&gt;</td><td>С�ڵ���</td></tr><tr><td>&gt;= !&lt;</td><td>���ڵ���</td></tr><tr><td>BETWEEN</td><td>������ֵ֮��</td></tr><tr><td>IS NULL</td><td>ΪNULLֵ</td></tr></tbody></table><p>Ӧ��ע�⵽��NULL �� 0 �����ַ�������ͬ��</p><p><strong>AND OR</strong> �������Ӷ���������������ȴ��� AND����˵�һ�����˱��ʽ�漰����� AND �� OR ʱ��Ӧ��ʹ�� () ���������ȼ���</p><p><strong>IN</strong> ����������ƥ��һ��ֵ�����Ҳ���Խ�һ�� SELECT �Ӿ䣬�Ӷ�ƥ���Ӳ�ѯ�õ���һ��ֵ��</p><p><strong>NOT</strong> ���������ڷ�һ��������</p><h1 id="ͨ���"><a href="#ͨ���" class="headerlink" title="ͨ���"></a>ͨ���</h1><p>ͨ���Ҳ�����ڹ�������У�ֻ�������ı��ֶΡ�</p><ul><li><p><strong>%</strong> ƥ�� &gt;=0 �������ַ��������� *��</p></li><li><p><strong>_</strong> ƥ�� ==1 �������ַ��������� .��</p></li><li><p><strong>[ ]</strong> ����ƥ�伯���ڵ��ַ��������ַ� ^ ���Զ�����з�</p></li></ul><p>ʹ�� Like ������ͨ���ƥ�䡣</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> mytable</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">col</span> <span class="keyword">LIKE</span> <span class="string">'[^AB]%'</span> <span class="comment">-- ����AB��ͷ�������ı�</span></span><br></pre></td></tr></table></figure><p>��Ҫ����ͨ�����ͨ���λ�ڿ�ͷ��ƥ���ǳ�����</p><h1 id="�����ֶ�"><a href="#�����ֶ�" class="headerlink" title="�����ֶ�"></a>�����ֶ�</h1><p>�����ݿ��������������ݵ�ת���͸�ʽ���Ĺ��������ȿͻ����Ͽ�ö࣬����ת���͸�ʽ��������������ٵĻ����Լ�������ͨ������</p><p>�����ֶ�ͨ����Ҫʹ�� <strong>AS</strong> ��ȡ���������������ʱ���ֶ���Ϊ������ʽ��</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> col1*col2 <span class="keyword">AS</span> <span class="keyword">alias</span></span><br><span class="line"><span class="keyword">FROM</span> mytable</span><br></pre></td></tr></table></figure><p><strong>Concat()</strong> �������������ֶΡ�������ݿ��ʹ�ÿո��һ��ֵ���Ϊ�п�������ӵĽ�������һЩ����Ҫ�Ŀո�ʹ�� <strong>TRIM()</strong> ����ȥ����β�ո�</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">Concat</span>(<span class="keyword">TRIM</span>(col1), <span class="string">' ('</span>, <span class="keyword">TRIM</span>(col2), <span class="string">')'</span>)</span><br><span class="line"><span class="keyword">FROM</span> mytable</span><br></pre></td></tr></table></figure><h1 id="����-3"><a href="#����-3" class="headerlink" title="����"></a>����</h1><p>���� DBMS �ĺ������ǲ���ͬ�ģ���˲�����ֲ��</p><h2 id="�i�����"><a href="#�i�����" class="headerlink" title="�ı�����"></a>�ı�����</h2><table><thead><tr><th>����</th><th>˵��</th></tr></thead><tbody><tr><td>LEFT() RIGHT()</td><td>��߻����ұߵ��ַ�</td></tr><tr><td>LOWER() UPPER()</td><td>ת��ΪСд���ߴ�д</td></tr><tr><td>LTRIM() RTIM()</td><td>ȥ����߻����ұߵĿո�</td></tr><tr><td>LENGTH()</td><td>����</td></tr><tr><td>SUNDEX()</td><td>ת��Ϊ����ֵ</td></tr></tbody></table><p>���У�<strong>SOUNDEX()</strong> �ǽ�һ���ַ���ת��Ϊ�����������ʾ����ĸ����ģʽ���㷨�����Ǹ��ݷ����������ĸ�Ƚϡ�</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> mytable</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">SOUNDEX</span>(col1) = <span class="keyword">SOUNDEX</span>(<span class="string">'apple'</span>)</span><br></pre></td></tr></table></figure><h2 id="���ں�ʱ�䴦��"><a href="#���ں�ʱ�䴦��" class="headerlink" title="���ں�ʱ�䴦��"></a>���ں�ʱ�䴦��</h2><p>���ڸ�ʽ��YYYY-MM-DD</p><p>ʱ���ʽ��HH:MM:SS</p><table><thead><tr><th>�� ��</th><th>˵ ��</th></tr></thead><tbody><tr><td>AddDate()</td><td>����һ�����ڣ��졢�ܵȣ�</td></tr><tr><td>AddTime()</td><td>����һ��ʱ�䣨ʱ���ֵȣ�</td></tr><tr><td>CurDate()</td><td>���ص�ǰ����</td></tr><tr><td>CurTime()</td><td>���ص�ǰʱ��</td></tr><tr><td>Date()</td><td>��������ʱ������ڲ���</td></tr><tr><td>DateDiff()</td><td>������������֮��</td></tr><tr><td>Date_Add()</td><td>�߶������������㺯��</td></tr><tr><td>Date_Format()</td><td>����һ����ʽ�������ڻ�ʱ�䴮</td></tr><tr><td>Day()</td><td>����һ�����ڵ���������</td></tr><tr><td>DayOfWeek()</td><td>����һ�����ڣ����ض�Ӧ�����ڼ�</td></tr><tr><td>Hour()</td><td>����һ��ʱ���Сʱ����</td></tr><tr><td>Minute()</td><td>����һ��ʱ��ķ��Ӳ���</td></tr><tr><td>Month()</td><td>����һ�����ڵ��·ݲ���</td></tr><tr><td>Now()</td><td>���ص�ǰ���ں�ʱ��</td></tr><tr><td>Second()</td><td>����һ��ʱ����벿��</td></tr><tr><td>Time()</td><td>����һ������ʱ���ʱ�䲿��</td></tr><tr><td>Year()</td><td>����һ�����ڵ���ݲ���</td></tr></tbody></table><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; SELECT NOW();</span><br><span class="line">        -&gt; '2017-06-28 14:01:52'</span><br></pre></td></tr></table></figure><h2 id="��ֵ����"><a href="#��ֵ����" class="headerlink" title="��ֵ����"></a>��ֵ����</h2><table><thead><tr><th>����</th><th>˵��</th></tr></thead><tbody><tr><td>SIN()</td><td>����</td></tr><tr><td>COS()</td><td>����</td></tr><tr><td>TAN()</td><td>����</td></tr><tr><td>ABS()</td><td>����ֵ</td></tr><tr><td>SQRT()</td><td>ƽ����</td></tr><tr><td>MOD()</td><td>����</td></tr><tr><td>EXP()</td><td>ָ��</td></tr><tr><td>PI()</td><td>Բ����</td></tr><tr><td>RAND()</td><td>�����</td></tr></tbody></table><h2 id="����-4"><a href="#����-4" class="headerlink" title="����"></a>����</h2><table><thead><tr><th>�� ��</th><th>˵ ��</th></tr></thead><tbody><tr><td>AVG()</td><td>����ĳ�е�ƽ��ֵ</td></tr><tr><td>COUNT()</td><td>����ĳ�е�����</td></tr><tr><td>MAX()</td><td>����ĳ�е����ֵ</td></tr><tr><td>MIN()</td><td>����ĳ�е���Сֵ</td></tr><tr><td>SUM()</td><td>����ĳ��ֵ֮��</td></tr></tbody></table><p>AVG() ����� NULL �С�</p><p>DISTINCT �ؼ��ֻ�ֻ���ܲ�ͬ��ֵ��</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">AVG</span>(<span class="keyword">DISTINCT</span> col1) <span class="keyword">AS</span> avg_col</span><br><span class="line"><span class="keyword">FROM</span> mytable</span><br></pre></td></tr></table></figure><h1 id="����-5"><a href="#����-5" class="headerlink" title="����"></a>����</h1><p>������ǰ���ͬ�����ݷ���ͬһ���С�</p><p>���Զ�ÿ������ʹ�û��ܺ������д���������ÿ������ƽ��ֵ�ȡ�</p><p>�� col ���򲢷������ݣ�</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">col</span>, <span class="keyword">COUNT</span>(*) <span class="keyword">AS</span> <span class="keyword">num</span></span><br><span class="line"><span class="keyword">FROM</span> mytable</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> <span class="keyword">col</span>;</span><br></pre></td></tr></table></figure><p>WHERE �����У�HAVING ���˷��飬�й���Ӧ�����������ˣ�</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">col</span>, <span class="keyword">COUNT</span>(*) <span class="keyword">AS</span> <span class="keyword">num</span></span><br><span class="line"><span class="keyword">FROM</span> mytable</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">col</span> &gt; <span class="number">2</span></span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> <span class="keyword">col</span></span><br><span class="line"><span class="keyword">HAVING</span> <span class="keyword">COUNT</span>(*) &gt;= <span class="number">2</span>;</span><br></pre></td></tr></table></figure><p>GROUP BY ��������Ϊ�����ֶΣ��� ORDER BY Ҳ�����Ծۼ��ֶ�����������</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">col</span>, <span class="keyword">COUNT</span>(*) <span class="keyword">AS</span> <span class="keyword">num</span></span><br><span class="line"><span class="keyword">FROM</span> mytable</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> <span class="keyword">col</span></span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="keyword">num</span>;</span><br></pre></td></tr></table></figure><p>����涨��</p><ol><li>GROUP BY �Ӿ������ WHERE �Ӿ�֮��ORDER BY �Ӿ�֮ǰ��</li><li>���˻��ܼ������֮�⣬SELECT ����е�ÿһ�ж������� GROUP BY �Ӿ��и�����</li><li>NULL ���лᵥ����Ϊһ�飻</li><li>����� SQL ʵ�ֲ�֧�� GROUP BY �о��пɱ䳤�ȵ��������͡�</li></ol><h1 id="�Ӳ�ѯ"><a href="#�Ӳ�ѯ" class="headerlink" title="�Ӳ�ѯ"></a>�Ӳ�ѯ</h1><p>�Ӳ�ѯ��ֻ�ܷ���һ���С�</p><p>���Խ��Ӳ�ѯ�Ľ����Ϊ WHRER ���Ĺ���������</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">SELECT *</span><br><span class="line">FROM mytable1</span><br><span class="line">WHERE col1 IN (SELECT col2</span><br><span class="line">                 FROM mytable2);</span><br></pre></td></tr></table></figure><p>����������Լ������ͻ��Ķ����������Ӳ�ѯ����Լ�������ÿ���ͻ�ִ��һ�Σ�</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> cust_name, (<span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(*)</span><br><span class="line">                   <span class="keyword">FROM</span> Orders</span><br><span class="line">                   <span class="keyword">WHERE</span> Orders.cust_id = Customers.cust_id)</span><br><span class="line">                   <span class="keyword">AS</span> orders_num</span><br><span class="line"><span class="keyword">FROM</span> Customers</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> cust_name;</span><br></pre></td></tr></table></figure><h1 id="����-6"><a href="#����-6" class="headerlink" title="����"></a>����</h1><p>�����������Ӷ����ʹ�� JOIN �ؼ��֣������������ʹ�� ON��</p><p>���ӿ����滻�Ӳ�ѯ�����ұ��Ӳ�ѯ��Ч��һ�����졣</p><p>������ AS �������������ֶκͱ���ȡ������������ȡ������Ϊ�˼� SQL ����Լ�������ͬ��</p><h2 id="������"><a href="#������" class="headerlink" title="������"></a>������</h2><p>�������ֳƵ�ֵ���ӣ�ʹ�� INNER JOIN �ؼ��֡�</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select a, b, c</span><br><span class="line">from A inner join B</span><br><span class="line">on A.key = B.key</span><br></pre></td></tr></table></figure><p>���Բ���ȷʹ�� INNER JOIN����ʹ����ͨ��ѯ���� WHERE �н���������Ҫ���ӵ����õ�ֵ��������������</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select a, b, c</span><br><span class="line">from A, B</span><br><span class="line">where A.key = B.key</span><br></pre></td></tr></table></figure><p>��û��������������·��صѿ�������</p><h2 id="������-1"><a href="#������-1" class="headerlink" title="������"></a>������</h2><p>�����ӿ��Կ��������ӵ�һ�֣�ֻ�����ӵı���������ѡ�</p><p>һ��Ա��������Ա��������Ա�������ţ�Ҫ�ҳ��� Jim ����ͬһ���ŵ�����Ա��������</p><p><strong>�Ӳ�ѯ�汾</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">select name</span><br><span class="line">from employee</span><br><span class="line">where department = (</span><br><span class="line">      select department</span><br><span class="line">      from employee</span><br><span class="line">      where name = &quot;Jim&quot;);</span><br></pre></td></tr></table></figure><p><strong>�����Ӱ汾</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">select name</span><br><span class="line">from employee as e1, employee as e2</span><br><span class="line">where e1.department = e2.department</span><br><span class="line">      and e1.name = &quot;Jim&quot;;</span><br></pre></td></tr></table></figure><p>����һ����Ӳ�ѯ��Ч�ʸߡ�</p><h2 id="��C����"><a href="#��C����" class="headerlink" title="��Ȼ����"></a>��Ȼ����</h2><p>��Ȼ�����ǰ�ͬ����ͨ����ֵ�������������ģ�ͬ���п����ж����</p><p>�����Ӻ���Ȼ���ӵ������������ṩ���ӵ��У�����Ȼ�����Զ���������ͬ���У�������������Ȼ���ӡ�</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select *</span><br><span class="line">from employee natural join department;</span><br></pre></td></tr></table></figure><h2 id="������-2"><a href="#������-2" class="headerlink" title="������"></a>������</h2><p>�����ӱ�����û�й�������Щ�С���Ϊ�������ӣ����������Լ�ȫ�����ӣ��������Ӿ��Ǳ������������С�</p><p>�������й˿͵Ķ�����Ϣ��������û�ж�����Ϣ�Ĺ˿͡�</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select Customers.cust_id, Orders.order_num</span><br><span class="line">   from Customers left outer join Orders</span><br><span class="line">   on Customers.cust_id = Orders.curt_id</span><br></pre></td></tr></table></figure><p>�����Ҫͳ�ƹ˿͵Ķ�������ʹ�þۼ�������</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">select Customers.cust_id,</span><br><span class="line">       COUNT(Orders.order_num) as num_ord</span><br><span class="line">from Customers left outer join Orders</span><br><span class="line">on Customers.cust_id = Orders.curt_id</span><br><span class="line">group by Customers.cust_id</span><br></pre></td></tr></table></figure><h1 id="��ϲ�ѯ"><a href="#��ϲ�ѯ" class="headerlink" title="��ϲ�ѯ"></a>��ϲ�ѯ</h1><p>ʹ�� <strong>UNION</strong> ������������ѯ��ÿ����ѯ���������ͬ���С����ʽ���߾ۼ�������</p><p>Ĭ�ϻ�ȥ����ͬ�У������Ҫ������ͬ�У�ʹ�� UNION ALL ��</p><p>ֻ�ܰ���һ�� ORDER BY �Ӿ䣬���ұ���λ���������</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">col</span></span><br><span class="line"><span class="keyword">FROM</span> mytable</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">col</span> = <span class="number">1</span></span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">col</span></span><br><span class="line"><span class="keyword">FROM</span> mytable</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">col</span> =<span class="number">2</span>;</span><br></pre></td></tr></table></figure><h1 id="����-7"><a href="#����-7" class="headerlink" title="����"></a>����</h1><p><strong>��ͨ����</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> mytable(col1, col2)</span><br><span class="line"><span class="keyword">VALUES</span>(val1, val2);</span><br></pre></td></tr></table></figure><p><strong>�����������������</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> mytable1(col1, col2)</span><br><span class="line"><span class="keyword">SELECT</span> col1, col2</span><br><span class="line"><span class="keyword">FROM</span> mytable2;</span><br></pre></td></tr></table></figure><p><strong>��һ��������ݸ��Ƶ�һ���±�</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> newtable <span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> mytable;</span><br></pre></td></tr></table></figure><h1 id="����-8"><a href="#����-8" class="headerlink" title="����"></a>����</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> mytable</span><br><span class="line"><span class="keyword">SET</span> <span class="keyword">col</span> = val</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">id</span> = <span class="number">1</span>;</span><br></pre></td></tr></table></figure><h1 id="ɾ��"><a href="#ɾ��" class="headerlink" title="ɾ��"></a>ɾ��</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> mytable</span><br><span class="line"><span class="keyword">WHERE</span> <span class="keyword">id</span> = <span class="number">1</span>;</span><br></pre></td></tr></table></figure><p><strong>TRUNCATE TABLE</strong> ������ձ�Ҳ����ɾ�������С�</p><p>ʹ�ø��º�ɾ������ʱһ��Ҫ�� WHERE �Ӿ䣬��Ȼ������ű�����ݶ��ƻ����������� SELECT �����в��ԣ���ֹ����ɾ����</p><h1 id="������-3"><a href="#������-3" class="headerlink" title="������"></a>������</h1><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> mytable (</span><br><span class="line">  <span class="keyword">id</span> <span class="built_in">INT</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  col1 <span class="built_in">INT</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">1</span>,</span><br><span class="line">  col2 <span class="built_in">VARCHAR</span>(<span class="number">45</span>) <span class="literal">NULL</span>,</span><br><span class="line">  col3 <span class="built_in">DATE</span> <span class="literal">NULL</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>));</span><br></pre></td></tr></table></figure><h1 id="�޸i�"><a href="#�޸i�" class="headerlink" title="�޸ı�"></a>�޸ı�</h1><p><strong>�����</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> mytable</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">col</span> <span class="built_in">CHAR</span>(<span class="number">20</span>);</span><br></pre></td></tr></table></figure><p><strong>ɾ����</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> mytable</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">COLUMN</span> <span class="keyword">col</span>;</span><br></pre></td></tr></table></figure><p><strong>ɾ����</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> mytable;</span><br></pre></td></tr></table></figure><h1 id="��ͼ"><a href="#��ͼ" class="headerlink" title="��ͼ"></a>��ͼ</h1><p>��ͼ������ı������������ݣ�Ҳ�Ͳ��ܶ��������������������ͼ�Ĳ����Ͷ���ͨ��Ĳ���һ����</p><p>��ͼ�������ºô���</p><ol><li>�򻯸��ӵ� SQL ���������縴�ӵ����᣻</li><li>ֻʹ��ʵ�ʱ��һ�������ݣ�</li><li>ͨ��ֻ���û�������ͼ��Ȩ�ޣ���֤���ݵİ�ȫ�ԣ�</li><li>�������ݸ�ʽ�ͱ�ʾ��</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">VIEW</span> myview <span class="keyword">AS</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">Concat</span>(col1, col2) <span class="keyword">AS</span> concat_col, col3*col4 <span class="keyword">AS</span> count_col</span><br><span class="line"><span class="keyword">FROM</span> mytable</span><br><span class="line"><span class="keyword">WHERE</span> col5 = val;</span><br></pre></td></tr></table></figure><h1 id="�洢����"><a href="#�洢����" class="headerlink" title="�洢����"></a>�洢����</h1><p>�洢���̿��Կ����Ƕ�һϵ�� SQL ������������</p><p><strong>ʹ�ô洢���̵ĺô�</strong></p><ol><li>��ʵ�ַ�װ���˴洢�����У������򵥣�Ҳ��֤�˰�ȫ�ԣ�</li><li>���Ը��ô��룻</li><li>������Ԥ�ȱ��룬��˾��кܸߵ����ܡ�</li></ol><p><strong>�����洢����</strong></p><p>�������д����洢������Ҫ�Զ���ָ������Ϊ���������� ; Ϊ�����������洢������Ҳ�����˷ֺţ���˻������ⲿ�ַֺŵ����ǽ�����������﷨����</p><p>���� in��out �� inout ���ֲ�����</p><p>��������ֵ����Ҫ�� select into ��䡣</p><p>ÿ��ֻ�ܸ�һ��������ֵ����֧�ּ��ϵĲ�����</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">delimiter //</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">procedure</span> myprocedure( <span class="keyword">out</span> ret <span class="built_in">int</span> )</span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">declare</span> y <span class="built_in">int</span>;</span><br><span class="line">        <span class="keyword">select</span> <span class="keyword">sum</span>(col1)</span><br><span class="line">        <span class="keyword">from</span> mytable</span><br><span class="line">        <span class="keyword">into</span> y;</span><br><span class="line">        <span class="keyword">select</span> y*y <span class="keyword">into</span> ret;</span><br><span class="line">    <span class="keyword">end</span> //</span><br><span class="line">delimiter ;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">call</span> myprocedure(@ret);</span><br><span class="line"><span class="keyword">select</span> @ret;</span><br></pre></td></tr></table></figure><h1 id="�α�"><a href="#�α�" class="headerlink" title="�α�"></a>�α�</h1><p>�ڴ洢������ʹ���α���Զ�һ������������ƶ�������</p><p>�α���Ҫ���ڽ���ʽӦ�ã������û���Ҫ�����ݼ��е������н���������޸ġ�</p><p><strong>ʹ���α���ĸ����裺</strong></p><ol><li>�����α꣬�������û��ʵ�ʼ��������ݣ�</li><li>���αꣻ</li><li>ȡ�����ݣ�</li><li>�ر��αꣻ</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">delimiter //</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">procedure</span> myprocedure(<span class="keyword">out</span> ret <span class="built_in">int</span>)</span><br><span class="line">    <span class="keyword">begin</span></span><br><span class="line">        <span class="keyword">declare</span> done <span class="built_in">boolean</span> <span class="keyword">default</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">declare</span> mycursor <span class="keyword">cursor</span> <span class="keyword">for</span></span><br><span class="line">        <span class="keyword">select</span> col1 <span class="keyword">from</span> mytable;</span><br><span class="line">        # ������һ��continue handler���� sqlstate '02000' �����������ʱ����ִ�� set done = 1</span><br><span class="line">        <span class="keyword">declare</span> continue <span class="keyword">handler</span> <span class="keyword">for</span> <span class="keyword">sqlstate</span> <span class="string">'02000'</span> <span class="keyword">set</span> done = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        open mycursor;</span><br><span class="line"></span><br><span class="line">        repeat</span><br><span class="line">            fetch mycursor into ret;</span><br><span class="line">            <span class="keyword">select</span> ret;</span><br><span class="line">        until done <span class="keyword">end</span> <span class="keyword">repeat</span>;</span><br><span class="line"></span><br><span class="line">        close mycursor;</span><br><span class="line">    <span class="keyword">end</span> //</span><br><span class="line"> delimiter ;</span><br></pre></td></tr></table></figure><h1 id="������-4"><a href="#������-4" class="headerlink" title="������"></a>������</h1><p>����������ĳ����ִ���������ʱ���Զ�ִ�У�DELETE��INSERT��UPDATE</p><p>����������ָ�������ִ��֮ǰ����֮���Զ�ִ�У�֮ǰִ��ʹ�� BEFORE �ؼ��֣�֮��ִ��ʹ�� AFTER �ؼ��֡�BEFORE ����������֤�;�����</p><p>INSERT ����������һ����Ϊ NEW �������</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TRIGGER</span> mytrigger <span class="keyword">AFTER</span> <span class="keyword">INSERT</span> <span class="keyword">ON</span> mytable</span><br><span class="line"><span class="keyword">FOR</span> <span class="keyword">EACH</span> <span class="keyword">ROW</span> <span class="keyword">SELECT</span> NEW.col;</span><br></pre></td></tr></table></figure><p>DELETE ����������һ����Ϊ OLD �������������ֻ���ġ�</p><p>UPDATE ����������һ����Ϊ NEW ��һ����Ϊ OLD ����������� NEW �ǿ��Ա��޸ĵأ��� OLD ��ֻ���ġ�</p><p>����ʹ�ô�������������Ƹ��٣����޸ļ�¼������һ�ű��С�</p><p>MySQL �������ڴ�������ʹ�� CALL ��� ��Ҳ���ǲ��ܵ��ô洢���̡�</p><h1 id="������-5"><a href="#������-5" class="headerlink" title="������"></a>������</h1><p><strong>��������</strong></p><ol><li>����transaction��ָһ�� SQL ��䣻</li><li>���ˣ�rollback��ָ����ָ�� SQL ���Ĺ��̣�</li><li>�ύ��commit��ָ��δ�洢�� SQL �����д�����ݿ��</li><li>����㣨savepoint��ָ�����������õ���ʱռλ����placeholder��������Զ����������ˣ����������������ͬ����</li></ol><p>���ܻ��� SELECT ��䣬���� SELECT ���Ҳû���壻Ҳ���ܻ��� CRETE �� DROP ��䡣</p><p>MySQL �������ύĬ������ʽ�ύ��Ҳ����ÿִ��һ�����ͻ��ύһ�Ρ������� START TRANSACTION ���ʱ����ر���ʽ�ύ���� COMMIT �� ROLLBACK ���ִ�к�������Զ��رգ����»ָ���ʽ�ύ��</p><p>ͨ������ autocommit Ϊ 0 ����ȡ���Զ��ύ��ֱ�� autocommit ������Ϊ 1 �Ż��ύ��autocommit ��������ÿ�����Ӷ�������Է������ġ�</p><p>���û�����ñ���㣬ROLLBACK ����˵� START TRANSACTION ��䴦����������˱���㣬������ ROLLBACK ��ָ���ñ���㣬�����˵��ñ���㡣</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">START</span> <span class="keyword">TRANSACTION</span></span><br><span class="line">// ...</span><br><span class="line"><span class="keyword">SAVEPOINT</span> delete1</span><br><span class="line">// ...</span><br><span class="line"><span class="keyword">ROLLBACK</span> <span class="keyword">TO</span> delete1</span><br><span class="line">// ...</span><br><span class="line"><span class="keyword">COMMIT</span></span><br></pre></td></tr></table></figure><h1 id="�ַ���"><a href="#�ַ���" class="headerlink" title="�ַ���"></a>�ַ���</h1><p><strong>��������</strong></p><ol><li>�ַ���Ϊ��ĸ�ͷ��ŵļ��ϣ�</li><li>����Ϊĳ���ַ�����Ա���ڲ���ʾ��</li><li>У���ַ�ָ����αȽϣ���Ҫ��������ͷ��顣</li></ol><p>���˸���ָ���ַ�����У���⣬Ҳ���Ը���ָ����</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> mytable</span><br><span class="line">(<span class="keyword">col</span> <span class="built_in">VARCHAR</span>(<span class="number">10</span>) <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> latin <span class="keyword">COLLATE</span> latin1_general_ci )</span><br><span class="line"><span class="keyword">DEFAULT</span> <span class="built_in">CHARACTER</span> <span class="keyword">SET</span> hebrew <span class="keyword">COLLATE</span> hebrew_general_ci;</span><br></pre></td></tr></table></figure><p>���������򡢷���ʱָ��У�ԣ�</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> *</span><br><span class="line"><span class="keyword">FROM</span> mytable</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> <span class="keyword">col</span> <span class="keyword">COLLATE</span> latin1_general_ci;</span><br></pre></td></tr></table></figure><h1 id="E�޹���"><a href="#E�޹���" class="headerlink" title="Ȩ�޹���"></a>Ȩ�޹���</h1><p>MySQL ���˻���Ϣ������ mysql ������ݿ��С�</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">USE</span> mysql;</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">user</span> <span class="keyword">FROM</span> <span class="keyword">user</span>;</span><br></pre></td></tr></table></figure><p><strong>�����˻�</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">USER</span> myuser <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'mypassword'</span>;</span><br></pre></td></tr></table></figure><p>�´������˻�û���κ�Ȩ�ޡ�</p><p><strong>�޸��˻���</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">RENAME</span> myuser <span class="keyword">TO</span> newuser;</span><br></pre></td></tr></table></figure><p><strong>ɾ���˻�</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">USER</span> myuser;</span><br></pre></td></tr></table></figure><p><strong>�鿴Ȩ��</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> <span class="keyword">GRANTS</span> <span class="keyword">FOR</span> myuser;</span><br></pre></td></tr></table></figure><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/c73aa08e-a987-43c9-92be-adea4a884c25.png" alt=""></p><p>�˻��� username@host ����ʽ���壬username@% ʹ�õ���Ĭ����������</p><p><strong>����Ȩ��</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">GRANT</span> <span class="keyword">SELECT</span>, <span class="keyword">INSERT</span> <span class="keyword">ON</span> mydatabase.* <span class="keyword">TO</span> myuser;</span><br></pre></td></tr></table></figure><p><strong>ɾ��Ȩ��</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">REVOKE</span> <span class="keyword">SELECT</span>, <span class="keyword">INSERT</span> <span class="keyword">ON</span> mydatabase.* <span class="keyword">FROM</span> myuser;</span><br></pre></td></tr></table></figure><p>GRANT �� REVOKE ���ڼ�������Ͽ��Ʒ���Ȩ�ޣ�</p><ul><li>������������ʹ�� GRANT ALL�� REVOKE ALL��</li><li>�������ݿ⣬ʹ�� ON database.*��</li><li>�ض��ı�ʹ�� ON database.table��</li><li>�ض����У�</li><li>�ض��Ĵ洢���̡�</li></ul><p><strong>��������</strong></p><p>����ʹ�� Password() ����</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SET</span> PASSWROD <span class="keyword">FOR</span> myuser = <span class="keyword">Password</span>(<span class="string">'newpassword'</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- GFM-TOC --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#����&quot;&gt;����&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#��ѯ&quot;&gt;��ѯ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#����&quot;&gt;����&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#����
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2018/03/29/programming-basics-master/notes/MySQL/"/>
    <id>http://yoursite.com/2018/03/29/programming-basics-master/notes/MySQL/</id>
    <published>2018-03-29T14:37:48.178Z</published>
    <updated>2018-02-26T04:13:28.000Z</updated>
    
    <content type="html"><![CDATA[<!-- GFM-TOC --><ul><li><a href="#�洢����">�洢����</a><ul><li><a href="#1-innodb">1. InnoDB</a></li><li><a href="#2-myisam">2. MyISAM</a></li><li><a href="#3-innodb-��-myisam-�ıȽ�">3. InnoDB �� MyISAM �ıȽ�</a></li></ul></li><li><a href="#��������">��������</a><ul><li><a href="#1-����">1. ����</a></li><li><a href="#2-������">2. ������</a></li><li><a href="#3-�ַ���">3. �ַ���</a></li><li><a href="#4-ʱ�������">4. ʱ�������</a></li></ul></li><li><a href="#����">����</a><ul><li><a href="#1-��������">1. ��������</a><ul><li><a href="#11-b-tree-����">1.1 B-Tree ����</a></li><li><a href="#12-��ϣ����">1.2 ��ϣ����</a></li><li><a href="#13-�ռ���������r-tree">1.3. �ռ��������ݣ�R-Tree��</a></li><li><a href="#14-ȫ������">1.4 ȫ������</a></li></ul></li><li><a href="#2-�������ŵ�">2. �������ŵ�</a></li><li><a href="#3-�����Ż�">3. �����Ż�</a><ul><li><a href="#31-��������">3.1 ��������</a></li><li><a href="#32-ǰ׺����">3.2 ǰ׺����</a></li><li><a href="#33-��������">3.3 ��������</a></li><li><a href="#34-�����е�˳��">3.4 �����е�˳��</a></li><li><a href="#35-�۴�����">3.5 �۴�����</a></li><li><a href="#36-��������">3.6 ��������</a></li></ul></li><li><a href="#4-b-tree-��-b+tree-ԭ��">4. B-Tree �� B+Tree ԭ��</a><ul><li><a href="#4-1-b-tree">4. 1 B-Tree</a></li><li><a href="#42-b+tree">4.2 B+Tree</a></li><li><a href="#43-����˳�����ָ���-b+tree">4.3 ����˳�����ָ��� B+Tree</a></li><li><a href="#44-Ϊʲôʹ��-b-tree-��-b+tree">4.4 Ϊʲôʹ�� B-Tree �� B+Tree</a></li></ul></li></ul></li><li><a href="#��ѯ�����Ż�">��ѯ�����Ż�</a><ul><li><a href="#1-explain">1. Explain</a></li><li><a href="#2-���ٷ��ص���">2. ���ٷ��ص���</a></li><li><a href="#3-���ٷ��ص���">3. ���ٷ��ص���</a></li><li><a href="#4-��ִ��-delete-��-insert-���">4. ��ִ�� DELETE �� INSERT ���</a></li></ul></li><li><a href="#�ֿ���ֱ�">�ֿ���ֱ�</a></li><li><a href="#����ת�ƺ͹��ϻָ�">����ת�ƺ͹��ϻָ�</a><ul><li><a href="#1-����ת��">1. ����ת��</a></li><li><a href="#2-���ϻָ�">2. ���ϻָ�</a></li></ul></li><li><a href="#�ο�����">�ο�����</a><!-- GFM-TOC --></li></ul><h1 id="�洢����"><a href="#�洢����" class="headerlink" title="�洢����"></a>�洢����</h1><h2 id="1-InnoDB"><a href="#1-InnoDB" class="headerlink" title="1. InnoDB"></a>1. InnoDB</h2><p>InnoDB �� MySQL ��Ĭ�����������棬ֻ������Ҫ InnoDB ��֧�ֵ�����ʱ���ſ���ʹ�������洢���档</p><p>���� MVCC ��֧�ָ߲���������ʵ�����ĸ���׼�ĸ��뼶��Ĭ�ϼ����ǿ��ظ�����</p><p>���ǻ��ھ۴����������ģ����������Ĳ�ѯ�����кܸߵ�������</p><p>�ڲ����˺ܶ��Ż��������Ӵ��̶�ȡ����ʱ���õĿ�Ԥ���Զ����ܹ��Զ����ڴ��д��� hash �����Լ��ٶ�����������Ӧ��ϣ�������Լ��ܹ����ٲ�������Ĳ��뻺�����ȡ�</p><p>ͨ��һЩ���ƺ͹���֧���������ȱ��ݡ�</p><h2 id="2-MyISAM"><a href="#2-MyISAM" class="headerlink" title="2. MyISAM"></a>2. MyISAM</h2><p>MyISAM �ṩ�˴��������ԣ�����ȫ��������ѹ�����ռ亯����GIS���ȡ��� MyISAM ��֧��������м��������ұ������޷���ȫ�ָ���</p><p>ֻ�ܶ����ű����������������С�</p><p>�����ֹ������Զ�ִ�м����޸����������Ǻ�����ָ��Լ������ָ���ͬ�����ܵ���һЩ���ݶ�ʧ�������޸������Ƿǳ����ġ�</p><p>���԰�����̬���߾�̬���С�</p><p>���ָ���� DELAY_KEY_WRITE ѡ���ÿ���޸�ִ�����ʱ�������������޸ĵ���������д����̣����ǻ�д���ڴ��еļ���������ֻ������������������߹رձ��ʱ��ŻὫ��Ӧ��������д����̡����ַ�ʽ���Լ��������д�����ܣ����������ݿ������������ʱ����������𻵣���Ҫִ���޸�������</p><p>������ڴ��������������Ժ󣬲����ٽ����޸Ĳ�������ô�����ı��ʺϲ��� MyISAM ѹ����</p><p>����ֻ�����ݣ����߱�Ƚ�С�����������޸�����������Ȼ���Լ���ʹ�� MyISAM��</p><p>MyISAM ��Ƽ򵥣������Խ��ܸ�ʽ�洢��������ĳЩ���������ܺܺá�</p><h2 id="3-InnoDB-��-MyISAM-�iL�"><a href="#3-InnoDB-��-MyISAM-�iL�" class="headerlink" title="3. InnoDB �� MyISAM �ıȽ�"></a>3. InnoDB �� MyISAM �ıȽ�</h2><p><strong>����</strong></p><p>InnoDB �������͵ġ�</p><p><strong>����</strong></p><p>InnoDB ֧�������ȱ��ݡ�</p><p><strong>�����ָ�</strong></p><p>MyISAM ���������𻵵ĸ��ʱ� InnoDB �ߺܶ࣬���һָ����ٶ�Ҳ������</p><p><strong>����</strong></p><p>MyISAM ֻ֧�ֱ������� InnoDB ��֧���м�����</p><p><strong>��������</strong></p><p>MyISAM ֧��ȫ������������ռ�������</p><h1 id="��������"><a href="#��������" class="headerlink" title="��������"></a>��������</h1><h2 id="1-����"><a href="#1-����" class="headerlink" title="1. ����"></a>1. ����</h2><p>TINYINT, SMALLINT, MEDIUMINT, INT, BIGINT �ֱ�ʹ�� 8, 16, 24, 64 λ�洢�ռ䣬һ�������ԽС����Խ�á�</p><p>INT(11) �е�����ֻ�ǹ涨�˽���������ʾ�ַ��ĸ��������ڴ洢�ͼ�����˵��û������ġ�</p><h2 id="2-������"><a href="#2-������" class="headerlink" title="2. ������"></a>2. ������</h2><p>FLOAT �� DOUBLE Ϊ�������ͣ�DECIMAL Ϊ�߾���С�����͡�CPU ԭ��֧�ָ������㣬���ǲ�֧�� DECIMAl ���͵ļ��㣬��� DECIMAL �ļ���ȸ���������Ҫ���ߵĴ��ۡ�</p><p>FLOAT��DOUBLE �� DECIMAL ������ָ���п����� DECIMAL(18, 9) ��ʾ�ܹ� 18 λ��ȡ 9 λ�洢С�����֣�ʣ�� 9 λ�洢�������֡�</p><h2 id="3-�ַ���"><a href="#3-�ַ���" class="headerlink" title="3. �ַ���"></a>3. �ַ���</h2><p>��Ҫ�� CHAR �� VARCHAR �������ͣ�һ���Ƕ����ģ�һ���Ǳ䳤�ġ�</p><p>VARCHAR ���ֱ䳤�����ܹ���ʡ�ռ䣬��Ϊֻ��Ҫ�洢��Ҫ�����ݡ�������ִ�� UPDATE ʱ���ܻ�ʹ�б�ñ�ԭ������������һ��ҳ�������ɵĴ�Сʱ����Ҫִ�ж���Ĳ�����MyISAM �Ὣ�в�ɲ�ͬ��Ƭ�δ洢���� InnoDB ����Ҫ����ҳ��ʹ�зŽ�ҳ�ڡ�</p><p>VARCHAR �ᱣ���ַ���ĩβ�Ŀո񣬶� CHAR ��ɾ����</p><h2 id="4-ʱ�������"><a href="#4-ʱ�������" class="headerlink" title="4. ʱ�������"></a>4. ʱ�������</h2><p>MySQL �ṩ���������Ƶ�����ʱ�����ͣ�DATATIME �� TIMESTAMP��</p><p><strong>DATATIME</strong></p><p>�ܹ������ 1001 �굽 9999 ������ں�ʱ�䣬����Ϊ�룬ʹ�� 8 �ֽڵĴ洢�ռ䡣</p><p>����ʱ���޹ء�</p><p>Ĭ������£�MySQL ��һ�ֿ�����ġ�������ĸ�ʽ��ʾ DATATIME ֵ�����硰2008-01016 22:37:08�������� ANSI ��׼��������ں�ʱ���ʾ������</p><p><strong>TIMESTAMP</strong></p><p>�� UNIX ʱ�����ͬ������� 1970 �� 1 �� 1 ����ҹ����������ʱ�䣩������������ʹ�� 4 ���ֽڣ�ֻ�ܱ�ʾ�� 1970 �� �� 2038 �ꡣ</p><p>����ʱ���йء�</p><p>MySQL �ṩ�� FROM_UNIXTIME() ������ Unxi ʱ���ת��Ϊ���ڣ����ṩ�� UNIX_TIMESTAMP() ����������ת��Ϊ Unix ʱ�����</p><p>Ĭ������£��������ʱû��ָ�� TIMESTAMP �е�ֵ���Ὣ���ֵ����Ϊ��ǰʱ�䡣</p><p>Ӧ�þ���ʹ�� TIMESTAMP����Ϊ���� DATETIME �ռ�Ч�ʸ��ߡ�</p><h1 id="����"><a href="#����" class="headerlink" title="����"></a>����</h1><p>�������ڴ洢�����ʵ�ֵģ��������ڷ�������ʵ�ֵģ����Բ�ͬ�洢������в�ͬ���������ͺ�ʵ�֡�</p><p>�����ܹ����׽���ѯ��������������������</p><p>���ڷǳ�С�ı��󲿷�����¼򵥵�ȫ��ɨ��Ƚ�����������Ч�������е����͵ı������ͷǳ���Ч�����Ƕ����ش��͵ı�������ʹ�������Ĵ��۽�����֮��������������£���Ҫ�õ�һ�ּ�������ֱ�����ֳ���Ҫ��ѯ��һ�����ݣ�������һ����¼һ����¼��ƥ�䣬�������ʹ�÷���������</p><h2 id="1-��������"><a href="#1-��������" class="headerlink" title="1. ��������"></a>1. ��������</h2><h3 id="1-1-B-Tree-����"><a href="#1-1-B-Tree-����" class="headerlink" title="1.1 B-Tree ����"></a>1.1 B-Tree ����</h3><p>B-Tree �����Ǵ���� MySQL �洢�����Ĭ���������͡�</p><p>��Ϊ������Ҫ����ȫ��ɨ�裬ֻ��Ҫ���������������ɣ���˲����ٶȿ�ܶࡣ</p><p>����ָ���������Ϊ�����У���������й�ͬ��ɼ���B-Tree ����������ȫ��ֵ����ֵ��Χ�ͼ�ǰ׺���ң����м�ǰ׺����ֻ����������ǰ׺���ҡ�</p><p>�������ڲ��ң���������������ͷ��顣</p><p>������ǰ��������е�˳����в��ң����޷�ʹ��������</p><h3 id="1-2-��ϣ����"><a href="#1-2-��ϣ����" class="headerlink" title="1.2 ��ϣ����"></a>1.2 ��ϣ����</h3><p>���ڹ�ϣ��ʵ�֣��ŵ��ǲ��ҷǳ��졣</p><p>�� MySQL ��ֻ�� Memory ������ʽ֧�ֹ�ϣ������</p><p>InnoDB ������һ������Ĺ��ܽС�����Ӧ��ϣ����������ĳ������ֵ��ʹ�õķǳ�Ƶ��ʱ������ B-Tree ����֮���ٴ���һ����ϣ�������������� B-Tree �������й�ϣ������һЩ�ŵ㣬������ٵĹ�ϣ���ҡ�</p><p>���ƣ���ϣ����ֻ������ϣֵ����ָ�룬�����洢�ֶ�ֵ�����Բ���ʹ�������е�ֵ�������ȡ�С������������ڴ��е��е��ٶȺܿ죬���Դ󲿷��������һ�������Ӱ�첢�����ԣ��޷����ڷ���������ֻ֧�־�ȷ���ң��޷����ڲ��ֲ��Һͷ�Χ���ң������ϣ��ͻ�ܶ࣬�����ٶȻ��ú�����</p><h3 id="1-3-�ռ��������ݣ�R-Tree��"><a href="#1-3-�ռ��������ݣ�R-Tree��" class="headerlink" title="1.3. �ռ��������ݣ�R-Tree��"></a>1.3. �ռ��������ݣ�R-Tree��</h3><p>MyISAM �洢����֧�ֿռ��������������ڵ������ݴ洢��</p><p>�ռ������������ά�����������ݣ�������Ч��ʹ������ά����������ϲ�ѯ��</p><h3 id="1-4-o������"><a href="#1-4-o������" class="headerlink" title="1.4 ȫ������"></a>1.4 ȫ������</h3><p>MyISAM �洢����֧��ȫ�����������ڲ����ı��еĹؼ��ʣ�������ֱ�ӱȽ������е�ֵ��</p><p>ʹ�� MATCH AGAINST����������ͨ�� WHERE��</p><h2 id="2-�������w�"><a href="#2-�������w�" class="headerlink" title="2. �������ŵ�"></a>2. �������ŵ�</h2><ul><li><p>�������˷�������Ҫɨ�����������</p></li><li><p>���������������������ʹ�����ʱ��</p></li><li><p>����� I/O ��Ϊ˳�� I/O��</p></li></ul><h2 id="3-�����Z�"><a href="#3-�����Z�" class="headerlink" title="3. �����Ż�"></a>3. �����Ż�</h2><h3 id="3-1-��������"><a href="#3-1-��������" class="headerlink" title="3.1 ��������"></a>3.1 ��������</h3><p>�ڽ��в�ѯʱ�������в����Ǳ��ʽ��һ���֣�Ҳ�����Ǻ����Ĳ����������޷�ʹ��������</p><p>��������Ĳ�ѯ����ʹ�� actor_id �е�������</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> actor_id <span class="keyword">FROM</span> sakila.actor <span class="keyword">WHERE</span> actor_id + <span class="number">1</span> = <span class="number">5</span>;</span><br></pre></td></tr></table></figure><h3 id="3-2-j׺����"><a href="#3-2-j׺����" class="headerlink" title="3.2 ǰ׺����"></a>3.2 ǰ׺����</h3><p>���� BLOB��TEXT �� VARCHAR ���͵��У�����ʹ��ǰ׺������ֻ������ʼ�Ĳ����ַ���</p><p>����ǰ׺���ȵ�ѡȡ��Ҫ���� <strong>����ѡ����</strong> ��ȷ�������ظ�������ֵ�ͼ�¼�����ı�ֵ��ѡ����Խ�ߣ���ѯЧ��ҲԽ�ߡ����ֵΪ 1 ����ʱÿ����¼����Ψһ�����������Ӧ��</p><h3 id="3-3-��������"><a href="#3-3-��������" class="headerlink" title="3.3 ��������"></a>3.3 ��������</h3><p>����Ҫʹ�ö������Ϊ�������в�ѯʱ��ʹ�ö���������ʹ�ö�������������ܸ��á��������������У���ð� actor_id �� file_id ����Ϊ����������</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> file_id, actor_ <span class="keyword">id</span> <span class="keyword">FROM</span> sakila.film_actor</span><br><span class="line"><span class="keyword">WhERE</span> actor_id = <span class="number">1</span> <span class="keyword">OR</span> film_id = <span class="number">1</span>;</span><br></pre></td></tr></table></figure><h3 id="3-4-�����е�˳��"><a href="#3-4-�����е�˳��" class="headerlink" title="3.4 �����е�˳��"></a>3.4 �����е�˳��</h3><p>��ѡ������ǿ�������з���ǰ�棬����������ʾ�Ľ���� customer_id ��ѡ���Ա� staff_id ���ߣ������ð� customer_id �з��ڶ���������ǰ�档</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">COUNT</span>(<span class="keyword">DISTINCT</span> staff_id)/<span class="keyword">COUNT</span>(*) <span class="keyword">AS</span> staff_id_selectivity,</span><br><span class="line"><span class="keyword">COUNT</span>(<span class="keyword">DISTINCT</span> customer_id)/<span class="keyword">COUNT</span>(*) <span class="keyword">AS</span> customer_id_selectivity,</span><br><span class="line"><span class="keyword">COUNT</span>(*)</span><br><span class="line"><span class="keyword">FROM</span> payment;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">   staff_id_selectivity: 0.0001</span><br><span class="line">customer_id_selectivity: 0.0373</span><br><span class="line">               COUNT(*): 16049</span><br></pre></td></tr></table></figure><h3 id="3-5-�۴�����"><a href="#3-5-�۴�����" class="headerlink" title="3.5 �۴�����"></a>3.5 �۴�����</h3><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/b9e9ae8c-e216-4c01-b267-a50dbeb98fa4.jpg" alt=""></p><p>�۴�����������һ���������ͣ�����һ�����ݴ洢��ʽ��</p><p>����۴ء���ʾ�����к����ڵļ�ֵ���ܵش洢��һ��InnoDB �ľ۴������������д���� B-Tree ��Ҷ��ҳ�С�</p><p>��Ϊ�޷��������д����������ͬ�ĵط�������һ����ֻ����һ���۴�������</p><p><strong>�ŵ�</strong></p><ol><li>���԰�������ݱ�����һ�𣬼��� I/O ������</li><li>��Ϊ���ݱ����� B-Tree �У�������ݷ��ʸ��졣</li></ol><p><strong>ȱ��</strong></p><ol><li>�۴���������޶������ I/O �ܼ���Ӧ�õ����ܣ������������ȫ�������ڴ棬��û��Ҫ�þ۴�������</li><li>�����ٶ����������ڲ���˳�򣬰�������˳����������ġ�</li><li>���²������ۺܸߣ���Ϊÿ�������µ��ж����ƶ����µ�λ�á�</li><li>�����뵽ĳ��������ҳ�У��洢����Ὣ��ҳ���ѳ�����ҳ�������ɸ��У�ҳ���ѻᵼ�±�ռ�ø���Ĵ��̿ռ䡣</li><li>����бȽ�ϡ�裬��������ҳ���ѵ������ݴ洢������ʱ���۴��������ܵ���ȫ��ɨ���ٶȱ�����</li></ol><h3 id="3-6-��������"><a href="#3-6-��������" class="headerlink" title="3.6 ��������"></a>3.6 ��������</h3><p>��������������Ҫ��ѯ���ֶε�ֵ��</p><h2 id="4-B-Tree-��-B-Tree-ԭ��"><a href="#4-B-Tree-��-B-Tree-ԭ��" class="headerlink" title="4. B-Tree �� B+Tree ԭ��"></a>4. B-Tree �� B+Tree ԭ��</h2><h3 id="4-1-B-Tree"><a href="#4-1-B-Tree" class="headerlink" title="4. 1 B-Tree"></a>4. 1 B-Tree</h3><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/5ed71283-a070-4b21-85ae-f2cbfd6ba6e1.jpg" alt=""></p><p>Ϊ������ B-Tree�����ȶ���һ�����ݼ�¼Ϊһ����Ԫ�� [key, data]��key Ϊ��¼�ļ���data Ϊ���ݼ�¼�� key ������ݡ�</p><p>B-Tree �������������������ݽṹ��</p><ul><li>����Ҷ�ڵ������ͬ����ȣ�Ҳ����˵ B-Tree ��ƽ��ģ�</li><li>һ���ڵ��е� key �����ҷǵݼ����У�</li><li>���ĳ��ָ����������� key �ֱ��� key<sub>i</sub> �� key<sub>i+1</sub>���Ҳ�Ϊ null�����ָ��ָ��ڵ������ key ���� key<sub>i</sub> ��С�� key<sub>i+1</sub>��</li></ul><p>�� B-Tree �а� key �������ݵ��㷨�ǳ�ֱ�ۣ����ȴӸ��ڵ���ж��ֲ��ң�����ҵ��򷵻ض�Ӧ�ڵ�� data���������Ӧ�����ָ��ָ��Ľڵ�ݹ���в��ң�ֱ���ҵ��ڵ���ҵ� null ָ�룬ǰ�߲��ҳɹ������߲���ʧ�ܡ�</p><p>���ڲ���ɾ���µ����ݼ�¼���ƻ� B-Tree �����ʣ�����ڲ���ɾ��ʱ����Ҫ��������һ�����ѡ��ϲ���ת�ƵȲ����Ա��� B-Tree ���ʡ�</p><h3 id="4-2-B-Tree"><a href="#4-2-B-Tree" class="headerlink" title="4.2 B+Tree"></a>4.2 B+Tree</h3><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/63cd5b50-d6d8-4df6-8912-ef4a1dd5ba13.jpg" alt=""></p><p>�� B-Tree ��ȣ�B+Tree �����²�ͬ�㣺</p><ul><li>ÿ���ڵ��ָ������Ϊ 2d ������ 2d+1��</li><li>�ڽڵ㲻�洢 data��ֻ�洢 key��Ҷ�ӽڵ㲻�洢ָ�롣</li></ul><h3 id="4-3-����˳�����ָ���-B-Tree"><a href="#4-3-����˳�����ָ���-B-Tree" class="headerlink" title="4.3 ����˳�����ָ��� B+Tree"></a>4.3 ����˳�����ָ��� B+Tree</h3><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/1ee5f0a5-b8df-43b9-95ab-c516c54ec797.jpg" alt=""></p><p>һ�������ݿ�ϵͳ���ļ�ϵͳ��ʹ�õ� B+Tree �ṹ���ھ��� B+Tree �����Ͻ������Ż�����Ҷ�ӽڵ�������˳�����ָ�룬������Ż���Ŀ����Ϊ�����������ʵ����ܡ�</p><h3 id="4-4-Ϊʲoʹ��-B-Tree-��-B-Tree"><a href="#4-4-Ϊʲoʹ��-B-Tree-��-B-Tree" class="headerlink" title="4.4 Ϊʲôʹ�� B-Tree �� B+Tree"></a>4.4 Ϊʲôʹ�� B-Tree �� B+Tree</h3><p>����������ݽṹҲ��������ʵ�������������ļ�ϵͳ�����ݿ�ϵͳ�ձ���� B-/+Tree ��Ϊ�����ṹ��</p><p>ҳ�Ǽ��������洢�����߼��飬Ӳ��������ϵͳ����������ʹ��̴洢���ָ�Ϊ�����Ĵ�С��ȵĿ飬ÿ���洢���Ϊһҳ����������ϵͳ�У�ҳ�ô�Сͨ��Ϊ 4k��������ʹ�����ҳΪ��λ�������ݡ�</p><p>һ����˵����������Ҳ�ܴ󣬲�����ȫ���洢���ڴ��У�������������������ļ�����ʽ�洢�Ĵ����ϡ�Ϊ�˼��ٴ��� I/O���������������ϸ����ȡ������ÿ�ζ���Ԥ���������������������Ǽ������ѧ�������ľֲ���ԭ����һ�����ݱ��õ�ʱ���丽��������Ҳͨ�������ϱ�ʹ�á����ݿ�ϵͳ����������������˴���Ԥ��ԭ����һ���ڵ�Ĵ�С��Ϊ����һ��ҳ������ÿ���ڵ�ֻ��Ҫһ�� I/O �Ϳ�����ȫ���롣B-Tree ��һ�μ��������Ҫ h-1 �� I/O�����ڵ㳣פ�ڴ棩���������Ӷ�Ϊ O(h)=O(logdN)��һ��ʵ��Ӧ���У����� d �Ƿǳ�������֣�ͨ������ 100����� h �ǳ�С��ͨ�������� 3��������������ֽṹ��h ����Ҫ��Ķࡣ�������߼��Ϻܽ��Ľڵ㣨���ӣ������Ͽ��ܺ�Զ���޷����þֲ��ԣ�Ч�����Ա� B-Tree ��ܶࡣ</p><p>B+Tree ���ʺ����������ԭ����ڽڵ���� d �йء����� B+Tree �ڽڵ�ȥ���� data ����˿���ӵ�и���ĳ��ȣ�ӵ�и��õ����ܡ�</p><h1 id="��ѯ�����Z�"><a href="#��ѯ�����Z�" class="headerlink" title="��ѯ�����Ż�"></a>��ѯ�����Ż�</h1><h2 id="1-Explain"><a href="#1-Explain" class="headerlink" title="1. Explain"></a>1. Explain</h2><p>�������� SQL ��䣬��������бȽ���Ҫ���ֶ��У�</p><ul><li><p>select_type : ��ѯ���ͣ��м򵥲�ѯ�����ϲ�ѯ���Ӳ�ѯ</p></li><li><p>key : ʹ�õ�����</p></li><li><p>rows : ɨ�������</p></li></ul><h2 id="2-���ٷ��ص���"><a href="#2-���ٷ��ص���" class="headerlink" title="2. ���ٷ��ص���"></a>2. ���ٷ��ص���</h2><p>����ѯ��Ҫ����Ϊ�����˹������ݣ����˷��ʹ�����֮�⣬Ҳ�������ʹ����С�</p><p>��ò�Ҫʹ�� SELECT * ��䣬Ҫ������Ҫѡ���ѯ���С�</p><h2 id="3-���ٷ��ص���"><a href="#3-���ٷ��ص���" class="headerlink" title="3. ���ٷ��ص���"></a>3. ���ٷ��ص���</h2><p>���ʹ�� LIMIT �����ȡ����Ҫ����Щ�С�</p><p>�����Խ���������������������ȫ��ɨ�衣��������������䣬�������������������Ҫ����ȫ��ɨ�裬��ʹ������ֻ��Ҫɨ�輸�м�¼���ɣ�ʹ�� Explain ������ͨ���۲� rows �ֶ����������ֲ��졣</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> sakila.film_actor <span class="keyword">WHERE</span> film_id = <span class="number">1</span>;</span><br></pre></td></tr></table></figure><h2 id="4-��ִ��-DELETE-��-INSERT-���"><a href="#4-��ִ��-DELETE-��-INSERT-���" class="headerlink" title="4. ��ִ�� DELETE �� INSERT ���"></a>4. ��ִ�� DELETE �� INSERT ���</h2><p>���һ����ִ�еĻ�������һ����ס�ܶ����ݡ�ռ������������־���ľ�ϵͳ��Դ�������ܶ�С�ĵ���Ҫ�Ĳ�ѯ��</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DELEFT FROM messages WHERE <span class="keyword">create</span> &lt; <span class="keyword">DATE_SUB</span>(<span class="keyword">NOW</span>(), <span class="built_in">INTERVAL</span> <span class="number">3</span> <span class="keyword">MONTH</span>);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">rows_affected = 0</span><br><span class="line"><span class="keyword">do</span> &#123;</span><br><span class="line">    rows_affected = do_query(</span><br><span class="line">    <span class="string">"DELETE FROM messages WHERE create  &lt; DATE_SUB(NOW(), INTERVAL 3 MONTH) LIMIT 10000"</span>)</span><br><span class="line">&#125; <span class="keyword">while</span> rows_affected &gt; <span class="number">0</span></span><br></pre></td></tr></table></figure><h1 id="�ֿ���ֱ�"><a href="#�ֿ���ֱ�" class="headerlink" title="�ֿ���ֱ�"></a>�ֿ���ֱ�</h1><p><strong>1. �ֱ�������Ĳ�ͬ</strong></p><p>�ֱ����ǽ�һ�ű�ֳɶ��С����ЩС��ӵ�в�ͬ�ı������������ǽ�һ�ű�����ݷ�Ϊ������飬��Щ������Դ洢��ͬһ�������ϣ�Ҳ���Դ洢�ڲ�ͬ�Ĵ����ϣ����ַ�ʽ�±���Ȼֻ��һ����</p><p><strong>2. ʹ�÷ֿ���ֱ��ԭ��</strong></p><p>����ʱ���ҵ��ķ�չ�����ݿ��еı��Խ��Խ�࣬���ұ��е�������Ҳ��Խ��Խ����ô��д�����Ŀ���Ҳ����������</p><p><strong>3. ��ֱ�з�</strong></p><p>��������ģ�顢��ϵ���г̶Ȼ��ֳ��������𵽲�ͬ�Ŀ��ϡ����磬���ǻὨ����Ʒ���ݿ� payDB���û����ݿ� userDB �ȣ��ֱ������洢��Ŀ����Ʒ�йصı�����û��йصı�</p><p><strong>4. ˮƽ�з�</strong></p><p>�ѱ��е����ݰ���ĳ�ֹ���洢������ṹ��ͬ�ı��У����簴 id ��ɢ��ֵ���Ա�Ƚ��л��֣�</p><p><strong>5. ��ֱ�з���ˮƽ�зֵ�ѡ��</strong></p><p>������ݿ��еı�̫�࣬������Ŀ����ҵ���߼���������ô��ֱ�з�����ѡ��</p><p>������ݿ�ı��࣬���ǵ�����������ܴ�Ӧ��ѡ��ˮƽ�з֡�</p><p><strong>6. ˮƽ�зֵ�ʵ�ַ�ʽ</strong></p><p>��򵥵���ʹ�� merge �洢���档</p><p><strong>7. �ֿ���ֱ���ڵ�����</strong></p><p>(1) ��������</p><p>��ִ�зֿ�ֱ�֮���������ݴ洢���˲�ͬ�Ŀ��ϣ����ݿ����������������ѡ�����������ݿⱾ��ķֲ�ʽ���������ȥִ�����񣬽������߰������ܴ��ۣ������Ӧ�ó���ȥЭ�����ƣ��γɳ����߼��ϵ������ֻ���ɱ�̷���ĸ�����</p><p>(2) �������������</p><p>��ִ���˷ֿ�ֱ�֮�����Ա���Ὣԭ���߼������Ժ�ǿ�����ݻ��ֵ���ͬ�ı���ͬ�Ŀ��ϡ���ʱ��������Ӳ������ܵ����ƣ������޷�����λ�ڲ�ͬ�ֿ�ı�Ҳ�޷����ӷֱ����Ȳ�ͬ�ı�����ԭ��ֻ��Ҫһ�β�ѯ���ܹ���ɵ�ҵ����Ҫ���ж�β�����ɡ�</p><h1 id="����ת�ƺ͹��ϻָ�"><a href="#����ת�ƺ͹��ϻָ�" class="headerlink" title="����ת�ƺ͹��ϻָ�"></a>����ת�ƺ͹��ϻָ�</h1><p>����ת��Ҳ�����л�����������ֹ���ʱ���л������⣬ʹ�����Ϊ���⡣���ϻָ�����˼����Ǵӹ����лָ����������ұ�֤���ݵ���ȷ�ԡ�</p><h2 id="1-����ת��"><a href="#1-����ת��" class="headerlink" title="1. ����ת��"></a>1. ����ת��</h2><p><strong>1.1 ����������л���ɫ</strong></p><p>����һ̨����Ϊ���⣬������һ����-�����ƽṹ�е��������ͱ�����ɫ��</p><p><strong>1.2 ���� IP ��ַ�� IP �й�</strong></p><p>Ϊ MySQL ʵ��ָ��һ���߼� IP ��ַ���� MySQL ʵ��ʧЧʱ�����Խ� IP ��ַת�Ƶ���һ̨ MySQL �������ϡ�</p><p><strong>1.3 �м���������</strong></p><p>ͨ����������·������������ʹ�õķ������ϡ�</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/fabd5fa0-b75e-48d0-9e2c-31471945ceb9.jpg" alt=""></p><p><strong>1.4 ��Ӧ���д������ת��</strong></p><p>������ת�����ϵ�Ӧ���п��ܵ���Ӧ�ñ��̫����׾��</p><h2 id="2-���ϻָ�"><a href="#2-���ϻָ�" class="headerlink" title="2. ���ϻָ�"></a>2. ���ϻָ�</h2><h1 id="�ο�����"><a href="#�ο�����" class="headerlink" title="�ο�����"></a>�ο�����</h1><ul><li>������ MySQL</li><li><a href="http://blog.codinglabs.org/articles/theory-of-mysql-index.html" target="_blank" rel="noopener">MySQL ������������ݽṹ���㷨ԭ�� </a></li><li><a href="http://www.runoob.com/w3cnote/mysql-index.html" target="_blank" rel="noopener">MySQL �����Ż�ȫ���� </a></li><li><a href="https://www.jfox.info/20-tiao-mysql-xing-nen-you-hua-de-zui-jia-jing-yan.html" target="_blank" rel="noopener">20+ �� MySQL �����Ż�����Ѿ��� </a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- GFM-TOC --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#�洢����&quot;&gt;�洢����&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#1-innodb&quot;&gt;1. InnoDB&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#2-myisam&quot;&gt;2. MyISAM&lt;/a&gt;&lt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2018/03/29/programming-basics-master/notes/Linux/"/>
    <id>http://yoursite.com/2018/03/29/programming-basics-master/notes/Linux/</id>
    <published>2018-03-29T14:37:48.176Z</published>
    <updated>2018-02-26T04:13:28.000Z</updated>
    
    <content type="html"><![CDATA[<!-- GFM-TOC --><ul><li><a href="#���ò����Լ�����">���ò����Լ�����</a><ul><li><a href="#����">����</a></li><li><a href="#�ػ�">�ػ�</a></li><li><a href="#�鿴����">�鿴����</a></li><li><a href="#�鿴�˿�">�鿴�˿�</a></li><li><a href="#path">PATH</a></li><li><a href="#���еȼ�">���еȼ�</a></li><li><a href="#sudo">sudo</a></li><li><a href="#gnu">GNU</a></li><li><a href="#��������">��������</a></li><li><a href="#�������а汾">�������а汾</a></li></ul></li><li><a href="#����">����</a><ul><li><a href="#���̵��ļ���">���̵��ļ���</a></li><li><a href="#������">������</a><ul><li><a href="#1-mbr">1. MBR</a></li><li><a href="#2-gpt">2. GPT</a></li></ul></li><li><a href="#����������">����������</a><ul><li><a href="#1-bios">1. BIOS</a></li><li><a href="#2-uefi">2. UEFI</a></li></ul></li><li><a href="#����">����</a></li></ul></li><li><a href="#�ļ�Ȩ����Ŀ¼����">�ļ�Ȩ����Ŀ¼����</a><ul><li><a href="#�ļ�Ȩ�޸���">�ļ�Ȩ�޸���</a></li><li><a href="#�ļ������Լ�Ȩ�޵��޸�">�ļ������Լ�Ȩ�޵��޸�</a><ul><li><a href="#1-�޸��ļ�����Ⱥ��">1. �޸��ļ�����Ⱥ��</a></li><li><a href="#2-�޸��ļ�ӵ����">2. �޸��ļ�ӵ����</a></li><li><a href="#3-�޸�Ȩ��">3. �޸�Ȩ��</a></li></ul></li><li><a href="#Ŀ¼��Ȩ��">Ŀ¼��Ȩ��</a></li><li><a href="#�ļ�Ĭ��Ȩ��">�ļ�Ĭ��Ȩ��</a></li><li><a href="#Ŀ¼����">Ŀ¼����</a></li></ul></li><li><a href="#�ļ���Ŀ¼">�ļ���Ŀ¼</a><ul><li><a href="#�ļ�ʱ��">�ļ�ʱ��</a></li><li><a href="#�ļ���Ŀ¼�Ļ�������">�ļ���Ŀ¼�Ļ�������</a><ul><li><a href="#1-ls">1. ls</a></li><li><a href="#2-cp">2. cp</a></li><li><a href="#3-rm">3. rm</a></li><li><a href="#4-mv">4. mv</a></li></ul></li><li><a href="#��ȡ�ļ�����">��ȡ�ļ�����</a><ul><li><a href="#1-cat">1. cat</a></li><li><a href="#2-tac">2. tac</a></li><li><a href="#3-more">3. more</a></li><li><a href="#4-less">4. less</a></li><li><a href="#5-head">5. head</a></li><li><a href="#6-tail">6. tail</a></li><li><a href="#7-od">7. od</a></li><li><a href="#8-touch">8. touch</a></li></ul></li><li><a href="#ָ�����ļ�����">ָ�����ļ�����</a><ul><li><a href="#1-which">1. which</a></li><li><a href="#2-whereis">2. whereis</a></li><li><a href="#3-locate">3. locate</a></li><li><a href="#4-find">4. find</a><ul><li><a href="#41-��ʱ���йص�ѡ��">4.1 ��ʱ���йص�ѡ��</a></li><li><a href="#42-���ļ�ӵ���ߺ�����Ⱥ���йص�ѡ��">4.2 ���ļ�ӵ���ߺ�����Ⱥ���йص�ѡ��</a></li><li><a href="#43-���ļ�Ȩ�޺������йص�ѡ��">4.3 ���ļ�Ȩ�޺������йص�ѡ��</a></li></ul></li></ul></li></ul></li><li><a href="#�������ļ�ϵͳ">�������ļ�ϵͳ</a><ul><li><a href="#�ļ�ϵͳ�����">�ļ�ϵͳ�����</a></li><li><a href="#inode">inode</a></li><li><a href="#Ŀ¼��-inode-��-block">Ŀ¼�� inode �� block</a></li><li><a href="#ʵ���������������">ʵ���������������</a><ul><li><a href="#1-ʵ������">1. ʵ������</a></li><li><a href="#2-��������">2. ��������</a></li></ul></li></ul></li><li><a href="#ѹ������">ѹ������</a><ul><li><a href="#ѹ��">ѹ��</a><ul><li><a href="#1-gzip">1. gzip</a></li><li><a href="#2-bzip2">2. bzip2</a></li><li><a href="#3-xz">3. xz</a></li></ul></li><li><a href="#���">���</a></li></ul></li><li><a href="#bash">BASH</a><ul><li><a href="#bash����">Bash����</a></li><li><a href="#��������">��������</a></li><li><a href="#ָ������˳��">ָ������˳��</a></li><li><a href="#�������ض���">�������ض���</a></li><li><a href="#����ָ��">����ָ��</a><ul><li><a href="#1-��ȡָ��cut">1. ��ȡָ�cut</a></li><li><a href="#2-��������sortuniq">2. �������sort��uniq</a></li><li><a href="#3-˫������ض���tee">3. ˫������ض���tee</a></li><li><a href="#4-�ַ�ת��ָ��trcolexpandjoinpaste">4. �ַ�ת��ָ�tr��col��expand��join��paste</a></li><li><a href="#5-����ָ��split">5. ����ָ�split</a></li></ul></li></ul></li><li><a href="#�����ʾ�����ļ���ʽ������">�����ʾ�����ļ���ʽ������</a><ul><li><a href="#grep">grep</a></li><li><a href="#printf">printf</a></li><li><a href="#awk">awk</a></li></ul></li><li><a href="#vim-����ģʽ">vim ����ģʽ</a></li><li><a href="#�ο�����">�ο�����</a><!-- GFM-TOC --></li></ul><h1 id="���o����Լ�����"><a href="#���o����Լ�����" class="headerlink" title="���ò����Լ�����"></a>���ò����Լ�����</h1><h2 id="����"><a href="#����" class="headerlink" title="����"></a>����</h2><p><strong>1. –help</strong></p><p>ָ��Ļ����÷���ѡ����ܡ�</p><p><strong>2. man</strong></p><p>man �� manual ����д����ָ��ľ�����Ϣ��ʾ������</p><p>��ִ�� man date ʱ���� DATE(1) ���֣����е����ִ���ָ������ͣ����õ����ּ����������£�</p><table><thead><tr><th>����</th><th>����</th></tr></thead><tbody><tr><td>1</td><td>�û��� shell �����п��Բ�����ָ����߿�ִ���ļ�</td></tr><tr><td>5</td><td>�����ļ�</td></tr><tr><td>8</td><td>ϵͳ����Ա����ʹ�õĹ���ָ��</td></tr></tbody></table><p><strong>3. info</strong></p><p>info �� man ���ƣ����� info ���ĵ��ֳ�һ����ҳ�棬ÿ��ҳ����Խ�����ת��</p><h2 id="�ػ�"><a href="#�ػ�" class="headerlink" title="�ػ�"></a>�ػ�</h2><p><strong>1. ����ͬ��д����� sync</strong></p><p>Ϊ�˼ӿ�Դ������ļ��Ķ�д�ٶȣ�λ���ڴ��е��ļ����ݲ�������ͬ���������ϣ���˹ػ�֮ǰ��Ҫ�Ƚ��� sync ͬ��������</p><p><strong>2. shutdown</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># /sbin/shutdown [-krhc] [ʱ��] [����ѶϢ]</span><br><span class="line">-k �� ����ػ���ֻ�Ƿ��;���ѶϢ��֪ͨ�������ߵ��û�</span><br><span class="line">-r �� ��ϵͳ�ķ���ͣ����������</span><br><span class="line">-h �� ��ϵͳ�ķ���ͣ���������ػ�</span><br><span class="line">-c �� ȡ���Ѿ��ڽ��е� shutdown ָ������</span><br></pre></td></tr></table></figure><p><strong>3. �����ػ�ָ��</strong></p><p>reboot��halt��poweroff��</p><h2 id="�鿴����"><a href="#�鿴����" class="headerlink" title="�鿴����"></a>�鿴����</h2><p>ps ָ�</p><p>����鿴 theadx �������Ϣ��</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ps aux | grep threadx</span><br></pre></td></tr></table></figure><h2 id="�鿴�˿�"><a href="#�鿴�˿�" class="headerlink" title="�鿴�˿�"></a>�鿴�˿�</h2><p>netstat ָ�</p><p>����鿴�˿� 80 �Ƿ�ռ�ã�</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -anp | grep 80</span><br></pre></td></tr></table></figure><h2 id="PATH"><a href="#PATH" class="headerlink" title="PATH"></a>PATH</h2><p>�����ڻ������� PATH ��������ִ���ļ���·����·��֮���� : �ָ�</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/home/dmtsai/.local/bin:/home/dmtsai/bin</span><br></pre></td></tr></table></figure><h2 id="���еc�"><a href="#���еc�" class="headerlink" title="���еȼ�"></a>���еȼ�</h2><p>0���ػ�ģʽ<br>1�����û�ģʽ���������ƽ�root���룩<br>2��������֧�ֵĶ��û�ģʽ<br>3��������֧�ֵĶ��û�ģʽ���ı�ģʽ����������õ�ģʽ��<br>4������δʹ��<br>5��������֧�ֵ� X-windows ֧�ֶ��û�ģʽ�����棩<br>6����������ϵͳ��������</p><h2 id="sudo"><a href="#sudo" class="headerlink" title="sudo"></a>sudo</h2><p>ʹ�� sudo ����һ���û�ʹ�� root ��ִ�е�����û������� /etc/sudoers �в���ʹ�ø�ָ�</p><h2 id="GNU"><a href="#GNU" class="headerlink" title="GNU"></a>GNU</h2><p>GNU �ƻ�������Ϊ��ū�ƻ�������Ŀ���Ǵ���һ����ȫ���ɵĲ���ϵͳ����Ϊ GNU�������������ȫ�� GPL ��ʽ���������� GPL ȫ��Ϊ GNU ͨ�ù������Э�飬�������������ݣ�</p><ul><li>���κ�Ŀ�����д˳�������ɣ�</li><li>�ٸ��Ƶ����ɣ�</li><li>�Ľ��˳��򣬲����������Ľ������ɡ�</li></ul><h2 id="��������"><a href="#��������" class="headerlink" title="��������"></a>��������</h2><p>RPM �� DPKG Ϊ�������������������ߡ�RPM ȫ��Ϊ Redhat Package Manager�������� Red Hat ��˾�ƶ�ʵʩ����� GNU ��Դ����ϵͳ���ܲ���Ϊ�ܶ� Linux ϵͳ (RHEL) �ļȶ������׼���� RPM ���о������ǻ��� Debian ����ϵͳ (UBUNTU) �� DEB ����������ߣ� DPKG��ȫ��Ϊ Debian Package�����ܷ����� RPM ���ơ�</p><p>YUM ���� RPM �������ߣ��ܹ���ָ����Դ�ռ䣨������������Ŀ¼�ȣ��Զ�����Ŀ�� RPM �����Ұ�װ���������������ܣ������Զ�����������ϵ���������ء���װ�����뷱�����ֶ����ء���װÿһ����Ҫ�������������⣬YUM ����һ�������ǽ���ϵͳ�����������������</p><h2 id="�������а汾"><a href="#�������а汾" class="headerlink" title="�������а汾"></a>�������а汾</h2><p>Linux ���а���Ԥ�ȼ��ɺõ� Linux �ں˼�����Ӧ�������</p><p><strong>���� DPKG</strong></p><p>��ҵ���а�</p><ul><li>Ubuntu</li></ul><p>�������а�</p><ul><li>Debian</li></ul><p><strong>���� RPM</strong></p><p>��ҵ���а�</p><ul><li>Red Hat</li></ul><p>�������а�</p><ul><li>Fedora</li><li>CentOS</li></ul><h1 id="����-1"><a href="#����-1" class="headerlink" title="����"></a>����</h1><h2 id="���̵��l���"><a href="#���̵��l���" class="headerlink" title="���̵��ļ���"></a>���̵��ļ���</h2><p>Linux ��ÿ��Ӳ����������һ���ļ���</p><p>�������̵��ļ�����</p><ul><li>SCSI/SATA/USB ���̣�/dev/sd[a-p]</li><li>IDE ���̣�/dev/hd[a-d]</li></ul><p>�����ļ����������ŵ�ȷ������̲����˳���йأ��������������Ĳ��λ���޹ء�</p><h2 id="������"><a href="#������" class="headerlink" title="������"></a>������</h2><p>���̷�������Ҫ�����ָ�ʽ��һ�������ƽ϶�� MBR ������һ���ǽ��������ƽ��ٵ� GPT ������</p><h3 id="1-MBR"><a href="#1-MBR" class="headerlink" title="1. MBR"></a>1. MBR</h3><p>MBR �У���һ����������Ҫ�������У���Ҫ������¼��Master boot record, MBR����������partition table�������� MBR ռ 446 bytes��partition table ռ 64 bytes��</p><p>������ֻ�� 64 bytes�����ֻ�ܴ洢 4 ���������� 4 ������Ϊ��������Primary������չ������Extended����������չ����ֻ��һ�������������ռ�������¼���������Լ�¼����ķ��������ͨ����չ�������Էֳ��������֣���Щ������Ϊ�߼�������</p><p>Linux Ҳ�ѷ��������ļ��������ļ���������ʽΪ�������ļ���+��ţ����� /dev/sda1��ע�⣬�߼������ı�Ŵ� 5 ��ʼ��</p><h3 id="2-GPT"><a href="#2-GPT" class="headerlink" title="2. GPT"></a>2. GPT</h3><p>��ͬ�Ĵ����в�ͬ��������С������ 512bytes �����´��̵� 4k��GPT Ϊ�˼������д��̣��ڶ���������ʹ���߼������ַ��Logical Block Address, LBA����</p><p>GPT �� 1 �������¼�� MBR��������� 33 �������¼������Ϣ���������� 33 ���������ڶԷ�����Ϣ���б��ݡ�</p><p>GPT û����չ������������������������Է� 128 ��������</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/a5c25452-6fa5-49e7-9322-823077442775.jpg" alt=""></p><h2 id="����������"><a href="#����������" class="headerlink" title="����������"></a>����������</h2><h3 id="1-BIOS"><a href="#1-BIOS" class="headerlink" title="1. BIOS"></a>1. BIOS</h3><p>BIOS �ǿ�����ʱ������ִ�еĵ�һ�������������֪�����Կ����Ĵ��̣�����ȡ���̵�һ�������� MBR���� MBR ִ�����еĿ������������������������Ļ���ز���ϵͳ�ĺ����ļ���</p><p>MBR �еĿ�����������ṩ���¹��ܣ�ѡ������������ļ��Լ�ת�����������������ת��������ܿ�������ʵ���˶���������ֻ��Ҫ����һ������ϵͳ�Ŀ����������װ�����������������ϣ����� MBR �еĿ����������ʱ���Ϳ���ѡ�����ǰ�Ĳ���ϵͳ����ת�������������������Ӷ�����һ������ϵͳ��</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/f900f266-a323-42b2-bc43-218fdb8811a8.jpg" alt=""></p><p>��װ��������������Ȱ�װ Windows �ٰ�װ Linux����Ϊ��װ Windows ʱ�Ḳ�ǵ� MBR���� Linux ����ѡ�񽫿����������װ�� MBR �������������������������ҿ������ÿ�����������ѡ����</p><h3 id="2-UEFI"><a href="#2-UEFI" class="headerlink" title="2. UEFI"></a>2. UEFI</h3><p>UEFI ����� BIOS ��˵���ܸ�Ϊȫ�棬Ҳ��Ϊ��ȫ��</p><h2 id="����-2"><a href="#����-2" class="headerlink" title="����"></a>����</h2><p>��������Ŀ¼��Ϊ�����Ľ���㣬Ҳ����˵������Ŀ¼֮��Ϳ��Զ�ȡ���������ݡ�</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/249f3bb1-feee-4805-a259-a72699d638ca.jpg" alt=""></p><h1 id="�l�E����L¼����"><a href="#�l�E����L¼����" class="headerlink" title="�ļ�Ȩ����Ŀ¼����"></a>�ļ�Ȩ����Ŀ¼����</h1><h2 id="�l�E�޸���"><a href="#�l�E�޸���" class="headerlink" title="�ļ�Ȩ�޸���"></a>�ļ�Ȩ�޸���</h2><p>���û���Ϊ���֣��ļ�ӵ���ߡ�Ⱥ���Լ������ˣ��Բ�ͬ���û��в�ͬ���ļ�Ȩ�ޡ�</p><p>ʹ�� ls �鿴һ���ļ�ʱ�������һ���ļ�����Ϣ������ drwxr-xr-x. 3 root root 17 May 6 00:14 .config����������ݵĽ������£�</p><ul><li>drwxr-xr-x���ļ������Լ�Ȩ�ޣ��� 1 λΪ�ļ������ֶΣ��� 9 λΪ�ļ�Ȩ���ֶΡ�</li><li>3����������</li><li>root���ļ�ӵ���ߣ�</li><li>root������Ⱥ�飻</li><li>17���ļ���С��</li><li>May 6 00:14���ļ�����޸ĵ�ʱ�䣻</li><li>.config���ļ�����</li></ul><p>�������ļ����ͼ��京���У�</p><ul><li>d��Ŀ¼��</li><li>-���ļ���</li><li>l�������ļ���</li></ul><p>9 λ���ļ�Ȩ���ֶ��У�ÿ 3 ��Ϊһ�飬�� 3 �飬ÿһ��ֱ������ļ�ӵ���ߡ�����Ⱥ���Լ������˵��ļ�Ȩ�ޡ�һ��Ȩ���е� 3 λ�ֱ�Ϊ r��w��x Ȩ�ޣ���ʾ�ɶ�����д����ִ�С�</p><h2 id="�l������Լ�E�޵��޸�"><a href="#�l������Լ�E�޵��޸�" class="headerlink" title="�ļ������Լ�Ȩ�޵��޸�"></a>�ļ������Լ�Ȩ�޵��޸�</h2><h3 id="1-�޸��l�����A��"><a href="#1-�޸��l�����A��" class="headerlink" title="1. �޸��ļ�����Ⱥ��"></a>1. �޸��ļ�����Ⱥ��</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># chgrp [-R] groupname dirname/filename</span><br><span class="line">-R���ݹ��޸�</span><br></pre></td></tr></table></figure><h3 id="2-�޸��l�ӵ����"><a href="#2-�޸��l�ӵ����" class="headerlink" title="2. �޸��ļ�ӵ����"></a>2. �޸��ļ�ӵ����</h3><p>���������޸��ļ�ӵ���ߣ�Ҳ�����޸��ļ�����Ⱥ�顣</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># chown [-R] �û���:Ⱥ���� dirname/filename</span><br></pre></td></tr></table></figure><h3 id="3-�޸�E��"><a href="#3-�޸�E��" class="headerlink" title="3. �޸�Ȩ��"></a>3. �޸�Ȩ��</h3><p>���Խ�һ��Ȩ������������ʾ����ʱһ��Ȩ�޵� 3 ��λ�������������ֵ�λ��������ÿ��λ��ȨֵΪ 4��2��1����ÿ��Ȩ�޶�Ӧ������ȨֵΪ r��4��w��2��x��1��</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># chmod [-R] xyz dirname/filename</span><br></pre></td></tr></table></figure><p>�������� .bashrc �ļ���Ȩ���޸�Ϊ -rwxr-xr–��</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># chmod 754 .bashrc</span><br></pre></td></tr></table></figure><p>Ҳ����ʹ�÷������趨Ȩ�ޡ�</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># chmod [ugoa]  [+-=] [rwx] dirname/filename</span><br><span class="line">- u��ӵ����</span><br><span class="line">- g������Ⱥ��</span><br><span class="line">- o��������</span><br><span class="line">- a��������</span><br><span class="line">- +�����Ȩ��</span><br><span class="line">- -���Ƴ�Ȩ��</span><br><span class="line">- =���趨Ȩ��</span><br></pre></td></tr></table></figure><p>������Ϊ .bashrc �ļ��������û����дȨ�ޡ�</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># chmod a+w .bashrc</span><br></pre></td></tr></table></figure><h2 id="L¼��E��"><a href="#L¼��E��" class="headerlink" title="Ŀ¼��Ȩ��"></a>Ŀ¼��Ȩ��</h2><p>�ļ������Ǵ洢��һ���ļ��������У����Ǵ洢��һ���ļ����ڵ�Ŀ¼�С���ˣ�ӵ���ļ��� w Ȩ�޲����ܶ��ļ��������޸ġ�</p><p>Ŀ¼�洢�ļ��б�һ��Ŀ¼��Ȩ��Ҳ���Ƕ����ļ��б��Ȩ�ޡ���ˣ�Ŀ¼�� r Ȩ�ޱ�ʾ���Զ�ȡ�ļ��б�w Ȩ�ޱ�ʾ�����޸��ļ��б�������˵���������ɾ���ļ������ļ��������޸ģ�x Ȩ�޿����ø�Ŀ¼��Ϊ����Ŀ¼��x Ȩ���� r �� w Ȩ�޵Ļ������������ʹһ��Ŀ¼��Ϊ����Ŀ¼��Ҳ��û�취��ȡ�ļ��б��Լ����ļ��б�����޸��ˡ�</p><h2 id="�l�I��E��"><a href="#�l�I��E��" class="headerlink" title="�ļ�Ĭ��Ȩ��"></a>�ļ�Ĭ��Ȩ��</h2><p>�ļ�Ĭ��Ȩ�ޣ��ļ�Ĭ��û�п�ִ��Ȩ�ޣ����Ϊ 666 ��Ҳ���� -rw-rw-rw- ��<br>Ŀ¼Ĭ��Ȩ�ޣ�Ŀ¼����Ҫ�ܹ����룬Ҳ���Ǳ���ӵ�п�ִ��Ȩ�ޣ����Ϊ 777 ��Ҳ���� drwxrwxrwx��</p><p>����ͨ�� umask ���û��߲鿴�ļ���Ĭ��Ȩ�ޣ�ͨ�����������ʽ����ʾ������ 002 ��ʾ�����û���Ȩ��ȥ����һ�� 2 ��Ȩ�ޣ�Ҳ����дȨ�ޣ���˽������ļ�ʱĬ�ϵ�Ȩ��Ϊ -rw-rw-r– ��</p><h2 id="L¼����"><a href="#L¼����" class="headerlink" title="Ŀ¼����"></a>Ŀ¼����</h2><p>Ϊ��ʹ��ͬ Linux ���а汾��Ŀ¼�ṹ����һ���ԣ�Filesystem Hierarchy Standard (FHS) �涨�� Linux ��Ŀ¼�ṹ�������������Ŀ¼���£�</p><ul><li>/ (root, ��Ŀ¼)</li><li>/usr (unix software resource)������ϵͳĬ��������ᰲװ�����Ŀ¼��</li><li>/var (variable)�����ϵͳ��������й����е������ļ���</li></ul><p>������Ŀ¼�����£�</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/27ace615-558f-4dfb-8ad4-7ac769c10118.jpg" alt=""></p><h1 id="�l���L¼"><a href="#�l���L¼" class="headerlink" title="�ļ���Ŀ¼"></a>�ļ���Ŀ¼</h1><h2 id="�l�ʱ��"><a href="#�l�ʱ��" class="headerlink" title="�ļ�ʱ��"></a>�ļ�ʱ��</h2><ol><li>modification time (mtime)���ļ������ݸ��¾ͻ���£�</li><li>status time (ctime)���ļ���״̬��Ȩ�ޡ����ԣ����¾ͻ���£�</li><li>access time (atime)����ȡ�ļ�ʱ�ͻ���¡�</li></ol><h2 id="�l���L¼�L�������"><a href="#�l���L¼�L�������" class="headerlink" title="�ļ���Ŀ¼�Ļ�������"></a>�ļ���Ŀ¼�Ļ�������</h2><h3 id="1-ls"><a href="#1-ls" class="headerlink" title="1. ls"></a>1. ls</h3><p>�г��ļ�����Ŀ¼����Ϣ��Ŀ¼����Ϣ�������а������ļ���</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># ls [-aAdfFhilnrRSt] file|dir</span><br><span class="line">-a ���г�ȫ�����ļ�</span><br><span class="line">-d �����г�Ŀ¼����</span><br><span class="line">-l ���Գ����ݴ����г��������ļ���������Ȩ�޵ȵ�����</span><br></pre></td></tr></table></figure><h3 id="2-cp"><a href="#2-cp" class="headerlink" title="2. cp"></a>2. cp</h3><p>���Ʋ�����</p><p>���Դ�ļ����������ϣ���Ŀ���ļ�һ��Ҫ��Ŀ¼���С�</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cp [-adfilprsu] source destination</span><br><span class="line">-a ���൱�� -dr --preserve=all ����˼������ dr ��ο�����˵��</span><br><span class="line">-d ������Դ�ļ�Ϊ�����ļ������������ļ����Զ����ļ�����</span><br><span class="line">-i ����Ŀ���ļ��Ѿ�����ʱ���ڸ���ǰ����ѯ��</span><br><span class="line">-p ����ͬ�ļ�������һ���ƹ�ȥ</span><br><span class="line">-r ���ݹ��������</span><br><span class="line">-u ��destination �� source �ɲŸ��� destination���� destination �����ڵ�����²Ÿ���</span><br><span class="line">--preserve=all ������ -p ��Ȩ����ز����⣬������ SELinux ������, links, xattr ��Ҳ������</span><br></pre></td></tr></table></figure><h3 id="3-rm"><a href="#3-rm" class="headerlink" title="3. rm"></a>3. rm</h3><p>�Ƴ�������</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># rm [-fir] �ļ���Ŀ¼</span><br><span class="line">-r ���ݹ�ɾ��</span><br></pre></td></tr></table></figure><h3 id="4-mv"><a href="#4-mv" class="headerlink" title="4. mv"></a>4. mv</h3><p>�ƶ�������</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># mv [-fiu] source destination</span><br><span class="line"># mv [options] source1 source2 source3 .... directory</span><br><span class="line">-f �� force ǿ�Ƶ���˼�����Ŀ���ļ��Ѿ����ڣ�����ѯ�ʶ�ֱ�Ӹ���</span><br></pre></td></tr></table></figure><h2 id="��ȡ�l�����"><a href="#��ȡ�l�����" class="headerlink" title="��ȡ�ļ�����"></a>��ȡ�ļ�����</h2><h3 id="1-cat"><a href="#1-cat" class="headerlink" title="1. cat"></a>1. cat</h3><p>ȡ���ļ����ݡ�</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># cat [-AbEnTv] filename</span><br><span class="line">-n ����ӡ���кţ� ��ͬ�հ���Ҳ�����кţ��� -b ��ѡ�ͬ</span><br></pre></td></tr></table></figure><h3 id="2-tac"><a href="#2-tac" class="headerlink" title="2. tac"></a>2. tac</h3><p>�� cat �ķ�������������һ�п�ʼ��ӡ��</p><h3 id="3-more"><a href="#3-more" class="headerlink" title="3. more"></a>3. more</h3><p>����һҳһҳ�鿴�ļ����ݣ����ı��༭�����ơ�</p><h3 id="4-less"><a href="#4-less" class="headerlink" title="4. less"></a>4. less</h3><p>�� more ���ơ�</p><h3 id="5-head"><a href="#5-head" class="headerlink" title="5. head"></a>5. head</h3><p>����ȡ���ļ�ǰ���С�</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># head [-n number] filename</span><br><span class="line">-n ����������֣�������ʾ���е���˼</span><br></pre></td></tr></table></figure><h3 id="6-tail"><a href="#6-tail" class="headerlink" title="6. tail"></a>6. tail</h3><p>�� head �ķ��������ֻ��ȡ���Ǻ��С�</p><h3 id="7-od"><a href="#7-od" class="headerlink" title="7. od"></a>7. od</h3><p>�������ַ�����ʮ�����Ƶ���ʽ��ʾ�������ļ���</p><h3 id="8-touch"><a href="#8-touch" class="headerlink" title="8. touch"></a>8. touch</h3><p>�޸��ļ�ʱ����߽������ļ���</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># touch [-acdmt] filename</span><br><span class="line">-a �� ���� atime</span><br><span class="line">-c �� ���� ctime������ļ��������򲻽������ļ�</span><br><span class="line">-m �� ���� mtime</span><br><span class="line">-d �� ������Խ������µ����ڶ�����Ŀǰ�����ڣ�Ҳ����ʹ�� --date="���ڻ�ʱ��"</span><br><span class="line">-t ��������Խ������µ�ʱ�������Ŀǰ��ʱ�䣬��ʽΪ[YYYYMMDDhhmm]</span><br></pre></td></tr></table></figure><h2 id="ָ�����l�����"><a href="#ָ�����l�����" class="headerlink" title="ָ�����ļ�����"></a>ָ�����ļ�����</h2><h3 id="1-which"><a href="#1-which" class="headerlink" title="1. which"></a>1. which</h3><p>ָ��������</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># which [-a] command</span><br><span class="line">-a ��������ָ���г���������ֻ�е�һ��</span><br></pre></td></tr></table></figure><h3 id="2-whereis"><a href="#2-whereis" class="headerlink" title="2. whereis"></a>2. whereis</h3><p>whereis �����ļ����ٶȱȽϿ죬��Ϊ��ֻ���������ض���Ŀ¼��</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># whereis [-bmsu] dirname/filename</span><br></pre></td></tr></table></figure><h3 id="3-locate"><a href="#3-locate" class="headerlink" title="3. locate"></a>3. locate</h3><p>locate �����ùؼ��ֻ���������ʽ����������</p><p>locate ʹ�� /var/lib/mlocate/ ������ݿ����������������洢���ڴ��У�����ÿ�����һ�Σ������޷��� locate �����½����ļ�������ʹ�� updatedb �������������ݿ⡣</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># locate [-ir] keyword</span><br><span class="line">-r����������ʽ</span><br></pre></td></tr></table></figure><h3 id="4-find"><a href="#4-find" class="headerlink" title="4. find"></a>4. find</h3><p>find ����ʹ���ļ������Ժ�Ȩ�޽���������</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># find filename [option]</span><br></pre></td></tr></table></figure><h4 id="4-1-��ʱ���йص�ѡ��"><a href="#4-1-��ʱ���йص�ѡ��" class="headerlink" title="4.1 ��ʱ���йص�ѡ��"></a>4.1 ��ʱ���йص�ѡ��</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-mtime  n ���г��� n ��ǰ����һ���޸Ĺ����ݵ��ļ�</span><br><span class="line">-mtime +n ���г��� n ��֮ǰ(���� n �챾��)�޸Ĺ����ݵ��ļ�</span><br><span class="line">-mtime -n ���г��� n ��֮��(�� n �챾��)�޸Ĺ����ݵ��ļ�</span><br><span class="line">-newer file �� �г��� file ���µ��ļ�</span><br></pre></td></tr></table></figure><p>+4��4 �� -4 ��ָʾ��ʱ�䷶Χ���£�</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/658fc5e7-79c0-4247-9445-d69bf194c539.png" alt=""></p><h4 id="4-2-���l�ӵ���ߺ�����A���йص�ѡ��"><a href="#4-2-���l�ӵ���ߺ�����A���йص�ѡ��" class="headerlink" title="4.2 ���ļ�ӵ���ߺ�����Ⱥ���йص�ѡ��"></a>4.2 ���ļ�ӵ���ߺ�����Ⱥ���йص�ѡ��</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-uid n</span><br><span class="line">-gid n</span><br><span class="line">-user name</span><br><span class="line">-group name</span><br><span class="line">-nouser ������ӵ���߲����� /etc/passwd ���ļ�</span><br><span class="line">-nogroup����������Ⱥ�鲻������ /etc/group ���ļ�</span><br></pre></td></tr></table></figure><h4 id="4-3-���l�E�޺������йص�ѡ��"><a href="#4-3-���l�E�޺������йص�ѡ��" class="headerlink" title="4.3 ���ļ�Ȩ�޺������йص�ѡ��"></a>4.3 ���ļ�Ȩ�޺������йص�ѡ��</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-name filename</span><br><span class="line">-size [+-]SIZE����Ѱ�� SIZE ��Ҫ��(+)��С(-)���ļ������ SIZE �Ĺ���У�c: ���� byte��k: ���� 1024bytes�����ԣ�Ҫ�ұ� 50KB��Ҫ����ļ������� -size +50k</span><br><span class="line">-type TYPE</span><br><span class="line">-perm mode  ������Ȩ�޵��� mode ���ļ�</span><br><span class="line">-perm -mode ������Ȩ�ް��� mode ���ļ�</span><br><span class="line">-perm /mode ������Ȩ�ް�����һ mode ���ļ�</span><br></pre></td></tr></table></figure><h1 id="�������l�ϵͳ"><a href="#�������l�ϵͳ" class="headerlink" title="�������ļ�ϵͳ"></a>�������ļ�ϵͳ</h1><h2 id="�l�ϵͳ�����"><a href="#�l�ϵͳ�����" class="headerlink" title="�ļ�ϵͳ�����"></a>�ļ�ϵͳ�����</h2><p>�Է������и�ʽ����Ϊ���ڷ����Ͻ����ļ�ϵͳ��һ������ͨ��ֻ�ܸ�ʽ��Ϊһ���ļ�ϵͳ�����Ǵ������еȼ������Խ�һ��������ʽ��Ϊ����ļ�ϵͳ�����ֻ���ļ�ϵͳ�ܱ����أ����������ܱ����ء�</p><p>�ļ�ϵͳ�����������ṹ��</p><ol><li>superblock����¼�ļ�ϵͳ��������Ϣ������ inode �� block ��������ʹ������ʣ�������Լ��ļ�ϵͳ�ĸ�ʽ�������Ϣ�ȣ�</li><li>inode��һ���ļ�ռ��һ�� inode����¼�ļ������ԣ�ͬʱ��¼���ļ����������ڵ� block ���룻</li><li>block����¼�ļ������ݣ����ļ�̫��ʱ����ռ�ö�� block��</li></ol><p>��Ҫ��ȡһ���ļ�������ʱ������ inode ��ȥ�����ļ��������ڵ����� block��Ȼ������� block �����ݶ�������</p><p>������Ƭ��ָһ���ļ��������ڵ� block ���ڷ�ɢ��</p><p>Ext2 �ļ�ϵͳʹ�����������ļ��ṹ�����ڴ�֮�ϼ����� block Ⱥ��ĸ��Ҳ���ǽ�һ���ļ�ϵͳ����Ϊ��� block Ⱥ�飬�������</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/1974a836-aa6b-4fb8-bce1-6eb11969284a.jpg" alt=""></p><h2 id="inode"><a href="#inode" class="headerlink" title="inode"></a>inode</h2><p>Ext2 �ļ�ϵͳ֧�ֵ� block ��С�� 1k��2k �� 4k ���֣���ͬ�� block ��С�����˵�һ�ļ��Ĵ�С����ÿ�� inode ��С�ǹ̶�Ϊ 128 bytes��</p><p>inode �м�¼���ļ��������ڵ� block������ÿ�� block �ǳ�С��һ�����ļ���㶼��Ҫ��ʮ��� block����һ�� inode ��С���ޣ��޷�ֱ��������ô�� block����������˼�ӡ�˫��ӡ���������ã�ʹ���� block �������С��Ҳ������ block ����¼�ļ������� block��</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/89091427-7b2b-4923-aff6-44681319a8aa.jpg" alt=""></p><p>inode �������������Ϣ��</p><ul><li>���ļ��Ĵ�ȡģʽ(read/write/excute)��</li><li>���ļ���ӵ������Ⱥ��(owner/group)��</li><li>���ļ���������</li><li>���ļ�������״̬�ı��ʱ��(ctime)��</li><li>���һ�εĶ�ȡʱ��(atime)��</li><li>����޸ĵ�ʱ��(mtime)��</li><li>�����ļ����Ե����(flag)���� SetUID…��</li><li>���ļ��������ݵ�ָ�� (pointer)��</li></ul><h2 id="L¼��-inode-��-block"><a href="#L¼��-inode-��-block" class="headerlink" title="Ŀ¼�� inode �� block"></a>Ŀ¼�� inode �� block</h2><p>����һ��Ŀ¼ʱ�������һ�� inode ������һ�� block��block ��¼��������Ŀ¼�������ļ��� inode ����Լ��ļ��������Կ����ļ��� inode ������¼�ļ������ļ�����¼��Ŀ¼�У���������ļ���ɾ���ļ��������ļ�����Щ������Ŀ¼�� w Ȩ���йء�</p><h2 id="ʵ���������������"><a href="#ʵ���������������" class="headerlink" title="ʵ���������������"></a>ʵ���������������</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># ln [-sf] source_filename dist_filename</span><br><span class="line">-s ��Ĭ���� hard link���� -s Ϊ symbolic link</span><br><span class="line">-f �����Ŀ��5�ļ�����ʱ����ɾ��Ŀ���ļ�</span><br></pre></td></tr></table></figure><h3 id="1-ʵ������"><a href="#1-ʵ������" class="headerlink" title="1. ʵ������"></a>1. ʵ������</h3><p>hard link ֻ����ĳ��Ŀ¼������һ����Ŀ��ʹ����������Ŀ���ӵ��ļ��� inode �ϡ�ɾ������һ����Ŀ���ļ����Ǵ��ڣ�ֻҪ����������Ϊ 0��</p><p>���������ƣ����ܿ�Խ Filesystem�����ܶ�Ŀ¼�������ӡ�</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># ln /etc/crontab .</span><br><span class="line"># ll -i /etc/crontab crontab</span><br><span class="line">34474855 -rw-r--r--. 2 root root 451 Jun 10 2014 crontab</span><br><span class="line">34474855 -rw-r--r--. 2 root root 451 Jun 10 2014 /etc/crontab</span><br></pre></td></tr></table></figure><h3 id="2-��������"><a href="#2-��������" class="headerlink" title="2. ��������"></a>2. ��������</h3><p>symbolic link �������Ϊ Windows �Ŀ�ݷ�ʽ��ͨ������һ���������ļ�������ļ������ݵĶ�ȡָ�����ӵ��Ǹ��ļ�����Դ�ļ���ɾ���ˣ������ļ��ʹ򲻿��ˡ�</p><p>symbolic link ����ΪĿ¼�������ӡ�</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># ll -i /etc/crontab /root/crontab2</span><br><span class="line">34474855 -rw-r--r--. 2 root root 451 Jun 10 2014 /etc/crontab</span><br><span class="line">53745909 lrwxrwxrwx. 1 root root 12 Jun 23 22:31 /root/crontab2 -&gt; /etc/crontab</span><br></pre></td></tr></table></figure><h1 id="ѹ������"><a href="#ѹ������" class="headerlink" title="ѹ������"></a>ѹ������</h1><h2 id="ѹ��"><a href="#ѹ��" class="headerlink" title="ѹ��"></a>ѹ��</h2><p>Linux �����кܶ�ѹ���ļ�����չ�������������£�</p><table><thead><tr><th>��չ��</th><th>ѹ������</th></tr></thead><tbody><tr><td>*.Z</td><td>compress</td></tr><tr><td>*.zip</td><td>zip</td></tr><tr><td>*.gz</td><td>gzip</td></tr><tr><td>*.bz2</td><td>bzip2</td></tr><tr><td>*.xz</td><td>xz</td></tr><tr><td>*.tar</td><td>tar �����������ݣ�û�о���ѹ��</td></tr><tr><td>*.tar.gz</td><td>tar ���������ļ������� gzip ��ѹ��</td></tr><tr><td>*.tar.bz2</td><td>tar ���������ļ������� bzip2 ��ѹ��</td></tr><tr><td>*.tar.xz</td><td>tar ���������ļ������� xz ��ѹ��</td></tr></tbody></table><h3 id="1-gzip"><a href="#1-gzip" class="headerlink" title="1. gzip"></a>1. gzip</h3><p>gzip �� Linux ʹ������ѹ��ָ����Խ⿪ compress��zip �� gzip ��ѹ�����ļ���</p><p>���� gzip ѹ������Դ�ļ��Ͳ������ˡ�</p><p>�� 9 ����ͬ��ѹ���ȼ�����ʹ�á�</p><p>����ʹ�� zcat��zmore��zless ����ȡѹ���ļ������ݡ�</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ gzip [-cdtv#] filename</span><br><span class="line">-c ����ѹ���������������Ļ��</span><br><span class="line">-d ����ѹ��</span><br><span class="line">-t ������ѹ���ļ��Ƿ����</span><br><span class="line">-v ����ʾѹ���ȵ���Ϣ</span><br><span class="line">-# �� # Ϊ���ֵ���˼������ѹ���ȼ�������Խ��ѹ����Խ�ߣ�Ĭ��Ϊ6</span><br></pre></td></tr></table></figure><h3 id="2-bzip2"><a href="#2-bzip2" class="headerlink" title="2. bzip2"></a>2. bzip2</h3><p>�ṩ�� gzip ���ߵ�ѹ���ȡ�</p><p>�鿴���bzcat��bzmore��bzless��bzgrep��</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ bzip2 [-cdkzv#] filename</span><br><span class="line">-k ������Դ�ļ�</span><br></pre></td></tr></table></figure><h3 id="3-xz"><a href="#3-xz" class="headerlink" title="3. xz"></a>3. xz</h3><p>�ṩ�� bzip2 ���ѵ�ѹ���ȡ�</p><p>���Կ�����gzip��bzip2��xz ��ѹ���Ȳ����Ż�������Ҫע�⣬ѹ����Խ�ߣ�ѹ����ʱ��ҲԽ����</p><p>�鿴���xzcat��xzmore��xzless��xzgrep��</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ xz [-dtlkc#] filename</span><br></pre></td></tr></table></figure><h2 id="���"><a href="#���" class="headerlink" title="���"></a>���</h2><p>ѹ��ָ��ֻ�ܶ�һ���ļ�����ѹ����������ܹ�������ļ������һ�����ļ���tar �����������ڴ����Ҳ����ʹ�� gip��bzip2��xz ������ļ�����ѹ����</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ tar [-z|-j|-J] [cv] [-f �½���tar�ļ�] filename...  ==���ѹ��</span><br><span class="line">$ tar [-z|-j|-J] [tv] [-f ���е�tar�ļ�]              ==�鿴</span><br><span class="line">$ tar [-z|-j|-J] [xv] [-f ���е�tar�ļ�] [-C Ŀ¼]    ==��ѹ��</span><br><span class="line">-z ��ʹ��zip��</span><br><span class="line">-j ��ʹ��bzip2��</span><br><span class="line">-J ��ʹ��xz��</span><br><span class="line">-c ���½�����ļ���</span><br><span class="line">-t ���鿴����ļ���������Щ�ļ���</span><br><span class="line">-x ���������ѹ���Ĺ��ܣ�</span><br><span class="line">-v ����ѹ��/��ѹ���Ĺ����У���ʾ���ڴ�����ļ�����</span><br><span class="line">-f : filename��Ҫ������ļ���</span><br><span class="line">-C Ŀ¼ �� ���ض�Ŀ¼��ѹ����</span><br></pre></td></tr></table></figure><p>��õķ�ʽ���£�</p><p>���ѹ�� �� tar -jcv -f filename.tar.bz2 Ҫ��ѹ�����ļ���Ŀ¼����<br>�� ��&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;�� tar -jtv -f filename.tar.bz2<br>��ѹ��&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;��tar -jxv -f filename.tar.bz2 -C Ҫ��ѹ����Ŀ¼</p><h1 id="BASH"><a href="#BASH" class="headerlink" title="BASH"></a>BASH</h1><p>����ͨ�� shell �����ں��ṩ����Bash ���� shell ��һ�֡�</p><h2 id="Bash����"><a href="#Bash����" class="headerlink" title="Bash����"></a>Bash����</h2><p><strong>1. ������ʷ</strong></p><p>��¼ʹ�ù���������ε�¼��ִ�е��������ʱ��ŵ��ڴ��У� ~/.bash_history �ļ��м�¼����ǰһ�ε�¼��ִ�й������</p><p><strong>2. �������ļ���ȫ</strong></p><p>��ݼ���tab</p><p><strong>3. ��������</strong></p><p>���� lm �� ls -al �ı�����</p><p><strong>4. shell scripts</strong></p><p><strong>5. ͨ���</strong></p><p>���� ls -l /usr/bin/X* �г� /usr/bin ���������� X ��ͷ���ļ���</p><h2 id="��������-1"><a href="#��������-1" class="headerlink" title="��������"></a>��������</h2><p>��һ��������ֱֵ��ʹ�� = ���Ա���ȡ����Ҫ�ڱ���ǰ���� \$ ��Ҳ������ \${} ����ʽ���������ʹ�� echo ���</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ var=abc</span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$var</span></span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$&#123;var&#125;</span></span><br></pre></td></tr></table></figure><p>������������пո���Ҫʹ��˫���Ż��ߵ����š�˫�����ڵ������ַ����Ա���ԭ�����ԣ�����var=”lang is \$LANG”����var��ֵΪ lang is zh_TW.UTF-8�����������ڵ������ַ����������ַ��������� var=’lang is \$LANG’���� var ��ֵΪ lang is \$LANG��</p><p>����ʹ�� `ָ��` ���� \$(ָ��) �ķ�ʽ��ָ���ִ�н����ֵ������������ version=\$(uname -r)���� version ��ֵΪ 3.10.0-229.el7.x86_64��</p><p>����ʹ�� export ����Զ������ת�ɻ������������������������ӳ�����ʹ�ã���ν�ӳ�������ɵ�ǰ Bash ���������� Bash��</p><p>Bash �ı�����������Ϊ������������֡�ע����������û�и����������������������Ĭ�����ַ������͡�����������ʹ�� declare ���</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ declare [-aixr] variable</span><br><span class="line">-a �� ����Ϊ��������</span><br><span class="line">-i �� ����Ϊ��������</span><br><span class="line">-x �� ����Ϊ��������</span><br><span class="line">-r �� ����Ϊreadonly����</span><br></pre></td></tr></table></figure><p>ʹ�� [ ] ����������в�����</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ array[1]=a</span><br><span class="line">$ array[2]=b</span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$&#123;array[1]&#125;</span></span><br></pre></td></tr></table></figure><h2 id="ָ������˳��"><a href="#ָ������˳��" class="headerlink" title="ָ������˳��"></a>ָ������˳��</h2><ol><li>�Ծ��Ի����·����ִ��ָ����� /bin/ls ���� ./ls ��</li><li>�ɱ����ҵ���ָ����ִ�У�</li><li>�� Bash �ڽ���ָ����ִ�У�</li><li>�� \$PATH ����ָ��������·����˳���ҵ���һ��ָ����ִ�С�</li></ol><h2 id="�������ض���"><a href="#�������ض���" class="headerlink" title="�������ض���"></a>�������ض���</h2><p>�ض������ʹ���ļ������׼���롢��׼����ͱ�׼���������</p><ol><li>��׼���� (stdin) &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;������Ϊ 0 ��ʹ�� &lt; �� &lt;&lt; ��</li><li>��׼��� (stdout)&nbsp;&nbsp;&nbsp;&nbsp;������Ϊ 1 ��ʹ�� &gt; �� &gt;&gt; ��</li><li>��׼�������(stderr)������Ϊ 2 ��ʹ�� 2&gt; �� 2&gt;&gt; ��</li></ol><p>���У���һ����ͷ�ı�ʾ�Ը��ǵķ�ʽ�ض��򣬶���������ͷ�ı�ʾ��׷�ӵķ�ʽ�ض���</p><p>���Խ�����Ҫ�ı�׼����Լ���׼��������ض��� /dev/null ���൱���ӽ������䡣</p><p>�����Ҫ����׼����Լ���׼�������ͬʱ�ض���һ���ļ�����Ҫ��ĳ�����ת��Ϊ��һ����������� 2&gt;&amp;1 ��ʾ����׼�������ת��Ϊ��׼�����</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ find /home -name .bashrc &gt; list 2&gt;&amp;1</span><br></pre></td></tr></table></figure><h2 id="����ָ��"><a href="#����ָ��" class="headerlink" title="����ָ��"></a>����ָ��</h2><p>�����ǽ�һ������ı�׼�����Ϊ��һ������ı�׼���룬��������Ҫ�����������Ĵ���֮����ܵõ�������Ҫ�ĸ�ʽʱ�Ϳ���ʹ�ù��ߡ�������֮��ʹ�� | �ָ�����������</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ls -al /etc | less</span><br></pre></td></tr></table></figure><h3 id="1-��ȡָ�cut"><a href="#1-��ȡָ�cut" class="headerlink" title="1. ��ȡָ�cut"></a>1. ��ȡָ�cut</h3><p>��ȡ����һ��һ�еؽ��С�</p><p>cut �����ݽ����з֣�ȡ����Ҫ�Ĳ��֡�</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ cut</span><br><span class="line">-d ���ָ��</span><br><span class="line">-f ������ -d �ָ��ʹ�� -f n ȡ���� n ������</span><br><span class="line">-c �����ַ�Ϊ��λȡ������</span><br></pre></td></tr></table></figure><p>����1��last ����ʾ�ĵ����ߵ���Ϣ��Ҫ�����ʾ�û�����</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ last</span><br><span class="line">root pts/1 192.168.201.101 Sat Feb 7 12:35 still logged in</span><br><span class="line">root pts/1 192.168.201.101 Fri Feb 6 12:13 - 18:46 (06:33)</span><br><span class="line">root pts/1 192.168.201.254 Thu Feb 5 22:37 - 23:53 (01:16)</span><br><span class="line"></span><br><span class="line">$ last | cut -d ' ' -f 1</span><br></pre></td></tr></table></figure><p>����2���� export �����ѶϢ��ȡ�õ� 12 �ַ��Ժ�������ַ�����</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ export</span><br><span class="line">declare -x HISTCONTROL="ignoredups"</span><br><span class="line">declare -x HISTSIZE="1000"</span><br><span class="line">declare -x HOME="/home/dmtsai"</span><br><span class="line">declare -x HOSTNAME="study.centos.vbird"</span><br><span class="line">.....(����ʡ��).....</span><br><span class="line"></span><br><span class="line">$ export | cut -c 12</span><br></pre></td></tr></table></figure><h3 id="2-�������sort��uniq"><a href="#2-�������sort��uniq" class="headerlink" title="2. �������sort��uniq"></a>2. �������sort��uniq</h3><p><strong>sort</strong> ��������</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ sort [-fbMnrtuk] [file or stdin]</span><br><span class="line">-f �����Դ�Сд</span><br><span class="line">-b ��������ǰ��Ŀո�</span><br><span class="line">-M �����·ݵ��������������� JAN, DEC</span><br><span class="line">-n ��ʹ������</span><br><span class="line">-r ����������</span><br><span class="line">-u ���൱�� unique ���ظ�����ֻ����һ��</span><br><span class="line">-t ���ָ����Ĭ��Ϊtab</span><br><span class="line">-k ��ָ�����������</span><br></pre></td></tr></table></figure><p>������/etc/passwd �������� : ���ָ�ģ��Ե�����������</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ cat /etc/passwd | sort -t ':' -k 3</span><br><span class="line">root:x:0:0:root:/root:/bin/bash</span><br><span class="line">dmtsai:x:1000:1000:dmtsai:/home/dmtsai:/bin/bash</span><br><span class="line">alex:x:1001:1002::/home/alex:/bin/bash</span><br><span class="line">arod:x:1002:1003::/home/arod:/bin/bash</span><br></pre></td></tr></table></figure><p><strong>uniq</strong> ���Խ��ظ�������ֻȡһ����</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ uniq [-ic]</span><br><span class="line">-i �����Դ�Сд</span><br><span class="line">-c �����м���</span><br></pre></td></tr></table></figure><p>������ȡ��ÿ���˵ĵ�¼�ܴ���</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ last | cut -d ' ' -f 1 | sort | uniq -c</span><br><span class="line">1</span><br><span class="line">6 (unknown</span><br><span class="line">47 dmtsai</span><br><span class="line">4 reboot</span><br><span class="line">7 root</span><br><span class="line">1 wtmp</span><br></pre></td></tr></table></figure><h3 id="3-˫������ض���tee"><a href="#3-˫������ض���tee" class="headerlink" title="3. ˫������ض���tee"></a>3. ˫������ض���tee</h3><p>����ض���Ὣ��������ض����ļ��У��� <strong>tee</strong> �����ܹ����������ܣ����ܱ�����Ļ�ϵ������Ҳ����˵��ʹ�� tee ָ�һ�������ͬʱ���͵��ļ�����Ļ�ϡ�</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ tee [-a] file</span><br></pre></td></tr></table></figure><h3 id="4-�ַ�ת��ָ�tr��col��expand��join��paste"><a href="#4-�ַ�ת��ָ�tr��col��expand��join��paste" class="headerlink" title="4. �ַ�ת��ָ�tr��col��expand��join��paste"></a>4. �ַ�ת��ָ�tr��col��expand��join��paste</h3><p> <strong>tr</strong> ����ɾ��һ���е��ַ������߶��ַ������滻��</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ tr [-ds] SET1 ...</span><br><span class="line">-d �� ɾ������ SET1 ����ַ���</span><br></pre></td></tr></table></figure><p>�������� last �������Ϣ����Сдת��Ϊ��д��</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ last | tr '[a-z]' '[A-Z]'</span><br></pre></td></tr></table></figure><p> <strong>col</strong> �� tab �ַ�תΪ�ո��ַ���</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ col [-xb]</span><br><span class="line">-x �� �� tab ��ת���ɶԵȵĿո��</span><br></pre></td></tr></table></figure><p><strong>expand</strong> �� tab ת��һ�������Ŀո�Ĭ���� 8 ����</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ expand [-t] file</span><br><span class="line">-t ��tab תΪ�ո������</span><br></pre></td></tr></table></figure><p><strong>join</strong> ������ͬ���ݵ���һ�кϲ���һ��</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ join [-ti12] file1 file2</span><br><span class="line">-t ���ָ����Ĭ��Ϊ�ո�</span><br><span class="line">-i �����Դ�Сд�Ĳ���</span><br><span class="line">-1 ����һ���ļ����õıȽ��ֶ�</span><br><span class="line">-2 ���ڶ����ļ����õıȽ��ֶ�</span><br></pre></td></tr></table></figure><p><strong>paste</strong> ֱ�ӽ�����ճ����һ��</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ paste [-d] file1 file2</span><br><span class="line">-d ���ָ����Ĭ��Ϊ tab</span><br></pre></td></tr></table></figure><h3 id="5-����ָ�split"><a href="#5-����ָ�split" class="headerlink" title="5. ����ָ�split"></a>5. ����ָ�split</h3><p><strong>split</strong> ��һ���ļ����ֳɶ���ļ���</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ split [-bl] file PREFIX</span><br><span class="line">-b ���Դ�С�����з������ɼӵ�λ������ b, k, m ��</span><br><span class="line">-l �������������з�����</span><br><span class="line">- PREFIX �������ļ���ǰ������</span><br></pre></td></tr></table></figure><h1 id="�����ʾ�����l���ʽ������"><a href="#�����ʾ�����l���ʽ������" class="headerlink" title="�����ʾ�����ļ���ʽ������"></a>�����ʾ�����ļ���ʽ������</h1><h2 id="grep"><a href="#grep" class="headerlink" title="grep"></a>grep</h2><p>ʹ�������ʾʽ��ƥ�������ȡ������</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ grep [-acinv] [--color=auto] ��Ѱ�ַ��� filename</span><br><span class="line">-a �� �� binary �ļ��� text �ļ��ķ�ʽ������Ѱ</span><br><span class="line">-c �� �����ҵ�����</span><br><span class="line">-i �� ���Դ�Сд</span><br><span class="line">-n �� ����к�</span><br><span class="line">-v �� ����ѡ���༴��ʾ��û�� ��Ѱ�ַ��� ���ݵ���һ��</span><br><span class="line">--color=auto ���ҵ��Ĺؼ��ּ���ɫ��ʾ</span><br></pre></td></tr></table></figure><p>�������Ѻ��� the �ַ���������ȡ������ע��Ĭ�ϻ��� –color=auto ѡ�������������� Linux ������ɫ��ʾ the �ַ�����</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ grep -n 'the' regular_express.txt</span><br><span class="line">8:I can't finish the test.</span><br><span class="line">12:the symbol '*' is represented as start.</span><br><span class="line">15:You are the best is mean you are the no. 1.</span><br><span class="line">16:The world Happy is the same with "glad".</span><br><span class="line">18:google is the best tools for search keyword</span><br></pre></td></tr></table></figure><p>��Ϊ { �� } �ķ����� shell ������������ģ���˱���Ҫʹ��ʹ��ת���ַ�����ת�塣</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ grep -n 'go\&#123;2,5\&#125;g' regular_express.txt</span><br></pre></td></tr></table></figure><p>����������ʽ��ο� <a href="https://github.com/00000H/notes/blob/master/notes/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F.md" target="_blank" rel="noopener">������ʽ</a>.</p><h2 id="printf"><a href="#printf" class="headerlink" title="printf"></a>printf</h2><p>���ڸ�ʽ�������</p><p>�������ڹܵ�����ڸ� printf ������ʱ��Ҫʹ�� $( ) ��ʽ��</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ printf '%10s %5i %5i %5i %8.2f \n' $(cat printf.txt)</span><br><span class="line">    DmTsai    80    60    92    77.33</span><br><span class="line">     VBird    75    55    80    70.00</span><br><span class="line">       Ken    60    90    70    73.33</span><br></pre></td></tr></table></figure><h2 id="awk"><a href="#awk" class="headerlink" title="awk"></a>awk</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ awk '�������� 1&#123;���� 1&#125; �������� 2&#123;���� 2&#125; ...' filename</span><br></pre></td></tr></table></figure><p>awk ÿ�δ���һ�У��������С��λ���ֶΣ�ÿ���ֶε�������ʽΪ��\$n��n Ϊ�ֶκţ��� 1 ��ʼ��\$0 ��ʾһ���С�</p><p>���� 1��ȡ����¼�û����û����� ip</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ last -n 5</span><br><span class="line">dmtsai pts/0 192.168.1.100 Tue Jul 14 17:32 still logged in</span><br><span class="line">dmtsai pts/0 192.168.1.100 Thu Jul 9 23:36 - 02:58 (03:22)</span><br><span class="line">dmtsai pts/0 192.168.1.100 Thu Jul 9 17:23 - 23:36 (06:12)</span><br><span class="line">dmtsai pts/0 192.168.1.100 Thu Jul 9 08:02 - 08:17 (00:14)</span><br><span class="line">dmtsai tty1 Fri May 29 11:55 - 12:11 (00:15)</span><br><span class="line"></span><br><span class="line">$ last -n 5 | awk '&#123;print $1 "\t" $3&#125;</span><br></pre></td></tr></table></figure><p>awk ������</p><table><thead><tr><th>��������</th><th>��������</th></tr></thead><tbody><tr><td>NF</td><td>ÿһ��ӵ�е��ֶ�����</td></tr><tr><td>NR</td><td>Ŀǰ��������ǵڼ�������</td></tr><tr><td>FS</td><td>Ŀǰ�ķָ��ַ���Ĭ���ǿո��</td></tr></tbody></table><p>���� 2��������ڴ�����кţ�����ʾÿһ���ж����ֶ�</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ last -n 5 | awk '&#123;print $1 "\t lines: " NR "\t columns: " NF&#125;'</span><br><span class="line">dmtsai lines: 1 columns: 10</span><br><span class="line">dmtsai lines: 2 columns: 10</span><br><span class="line">dmtsai lines: 3 columns: 10</span><br><span class="line">dmtsai lines: 4 columns: 10</span><br><span class="line">dmtsai lines: 5 columns: 9</span><br></pre></td></tr></table></figure><p>����ʹ�ô��ڵ����߼������е���ʹ�� ==��</p><p>���� 3��/etc/passwd �ļ��������ֶ�Ϊ UID���� UID С�� 10 �����ݽ��д���</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cat /etc/passwd | awk &apos;BEGIN &#123;FS=&quot;:&quot;&#125; $3 &lt; 10 &#123;print $1 &quot;\t &quot; $3&#125;&apos;</span><br><span class="line">root 0</span><br><span class="line">bin 1</span><br><span class="line">daemon 2</span><br></pre></td></tr></table></figure><h1 id="vim-����gʽ"><a href="#vim-����gʽ" class="headerlink" title="vim ����ģʽ"></a>vim ����ģʽ</h1><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/341c632a-1fc1-4068-9b9f-bf7ef68ebb4c.jpg" alt=""></p><p>��ָ����ģʽ�£����������������뿪���ߴ洢�ļ���</p><table><thead><tr><th>����</th><th>����</th></tr></thead><tbody><tr><td>:w</td><td>д�����</td></tr><tr><td>:w!</td><td>���ļ�Ϊֻ��ʱ��ǿ��д����̡������ܲ���д�룬���û��Ը��ļ���Ȩ���й�</td></tr><tr><td>:q</td><td>�뿪</td></tr><tr><td>:q!</td><td>ǿ���뿪������</td></tr><tr><td>:wq</td><td>д����̺��뿪</td></tr><tr><td>:wq!</td><td>ǿ��д����̺��뿪</td></tr></tbody></table><h1 id="�ο�����"><a href="#�ο�����" class="headerlink" title="�ο�����"></a>�ο�����</h1><ul><li>���. �� �� �� Linux ˽ �� �� �� �� ƪ �� �� ��[J]. 2009.</li><li><a href="https://www.ibm.com/developerworks/cn/linux/l-cn-rpmdpkg/index.html" target="_blank" rel="noopener">Linux ƽ̨�ϵ����������</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- GFM-TOC --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#���ò����Լ�����&quot;&gt;���ò����Լ�����&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#����&quot;&gt;����&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#�ػ�&quot;&gt;�ػ�&lt;/a&gt;&lt;/li&gt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2018/03/29/programming-basics-master/notes/Leetcode%20%E9%A2%98%E8%A7%A3/"/>
    <id>http://yoursite.com/2018/03/29/programming-basics-master/notes/Leetcode 题解/</id>
    <published>2018-03-29T14:37:48.173Z</published>
    <updated>2018-02-26T04:13:28.000Z</updated>
    
    <content type="html"><![CDATA[<!-- GFM-TOC --><ul><li><a href="#�㷨˼��">�㷨˼��</a><ul><li><a href="#���ֲ���">���ֲ���</a></li><li><a href="#̰��˼��">̰��˼��</a></li><li><a href="#˫ָ��">˫ָ��</a></li><li><a href="#����">����</a><ul><li><a href="#����ѡ��">����ѡ��</a></li><li><a href="#������">������</a></li><li><a href="#Ͱ����">Ͱ����</a></li></ul></li><li><a href="#����">����</a><ul><li><a href="#bfs">BFS</a></li><li><a href="#dfs">DFS</a></li><li><a href="#backtracking">Backtracking</a></li></ul></li><li><a href="#����">����</a></li><li><a href="#��̬�滮">��̬�滮</a><ul><li><a href="#�ָ�����">�ָ�����</a></li><li><a href="#����·��">����·��</a></li><li><a href="#쳲���������">쳲���������</a></li><li><a href="#�����������">�����������</a></li><li><a href="#�������ϵ��">�������ϵ��</a></li><li><a href="#0-1-����">0-1 ����</a></li><li><a href="#��������">��������</a></li><li><a href="#�ַ����༭">�ַ����༭</a></li><li><a href="#��������">��������</a></li></ul></li><li><a href="#��ѧ">��ѧ</a><ul><li><a href="#����">����</a></li><li><a href="#���Լ��">���Լ��</a></li><li><a href="#����ת��">����ת��</a></li><li><a href="#�׳�">�׳�</a></li><li><a href="#�ַ����ӷ�����">�ַ����ӷ�����</a></li><li><a href="#��������">��������</a></li><li><a href="#����ͶƱ����">����ͶƱ����</a></li><li><a href="#����">����</a></li></ul></li></ul></li><li><a href="#���ݽṹ���">���ݽṹ���</a><ul><li><a href="#ջ�Ͷ���">ջ�Ͷ���</a></li><li><a href="#��ϣ��">��ϣ��</a></li><li><a href="#�ַ���">�ַ���</a></li><li><a href="#���������">���������</a><ul><li><a href="#�������">�������</a></li></ul></li><li><a href="#����">����</a></li><li><a href="#��">��</a><ul><li><a href="#�ݹ�">�ݹ�</a></li><li><a href="#��α���">��α���</a></li><li><a href="#ǰ�к������">ǰ�к������</a></li><li><a href="#bst">BST</a></li><li><a href="#trie">Trie</a></li></ul></li><li><a href="#ͼ">ͼ</a></li><li><a href="#λ����">λ����</a></li></ul></li><li><a href="#�ο�����">�ο�����</a><!-- GFM-TOC --></li></ul><h1 id="�㷨˼��"><a href="#�㷨˼��" class="headerlink" title="�㷨˼��"></a>�㷨˼��</h1><h2 id="���ֲ���"><a href="#���ֲ���" class="headerlink" title="���ֲ���"></a>���ֲ���</h2><p>���ֲ���˼��򵥣�������ʵ��ʱ��һЩ��Ҫע���ϸ�ڣ�</p><ol><li><p>�ڼ��� mid ʱ����ʹ�� mid = (l + h) / 2 ���ַ�ʽ����Ϊ l + h ���ܻᵼ�¼ӷ������Ӧ��ʹ�� mid = l + (h - l) / 2��</p></li><li><p>�� h �ĸ�ֵ��ѭ�������йأ���ѭ������Ϊ l &lt;= h ʱ��h = mid - 1����ѭ������Ϊ l &lt; h ʱ��h = mid��<br>�������£���ѭ������Ϊ l &lt;= h ʱ����� h = mid�������ѭ���޷��˳������������ l = 1��h = 1����ʱ mid Ҳ���� 1�������ʱ����ִ�� h = mid����ô�ͻ�����ѭ������ѭ������Ϊ l &lt; h����� h = mid - 1��������������ҵ���������������� [1,2,3]��Ҫ���� 1���ʼ l = 0��h = 2��mid = 1���ж� key &lt; arr[mid] ִ�� h = mid - 1 = 0����ʱѭ���˳���ֱ�ӰѲ��ҵ��������ˡ�</p></li><li><p>l �ĸ�ֵһ�㶼Ϊ l = mid + 1��</p></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">search</span><span class="params">(<span class="keyword">int</span> key, <span class="keyword">int</span>[] arr)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> l = <span class="number">0</span>, h = arr.length - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (l &lt;= h) &#123;</span><br><span class="line">        <span class="keyword">int</span> mid = l + (h - l) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (key == arr[mid]) <span class="keyword">return</span> mid;</span><br><span class="line">        <span class="keyword">if</span> (key &lt; arr[mid]) h = mid - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> l = mid + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>�󿪷�</strong></p><p><a href="https://leetcode.com/problems/sqrtx/description/" target="_blank" rel="noopener">Leetcode : 69. Sqrt(x) (Easy)</a></p><p>һ���� x �Ŀ��� sqrt һ���� 0 ~ x ֮�䣬�������� sqrt == x / sqrt ���������ö��ֲ����� 0 ~ x ֮����� sqrt��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">mySqrt</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x &lt;= <span class="number">1</span>) <span class="keyword">return</span> x;</span><br><span class="line">    <span class="keyword">int</span> l = <span class="number">1</span>, h = x;</span><br><span class="line">    <span class="keyword">while</span>(l &lt;= h)&#123;</span><br><span class="line">        <span class="keyword">int</span> mid = l + (h - l) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">int</span> sqrt = x / mid;</span><br><span class="line">        <span class="keyword">if</span>(sqrt == mid) <span class="keyword">return</span> mid;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(sqrt &lt; mid) h = mid - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> l = mid + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> h;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>��Ӳ��</strong></p><p><a href="https://leetcode.com/problems/arranging-coins/description/" target="_blank" rel="noopener">Leetcode : 441. Arranging Coins (Easy)</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">n = 8</span><br><span class="line"></span><br><span class="line">The coins can form the following rows:</span><br><span class="line">��</span><br><span class="line">�� ��</span><br><span class="line">�� �� ��</span><br><span class="line">�� ��</span><br><span class="line"></span><br><span class="line">Because the 4th row is incomplete, we return 3.</span><br></pre></td></tr></table></figure><p>��Ŀ�������� i �а� i ����ͳ���ܹ��ڵ�������</p><p>���� h ������ l����Ϊ�ڵ�Ӳ�����һ�в������ȥ��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">arrangeCoins</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> l = <span class="number">0</span>, h = n;</span><br><span class="line">    <span class="keyword">while</span>(l &lt;= h)&#123;</span><br><span class="line">        <span class="keyword">int</span> m = l + (h - l) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">long</span> x = m * (m + <span class="number">1L</span>) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(x == n) <span class="keyword">return</span> m;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(x &lt; n) l = m + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> h = m - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> h;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>���Բ��ö��ֲ��ң���ֱ�۵Ľⷨ���£�</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">arrangeCoins</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> level = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (n &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        n -= level;</span><br><span class="line">        level++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> n == <span class="number">0</span> ? level - <span class="number">1</span> : level - <span class="number">2</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>��������� Single Element</strong></p><p><a href="https://leetcode.com/problems/single-element-in-a-sorted-array/description/" target="_blank" rel="noopener">Leetcode : 540. Single Element in a Sorted Array (Medium)</a></p><p>��Ŀ������һ����������ֻ��һ�������������Σ��ҳ��������</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">singleNonDuplicate</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> l = <span class="number">0</span>, h = nums.length - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(l &lt; h) &#123;</span><br><span class="line">        <span class="keyword">int</span> m = l + (h - l) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(m % <span class="number">2</span> == <span class="number">1</span>) m--; <span class="comment">// ��֤ l/h/m ����ż��λ��ʹ�ò��������Сһֱ��������</span></span><br><span class="line">        <span class="keyword">if</span>(nums[m] == nums[m + <span class="number">1</span>]) l = m + <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">else</span> h = m;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> nums[l];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="̰��˼��"><a href="#̰��˼��" class="headerlink" title="̰��˼��"></a>̰��˼��</h2><p>̰��˼�뱣֤ÿ�β������Ǿֲ����ŵģ��������õ��Ľ����ȫ�����ŵġ�</p><p><strong>�������</strong></p><p><a href="https://leetcode.com/problems/assign-cookies/description/" target="_blank" rel="noopener">Leetcode : 455. Assign Cookies (Easy)</a></p><p>��Ŀ������ÿ�����Ӷ���һ������ȣ�ÿ�����ɶ���һ����С��ֻ�б��ɵĴ�С����һ�����ӵ�����ȣ��ú��ӲŻ������㡣��������Ի������ĺ���������</p><p>��Ϊ��С�ĺ��������׵õ����㣬�����������С���ӡ���һ�����ӵı���Ӧ������С��������ú��ӣ���������ɾ�������������ȱȽϴ�ĺ��ӡ�</p><p>֤����������ĳ��ѡ���У�̰�Ĳ���ѡ����� i �����ӷ���� m �����ɣ����ҵ� i �������������С���� m ������Ϊ��������� i �����ӵ���С���ɣ�����̰�Ĳ������տ������� k �����ӡ��������Ų��������ѡ���и� i �����ӷ���� n �����ɣ�����������ɴ��ڵ� m �����ɡ����Ƿ���ʹ�õ� m ������ȥ����� n ��������ȫ��Ӱ������Ľ������˲����ڱ�̰�Ĳ��Ը��ŵĲ��ԣ���̰�Ĳ��Ծ������Ų��ԡ�</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findContentChildren</span><span class="params">(<span class="keyword">int</span>[] g, <span class="keyword">int</span>[] s)</span> </span>&#123;</span><br><span class="line">    Arrays.sort(g);</span><br><span class="line">    Arrays.sort(s);</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &lt; g.length &amp;&amp; j &lt; s.length)&#123;</span><br><span class="line">        <span class="keyword">if</span>(g[i] &lt;= s[j]) i++;</span><br><span class="line">        j++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> i;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Ͷ���ڴ�������</strong></p><p><a href="https://leetcode.com/problems/minimum-number-of-arrows-to-burst-balloons/description/" target="_blank" rel="noopener">Leetcode : 452. Minimum Number of Arrows to Burst Balloons (Medium)</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Input:</span><br><span class="line">[[10,16], [2,8], [1,6], [7,12]]</span><br><span class="line"></span><br><span class="line">Output:</span><br><span class="line">2</span><br></pre></td></tr></table></figure><p>��Ŀ������������һ��ˮƽ�����ϰڷţ������ص������ڴ�ֱ���������ᣬʹ��·���ϵ����򶼻���ơ������С��Ͷ���ڴ���ʹ�������򶼱����ơ�</p><p>��������Ͷ���ڣ�������ÿ��Ͷ����ʱ��������������</p><ol><li>����Ѿ�û�������ˣ�</li><li>����Ͷ�����ܹ�������������</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findMinArrowShots</span><span class="params">(<span class="keyword">int</span>[][] points)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(points.length == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    Arrays.sort(points,(a,b) -&gt; (a[<span class="number">1</span>] - b[<span class="number">1</span>]));</span><br><span class="line">    <span class="keyword">int</span> curPos = points[<span class="number">0</span>][<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">int</span> ret = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; points.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(points[i][<span class="number">0</span>] &lt;= curPos) &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        curPos = points[i][<span class="number">1</span>];</span><br><span class="line">        ret++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p><strong>��Ʊ���������</strong></p><p><a href="https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii/description/" target="_blank" rel="noopener">Leetcode : 122. Best Time to Buy and Sell Stock II (Easy)</a></p><p>��Ŀ������һ�ν��װ��������������������֮�䲻�ܽ�����С�</p><p>���� [a, b, c, d]������� a &lt;= b &lt;= c &lt;= d ����ô�������Ϊ d - a���� d - a = (d - c) + (c - b) + (b - a) ����˵����ʵ�һ�� prices[i] �� prices[i] - prices[i-1] &gt; 0����ô�Ͱ� prices[i] - prices[i-1] ��Ӽӵ������У��Ӷ��ھֲ����ŵ������Ҳ��֤ȫ�����š�</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(<span class="keyword">int</span>[] prices)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> profit = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; prices.length; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(prices[i] &gt; prices[i-<span class="number">1</span>]) profit += (prices[i] - prices[i-<span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> profit;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>��ֲ����</strong></p><p><a href="https://leetcode.com/problems/can-place-flowers/description/" target="_blank" rel="noopener">Leetcode : 605. Can Place Flowers (Easy)</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: flowerbed = [1,0,0,0,1], n = 1</span><br><span class="line">Output: True</span><br></pre></td></tr></table></figure><p>��Ŀ����������֮��������Ҫһ����λ�ļ��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">canPlaceFlowers</span><span class="params">(<span class="keyword">int</span>[] flowerbed, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; flowerbed.length; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(flowerbed[i] == <span class="number">1</span>) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">int</span> pre = i == <span class="number">0</span> ? <span class="number">0</span> : flowerbed[i - <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">int</span> next = i == flowerbed.length - <span class="number">1</span> ? <span class="number">0</span> : flowerbed[i + <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span>(pre == <span class="number">0</span> &amp;&amp; next == <span class="number">0</span>) &#123;</span><br><span class="line">            cnt++;</span><br><span class="line">            flowerbed[i] = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> cnt &gt;= n;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>�޸�һ������Ϊ�ǵݼ�����</strong></p><p><a href="https://leetcode.com/problems/non-decreasing-array/description/" target="_blank" rel="noopener">Leetcode : 665. Non-decreasing Array (Easy)</a></p><p>��Ŀ�������ж�һ�������ܲ���ֻ�޸�һ�����ͳ�Ϊ�ǵݼ����顣</p><p>�ڳ��� nums[i] &lt; nums[i - 1] ʱ����Ҫ���ǵ���Ӧ���޸�������ĸ�����ʹ�ñ����޸���ʹ i ֮ǰ�������Ϊ�ǵݼ����飬���� <strong>��Ӱ������Ĳ���</strong>�����ȿ����� nums[i - 1] = nums[i]����Ϊ����޸� nums[i] = nums[i - 1] �Ļ�����ô nums[i] �����������ô���п��ܱ� nums[i + 1] �󣬴Ӷ�Ӱ���˺�������������һ���Ƚ��ر��������� nums[i] &lt; nums[i - 2]��ֻ�޸� nums[i - 1] = nums[i] �����������Ϊ�ǵݼ���ֻ��ͨ���޸� nums[i] = nums[i - 1] ���С�</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">checkPossibility</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; nums.length; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(nums[i] &lt; nums[i - <span class="number">1</span>])&#123;</span><br><span class="line">            cnt++;</span><br><span class="line">            <span class="keyword">if</span>(i - <span class="number">2</span> &gt;= <span class="number">0</span> &amp;&amp; nums[i - <span class="number">2</span>] &gt; nums[i]) nums[i] = nums[i-<span class="number">1</span>];</span><br><span class="line">            <span class="keyword">else</span> nums[i - <span class="number">1</span>] = nums[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> cnt &lt;= <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>�ж��Ƿ�Ϊ�Ӵ�</strong></p><p><a href="https://leetcode.com/problems/is-subsequence/description/" target="_blank" rel="noopener">Leetcode : 392. Is Subsequence (Medium)</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">s = "abc", t = "ahbgdc"</span><br><span class="line">Return true.</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isSubsequence</span><span class="params">(String s, String t)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, pos = <span class="number">0</span>; i &lt; s.length(); i++, pos++) &#123;</span><br><span class="line">        pos = t.indexOf(s.charAt(i), pos);</span><br><span class="line">        <span class="keyword">if</span>(pos == -<span class="number">1</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>�ָ��ַ���ʹͬ���ַ�������һ��</strong></p><p><a href="https://leetcode.com/problems/partition-labels/description/" target="_blank" rel="noopener">Leetcode : 763. Partition Labels (Medium)</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Input: S = <span class="string">"ababcbacadefegdehijhklij"</span></span><br><span class="line">Output: [<span class="number">9</span>,<span class="number">7</span>,<span class="number">8</span>]</span><br><span class="line">Explanation:</span><br><span class="line">The partition is <span class="string">"ababcbaca"</span>, <span class="string">"defegde"</span>, <span class="string">"hijhklij"</span>.</span><br><span class="line">This is a partition so that each letter appears in at most one part.</span><br><span class="line">A partition like <span class="string">"ababcbacadefegde"</span>, <span class="string">"hijhklij"</span> is incorrect, because it splits S into less parts.</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Integer&gt; <span class="title">partitionLabels</span><span class="params">(String S)</span> </span>&#123;</span><br><span class="line">    List&lt;Integer&gt; ret = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="keyword">int</span>[] lastIdxs = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">26</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; S.length(); i++) lastIdxs[S.charAt(i) - <span class="string">'a'</span>] = i;</span><br><span class="line">    <span class="keyword">int</span> startIdx = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(startIdx &lt; S.length()) &#123;</span><br><span class="line">        <span class="keyword">int</span> endIdx = startIdx;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = startIdx; i &lt; S.length() &amp;&amp; i &lt;= endIdx; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> lastIdx = lastIdxs[S.charAt(i) - <span class="string">'a'</span>];</span><br><span class="line">            <span class="keyword">if</span>(lastIdx == i) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span>(lastIdx &gt; endIdx) endIdx = lastIdx;</span><br><span class="line">        &#125;</span><br><span class="line">        ret.add(endIdx - startIdx + <span class="number">1</span>);</span><br><span class="line">        startIdx = endIdx + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>������ߺ�����������</strong></p><p><a href="https://leetcode.com/problems/queue-reconstruction-by-height/description/" target="_blank" rel="noopener">Leetcode : 406. Queue Reconstruction by Height(Medium)</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Input:</span><br><span class="line">[[7,0], [4,4], [7,1], [5,0], [6,1], [5,2]]</span><br><span class="line"></span><br><span class="line">Output:</span><br><span class="line">[[5,0], [7,0], [5,2], [6,1], [4,4], [7,1]]</span><br></pre></td></tr></table></figure><p>��Ŀ������һ��ѧ������������ (h, k) ������h ��ʾ��ߣ�k ��ʾ����ǰ����� k ��ѧ������߱����߻��ߺ���һ���ߡ�</p><p>Ϊ����ÿ�β������ʱ��Ӱ������Ĳ�������߽ϸߵ�ѧ��Ӧ���������������������߽�С��ѧ��ԭ����ȷ����� k ��λ�ÿ��ܻ��ɵ� k+1 ��λ�á�</p><p>��߽���k ֵ����Ȼ���ź����˳�������еĵ� k ��λ���С�</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">int</span>[][] reconstructQueue(<span class="keyword">int</span>[][] people) &#123;</span><br><span class="line">    <span class="keyword">if</span>(people == <span class="keyword">null</span> || people.length == <span class="number">0</span> || people[<span class="number">0</span>].length == <span class="number">0</span>) <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">    Arrays.sort(people, <span class="keyword">new</span> Comparator&lt;<span class="keyword">int</span>[]&gt;() &#123;</span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compare</span><span class="params">(<span class="keyword">int</span>[] a, <span class="keyword">int</span>[] b)</span> </span>&#123;</span><br><span class="line">           <span class="keyword">if</span>(a[<span class="number">0</span>] == b[<span class="number">0</span>]) <span class="keyword">return</span> a[<span class="number">1</span>] - b[<span class="number">1</span>];</span><br><span class="line">           <span class="keyword">return</span> b[<span class="number">0</span>] - a[<span class="number">0</span>];</span><br><span class="line">       &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> n = people.length;</span><br><span class="line">    List&lt;<span class="keyword">int</span>[]&gt; tmp = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        tmp.add(people[i][<span class="number">1</span>], <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;people[i][<span class="number">0</span>], people[i][<span class="number">1</span>]&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span>[][] ret = <span class="keyword">new</span> <span class="keyword">int</span>[n][<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        ret[i][<span class="number">0</span>] = tmp.get(i)[<span class="number">0</span>];</span><br><span class="line">        ret[i][<span class="number">1</span>] = tmp.get(i)[<span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="˫ָ��"><a href="#˫ָ��" class="headerlink" title="˫ָ��"></a>˫ָ��</h2><p>˫ָ����Ҫ���ڱ������飬����ָ��ָ��ͬ��Ԫ�أ��Ӷ�Эͬ�������</p><p><strong>��һ���Ѿ�����������в��ҳ���������ʹ���ǵĺ�Ϊ 0</strong></p><p><a href="https://leetcode.com/problems/two-sum-ii-input-array-is-sorted/description/" target="_blank" rel="noopener">Leetcode ��167. Two Sum II - Input array is sorted (Easy)</a></p><p>ʹ��˫ָ�룬һ��ָ��ָ��Ԫ�ؽ�С��ֵ��һ��ָ��ָ��Ԫ�ؽϴ��ֵ��ָ���СԪ�ص�ָ���ͷ��β������ָ��ϴ�Ԫ�ص�ָ���β��ͷ������</p><p>�������ָ��ָ��Ԫ�صĺ� sum == target����ô�õ�Ҫ��Ľ������� sum &gt; target���ƶ��ϴ��Ԫ�أ�ʹ sum ��СһЩ����� sum &lt; target���ƶ���С��Ԫ�أ�ʹ sum ���һЩ��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">int</span>[] twoSum(<span class="keyword">int</span>[] numbers, <span class="keyword">int</span> target) &#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, j = numbers.length - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; j) &#123;</span><br><span class="line">        <span class="keyword">int</span> sum = numbers[i] + numbers[j];</span><br><span class="line">        <span class="keyword">if</span> (sum == target) <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;i + <span class="number">1</span>, j + <span class="number">1</span>&#125;;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (sum &lt; target) i++;</span><br><span class="line">        <span class="keyword">else</span> j--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>��ת�ַ����е�Ԫ���ַ�</strong></p><p><a href="https://leetcode.com/problems/reverse-vowels-of-a-string/description/" target="_blank" rel="noopener">Leetcode : 345. Reverse Vowels of a String (Easy)</a></p><p>ʹ��˫ָ�룬ָ�����ת������Ԫ���ַ���һ��ָ���ͷ��β������һ��ָ���β��ͷ������</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> HashSet&lt;Character&gt; vowels = <span class="keyword">new</span> HashSet&lt;&gt;(Arrays.asList(<span class="string">'a'</span>,<span class="string">'e'</span>,<span class="string">'i'</span>,<span class="string">'o'</span>,<span class="string">'u'</span>,<span class="string">'A'</span>,<span class="string">'E'</span>,<span class="string">'I'</span>,<span class="string">'O'</span>,<span class="string">'U'</span>));</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">reverseVowels</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(s.length() == <span class="number">0</span>) <span class="keyword">return</span> s;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, j = s.length() - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">char</span>[] result = <span class="keyword">new</span> <span class="keyword">char</span>[s.length()];</span><br><span class="line">    <span class="keyword">while</span>(i &lt;= j)&#123;</span><br><span class="line">        <span class="keyword">char</span> ci = s.charAt(i);</span><br><span class="line">        <span class="keyword">char</span> cj = s.charAt(j);</span><br><span class="line">        <span class="keyword">if</span>(!vowels.contains(ci))&#123;</span><br><span class="line">            result[i] = ci;</span><br><span class="line">            i++;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(!vowels.contains(cj))&#123;</span><br><span class="line">            result[j] = cj;</span><br><span class="line">            j--;</span><br><span class="line">        &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">            result[i] = cj;</span><br><span class="line">            result[j] = ci;</span><br><span class="line">            i++;</span><br><span class="line">            j--;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> String(result);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>����ƽ����</strong></p><p><a href="https://leetcode.com/problems/sum-of-square-numbers/description/" target="_blank" rel="noopener">Leetcode : 633. Sum of Square Numbers (Easy)</a></p><p>��Ŀ�������ж�һ�����Ƿ�Ϊ��������ƽ���ͣ����� 5 = 1<sup>2</sup> + 2<sup>2</sup>��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">judgeSquareSum</span><span class="params">(<span class="keyword">int</span> c)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> left = <span class="number">0</span>, right = (<span class="keyword">int</span>) Math.sqrt(c);</span><br><span class="line">    <span class="keyword">while</span>(left &lt;= right)&#123;</span><br><span class="line">        <span class="keyword">int</span> powSum = left * left + right * right;</span><br><span class="line">        <span class="keyword">if</span>(powSum == c) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(powSum &gt; c) right--;</span><br><span class="line">        <span class="keyword">else</span> left++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>�����ַ���</strong></p><p><a href="https://leetcode.com/problems/valid-palindrome-ii/description/" target="_blank" rel="noopener">Leetcode : 680. Valid Palindrome II (Easy)</a></p><p>��Ŀ�������ַ�������ɾ��һ���ַ����ж��Ƿ��ܹ��ɻ����ַ�����</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">validPalindrome</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, j = s.length() -<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &lt; j)&#123;</span><br><span class="line">        <span class="keyword">if</span>(s.charAt(i) != s.charAt(j))&#123;</span><br><span class="line">            <span class="keyword">return</span> isPalindrome(s, i, j - <span class="number">1</span>) || isPalindrome(s, i + <span class="number">1</span>, j);</span><br><span class="line">        &#125;</span><br><span class="line">        i++;</span><br><span class="line">        j--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">isPalindrome</span><span class="params">(String s, <span class="keyword">int</span> l, <span class="keyword">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(l &lt; r)&#123;</span><br><span class="line">        <span class="keyword">if</span>(s.charAt(l) != s.charAt(r))</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        l++;</span><br><span class="line">        r--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>�鲢������������</strong></p><p><a href="https://leetcode.com/problems/merge-sorted-array/description/" target="_blank" rel="noopener">Leetcode : 88. Merge Sorted Array (Easy)</a></p><p>��Ŀ�������ѹ鲢����浽��һ��������</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span>[] nums1, <span class="keyword">int</span> m, <span class="keyword">int</span>[] nums2, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = m - <span class="number">1</span>, j = n - <span class="number">1</span>; <span class="comment">// ��Ҫ��β��ʼ������������ nums1 �Ϲ鲢�õ���ֵ�Ḳ�ǻ�δ���й鲢�Ƚϵ�ֵ</span></span><br><span class="line">    <span class="keyword">int</span> idx = m + n - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &gt;= <span class="number">0</span> || j &gt;= <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(i &lt; <span class="number">0</span>) nums1[idx] = nums2[j--];</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(j &lt; <span class="number">0</span>) nums1[idx] = nums1[i--];</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(nums1[i] &gt; nums2[j]) nums1[idx] = nums1[i--];</span><br><span class="line">        <span class="keyword">else</span> nums1[idx] = nums2[j--];</span><br><span class="line">        idx--;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>�ж������Ƿ���ڻ�</strong></p><p><a href="https://leetcode.com/problems/linked-list-cycle/description/" target="_blank" rel="noopener">Leetcode : 141. Linked List Cycle (Easy)</a></p><p>ʹ��˫ָ�룬һ��ָ��ÿ���ƶ�һ���ڵ㣬һ��ָ��ÿ���ƶ������ڵ㣬������ڻ�����ô������ָ��һ����������</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hasCycle</span><span class="params">(ListNode head)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(head == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    ListNode l1 = head, l2 = head.next;</span><br><span class="line">    <span class="keyword">while</span>(l1 != <span class="keyword">null</span> &amp;&amp; l2 != <span class="keyword">null</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(l1 == l2) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        l1 = l1.next;</span><br><span class="line">        <span class="keyword">if</span>(l2.next == <span class="keyword">null</span>) <span class="keyword">break</span>;</span><br><span class="line">        l2 = l2.next.next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>�������</strong></p><p><a href="https://leetcode.com/problems/longest-word-in-dictionary-through-deleting/description/" target="_blank" rel="noopener">Leetcode : 524. Longest Word in Dictionary through Deleting (Medium)</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Input:</span><br><span class="line">s = &quot;abpcplea&quot;, d = [&quot;ale&quot;,&quot;apple&quot;,&quot;monkey&quot;,&quot;plea&quot;]</span><br><span class="line"></span><br><span class="line">Output:</span><br><span class="line">&quot;apple&quot;</span><br></pre></td></tr></table></figure><p>��Ŀ����������ɾ�� s �е�һЩ�ַ���ʹ������Ϊ�ַ����б� d �е�һ���ַ�����Ҫ���� d ���ҵ�������������ַ�����</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">findLongestWord</span><span class="params">(String s, List&lt;String&gt; d)</span> </span>&#123;</span><br><span class="line">    String ret = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">for</span> (String str : d) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>; i &lt; s.length() &amp;&amp; j &lt; str.length(); i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (s.charAt(i) == str.charAt(j)) j++;</span><br><span class="line">            <span class="keyword">if</span> (j == str.length()) &#123;</span><br><span class="line">                <span class="keyword">if</span> (ret.length() &lt; str.length()</span><br><span class="line">                        || (ret.length() == str.length() &amp;&amp; ret.compareTo(str) &gt; <span class="number">0</span>)) &#123;</span><br><span class="line">                    ret = str;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="����"><a href="#����" class="headerlink" title="����"></a>����</h2><h3 id="����ѡ��"><a href="#����ѡ��" class="headerlink" title="����ѡ��"></a>����ѡ��</h3><p>һ��������� <strong>Kth Element</strong> ���⣬������ O(n) ʱ�临�Ӷȣ�O(1) �ռ临�Ӷ������⹤����</p><p>���������һ��������ѡ��һ����Ҫ�ȴ������飬����������ʱ�临�Ӷ�Ϊ O(n<sup>2</sup>)��</p><h3 id="������"><a href="#������" class="headerlink" title="������"></a>������</h3><p>������������� <strong>TopK Elements</strong> ���⣬ͨ��ά��һ����СΪ K �Ķѣ����е�Ԫ�ؾ��� TopK Elements����Ȼ��Ҳ����������� Kth Element ���⣬��Ϊ�����ѵ��Ǹ�Ԫ�ؾ��� Kth Element������ѡ��Ҳ������� TopK Elements ���⣬��Ϊ�ҵ� Kth Element ֮���ٱ���һ�����飬����С�ڵ���  Kth Element ��Ԫ�ض��� TopK Elements�����Կ���������ѡ��Ͷ����򶼿������ Kth Element �� TopK Elements ���⡣</p><p><strong>Kth Element</strong></p><p><a href="https://leetcode.com/problems/kth-largest-element-in-an-array/description/" target="_blank" rel="noopener">Leetocde : 215. Kth Largest Element in an Array (Medium)</a></p><p><strong>����</strong>��ʱ�临�Ӷ� O(nlgn)���ռ临�Ӷ� O(1) �ⷨ</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findKthLargest</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> N = nums.length;</span><br><span class="line">        Arrays.sort(nums);</span><br><span class="line">        <span class="keyword">return</span> nums[N - k];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>������</strong>��ʱ�临�Ӷ� O(nlgk)���ռ临�Ӷ� O(k)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findKthLargest</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">    PriorityQueue&lt;Integer&gt; pq = <span class="keyword">new</span> PriorityQueue&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> val : nums) &#123;</span><br><span class="line">        pq.offer(val);</span><br><span class="line">        <span class="keyword">if</span>(pq.size() &gt; k) &#123;</span><br><span class="line">            pq.poll();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> pq.peek();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>����ѡ��</strong>��ʱ�临�Ӷ� O(n)���ռ临�Ӷ� O(1)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findKthLargest</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">        k = nums.length - k;</span><br><span class="line">        <span class="keyword">int</span> lo = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> hi = nums.length - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (lo &lt; hi) &#123;</span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">int</span> j = partition(nums, lo, hi);</span><br><span class="line">            <span class="keyword">if</span>(j &lt; k) &#123;</span><br><span class="line">                lo = j + <span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (j &gt; k) &#123;</span><br><span class="line">                hi = j - <span class="number">1</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> nums[k];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">partition</span><span class="params">(<span class="keyword">int</span>[] a, <span class="keyword">int</span> lo, <span class="keyword">int</span> hi)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> i = lo;</span><br><span class="line">        <span class="keyword">int</span> j = hi + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(<span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="keyword">while</span>(i &lt; hi &amp;&amp; less(a[++i], a[lo]));</span><br><span class="line">            <span class="keyword">while</span>(j &gt; lo &amp;&amp; less(a[lo], a[--j]));</span><br><span class="line">            <span class="keyword">if</span>(i &gt;= j) &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            exch(a, i, j);</span><br><span class="line">        &#125;</span><br><span class="line">        exch(a, lo, j);</span><br><span class="line">        <span class="keyword">return</span> j;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">exch</span><span class="params">(<span class="keyword">int</span>[] a, <span class="keyword">int</span> i, <span class="keyword">int</span> j)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">final</span> <span class="keyword">int</span> tmp = a[i];</span><br><span class="line">        a[i] = a[j];</span><br><span class="line">        a[j] = tmp;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">less</span><span class="params">(<span class="keyword">int</span> v, <span class="keyword">int</span> w)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> v &lt; w;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Ͱ����"><a href="#Ͱ����" class="headerlink" title="Ͱ����"></a>Ͱ����</h3><p><strong>�ҳ�����Ƶ������ k ����</strong></p><p><a href="https://leetcode.com/problems/top-k-frequent-elements/description/" target="_blank" rel="noopener">Leetcode : 347. Top K Frequent Elements (Medium)</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Integer&gt; <span class="title">topKFrequent</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">    List&lt;Integer&gt; ret = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    Map&lt;Integer, Integer&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> num : nums) &#123;</span><br><span class="line">        map.put(num, map.getOrDefault(num, <span class="number">0</span>) + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    List&lt;Integer&gt;[] bucket = <span class="keyword">new</span> List[nums.length + <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> key : map.keySet()) &#123;</span><br><span class="line">        <span class="keyword">int</span> frequency = map.get(key);</span><br><span class="line">        <span class="keyword">if</span>(bucket[frequency] == <span class="keyword">null</span>) &#123;</span><br><span class="line">            bucket[frequency] = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        &#125;</span><br><span class="line">        bucket[frequency].add(key);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = bucket.length - <span class="number">1</span>; i &gt;= <span class="number">0</span> &amp;&amp; ret.size() &lt; k; i--) &#123;</span><br><span class="line">        <span class="keyword">if</span>(bucket[i] != <span class="keyword">null</span>) &#123;</span><br><span class="line">            ret.addAll(bucket[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="����-1"><a href="#����-1" class="headerlink" title="����"></a>����</h2><p>������������͹�����������㷺����������ͼ�У��������ǵ�Ӧ��ԶԶ��ֹ��ˡ�</p><h3 id="BFS"><a href="#BFS" class="headerlink" title="BFS"></a>BFS</h3><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/4ff355cf-9a7f-4468-af43-e5b02038facc.jpg" alt=""></p><p>����������������������е���һ��һ��ؽ��б������ӽڵ� 0 ������������ 6��2��1 �� 5 ���ĸ��½ڵ㡣</p><p>������ 6 ��ʼ�������õ��ڵ� 4 ���� 2 ��ʼ������û����һ���ڵ㣻�� 1 ��ʼ������û����һ���ڵ㣻�� 5 ��ʼ�������õ� 3 �� 4 �ڵ㡣��һ���ܹ��õ������½ڵ㣺4 �� 3 ��</p><p>�������½ڵ�������������ı���������</p><p>���Կ�����ÿһ�ֱ����Ľڵ㶼����ڵ�·��������ͬ���� d<sub>i</sub> ��ʾ�� i ���ڵ�����ڵ��·�����ȣ��Ƶ���һ�����ۣ������ȱ����Ľڵ� i �������Ľڵ� j���� d<sub>i</sub>&lt;=d<sub>j</sub>������������ۣ�����������·�� <strong>���Ž�</strong> ���⣺��һ�α�����Ŀ�Ľڵ㣬����������·��Ϊ���·�����������������֮���ٱ�����Ŀ�Ľڵ㣬��������·���Ͳ������·����</p><p>�ڳ���ʵ�� BFS ʱ��Ҫ�����������⣺</p><ul><li>���У������洢ÿһ�ֱ����Ľڵ�</li><li>��ǣ����ڱ������ýڵ㣬Ӧ�ý�����ǣ���ֹ�ظ�������</li></ul><p><strong>�����������д�ԭ�㵽�ض�������·������</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[[1,1,0,1],</span><br><span class="line">[1,0,1,0],</span><br><span class="line">[1,1,1,1],</span><br><span class="line">[1,0,1,1]]</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">minPathLength</span><span class="params">(<span class="keyword">int</span>[][] grids, <span class="keyword">int</span> tr, <span class="keyword">int</span> tc)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span>[][] next = &#123;&#123;<span class="number">1</span>, <span class="number">0</span>&#125;, &#123;-<span class="number">1</span>, <span class="number">0</span>&#125;, &#123;<span class="number">0</span>, <span class="number">1</span>&#125;, &#123;<span class="number">0</span>, -<span class="number">1</span>&#125;&#125;;</span><br><span class="line">    <span class="keyword">int</span> m = grids.length, n = grids[<span class="number">0</span>].length;</span><br><span class="line">    Queue&lt;Position&gt; queue = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">    queue.add(<span class="keyword">new</span> Position(<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>));</span><br><span class="line">    <span class="keyword">while</span> (!queue.isEmpty()) &#123;</span><br><span class="line">        Position pos = queue.poll();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line">            Position nextPos = <span class="keyword">new</span> Position(pos.r + next[i][<span class="number">0</span>], pos.c + next[i][<span class="number">1</span>], pos.length + <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (nextPos.r &lt; <span class="number">0</span> || nextPos.r &gt;= m || nextPos.c &lt; <span class="number">0</span> || nextPos.c &gt;= n) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span> (grids[nextPos.r][nextPos.c] != <span class="number">1</span>) <span class="keyword">continue</span>;</span><br><span class="line">            grids[nextPos.r][nextPos.c] = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">if</span> (nextPos.r == tr &amp;&amp; nextPos.c == tc) <span class="keyword">return</span> nextPos.length;</span><br><span class="line">            queue.add(nextPos);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">Position</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> r, c, length;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Position</span><span class="params">(<span class="keyword">int</span> r, <span class="keyword">int</span> c, <span class="keyword">int</span> length)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.r = r;</span><br><span class="line">        <span class="keyword">this</span>.c = c;</span><br><span class="line">        <span class="keyword">this</span>.length = length;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="DFS"><a href="#DFS" class="headerlink" title="DFS"></a>DFS</h3><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/f7f7e3e5-7dd4-4173-9999-576b9e2ac0a2.png" alt=""></p><p>�����������һ��һ�������ÿһ��������������½ڵ㣬Ҫ�ö����ȴ洢�����Ա���һ�������ʱ���ٱ�������������������ڱ�����һ���½ڵ�ʱ������½ڵ���б������ӽڵ� 0 ������ʼ�������õ����½ڵ� 6 ʱ��������½ڵ� 6 ���б������õ��½ڵ� 4����˷��������ַ�ʽ�����½ڵ㣬ֱ��û���½ڵ��ˣ���ʱ���ء����ص����ڵ� 0 ������ǣ������Ը��ڵ� 0 ���б������õ��½ڵ� 2��Ȼ��������ϲ��衣</p><p>��һ���ڵ������ʹ�� DFS ��һ��ͼ���б���ʱ���ܹ��������Ľڵ㶼�Ǵӳ�ʼ�ڵ�ɴ�ģ�DFS ������������� <strong>�ɴ���</strong> ���⡣</p><p>�ڳ���ʵ�� DFS ʱ��Ҫ�����������⣺</p><ul><li>ջ����ջ�����浱ǰ�ڵ���Ϣ���������½ڵ㷵��ʱ�ܹ�����������ǰ�ڵ㡣Ҳ����ʹ�õݹ�ջ��</li><li>��ǣ��� BFS һ��ͬ����Ҫ���Ѿ��������ýڵ���б�ǡ�</li></ul><p><strong>����������ͨ���</strong></p><p><a href="https://leetcode.com/problems/max-area-of-island/description/" target="_blank" rel="noopener">Leetcode : 695. Max Area of Island (Easy)</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[[0,0,1,0,0,0,0,1,0,0,0,0,0],</span><br><span class="line">[0,0,0,0,0,0,0,1,1,1,0,0,0],</span><br><span class="line">[0,1,1,0,1,0,0,0,0,0,0,0,0],</span><br><span class="line">[0,1,0,0,1,1,0,0,1,0,1,0,0],</span><br><span class="line">[0,1,0,0,1,1,0,0,1,1,1,0,0],</span><br><span class="line">[0,0,0,0,0,0,0,0,0,0,1,0,0],</span><br><span class="line">[0,0,0,0,0,0,0,1,1,1,0,0,0],</span><br><span class="line">[0,0,0,0,0,0,0,1,1,0,0,0,0]]</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxAreaOfIsland</span><span class="params">(<span class="keyword">int</span>[][] grid)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> m = grid.length, n = grid[<span class="number">0</span>].length;</span><br><span class="line">    <span class="keyword">int</span> max = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(grid[i][j] == <span class="number">1</span>) max = Math.max(max, dfs(grid, i, j));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> max;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span>[][] grid, <span class="keyword">int</span> i, <span class="keyword">int</span> j)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> m = grid.length, n = grid[<span class="number">0</span>].length;</span><br><span class="line">    <span class="keyword">if</span>(i &lt; <span class="number">0</span> || i &gt;= m || j &lt; <span class="number">0</span> || j &gt;= n) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(grid[i][j] == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    grid[i][j] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> dfs(grid, i + <span class="number">1</span>, j) + dfs(grid, i - <span class="number">1</span>, j) + dfs(grid, i, j + <span class="number">1</span>) + dfs(grid, i, j - <span class="number">1</span>) + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>ͼ����ͨ����</strong></p><p><a href="https://leetcode.com/problems/friend-circles/description/" target="_blank" rel="noopener">Leetcode : 547. Friend Circles (Medium)</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Input:</span><br><span class="line">[[1,1,0],</span><br><span class="line"> [1,1,0],</span><br><span class="line"> [0,0,1]]</span><br><span class="line">Output: 2</span><br><span class="line">Explanation:The 0th and 1st students are direct friends, so they are in a friend circle.</span><br><span class="line">The 2nd student himself is in a friend circle. So return 2.</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findCircleNum</span><span class="params">(<span class="keyword">int</span>[][] M)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = M.length;</span><br><span class="line">    <span class="keyword">int</span> ret = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">boolean</span>[] hasFind = <span class="keyword">new</span> <span class="keyword">boolean</span>[n];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(!hasFind[i]) &#123;</span><br><span class="line">            dfs(M, i, hasFind);</span><br><span class="line">            ret++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span>[][] M, <span class="keyword">int</span> i, <span class="keyword">boolean</span>[] hasFind)</span> </span>&#123;</span><br><span class="line">    hasFind[i] = <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">int</span> n = M.length;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; n; k++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(M[i][k] == <span class="number">1</span> &amp;&amp; !hasFind[k]) &#123;</span><br><span class="line">            dfs(M, k, hasFind);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>�����е���ͨ��������</strong></p><p><a href="https://leetcode.com/problems/number-of-islands/description/" target="_blank" rel="noopener">Leetcode : 200. Number of Islands (Medium)</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">11110</span><br><span class="line">11010</span><br><span class="line">11000</span><br><span class="line">00000</span><br><span class="line">Answer: 1</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> m, n;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span>[][] direction = &#123;&#123;<span class="number">0</span>, <span class="number">1</span>&#125;, &#123;<span class="number">0</span>, -<span class="number">1</span>&#125;, &#123;<span class="number">1</span>, <span class="number">0</span>&#125;, &#123;-<span class="number">1</span>, <span class="number">0</span>&#125;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">numIslands</span><span class="params">(<span class="keyword">char</span>[][] grid)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (grid == <span class="keyword">null</span> || grid.length == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    m = grid.length;</span><br><span class="line">    n = grid[<span class="number">0</span>].length;</span><br><span class="line">    <span class="keyword">int</span> ret = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (grid[i][j] == <span class="string">'1'</span>) &#123;</span><br><span class="line">                dfs(grid, i, j);</span><br><span class="line">                ret++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">char</span>[][] grid, <span class="keyword">int</span> i, <span class="keyword">int</span> j)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (i &lt; <span class="number">0</span> || i &gt;= m || j &lt; <span class="number">0</span> || j &gt;= n || grid[i][j] == <span class="string">'0'</span>) <span class="keyword">return</span>;</span><br><span class="line">    grid[i][j] = <span class="string">'0'</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; direction.length; k++) &#123;</span><br><span class="line">        dfs(grid, i + direction[k][<span class="number">0</span>], j + direction[k][<span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>��������������дӸ���Ҷ�ӵ�·��</strong></p><p><a href="https://leetcode.com/problems/binary-tree-paths/description/" target="_blank" rel="noopener">Leetcode : 257. Binary Tree Paths (Easy)</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">  1</span><br><span class="line">/  \</span><br><span class="line">2    3</span><br><span class="line">\</span><br><span class="line">  5</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">["1-&gt;2-&gt;5", "1-&gt;3"]</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> List&lt;String&gt; <span class="title">binaryTreePaths</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">    List&lt;String&gt; ret = <span class="keyword">new</span> ArrayList();</span><br><span class="line">    <span class="keyword">if</span>(root == <span class="keyword">null</span>) <span class="keyword">return</span> ret;</span><br><span class="line">    dfs(root, <span class="string">""</span>, ret);</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(TreeNode root, String prefix, List&lt;String&gt; ret)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(root == <span class="keyword">null</span>) <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span>(root.left == <span class="keyword">null</span> &amp;&amp; root.right == <span class="keyword">null</span>)&#123;</span><br><span class="line">        ret.add(prefix + root.val);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    prefix += (root.val + <span class="string">"-&gt;"</span>);</span><br><span class="line">    dfs(root.left, prefix, ret);</span><br><span class="line">    dfs(root.right, prefix, ret);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>���������</strong></p><p><a href="https://leetcode.com/problems/surrounded-regions/description/" target="_blank" rel="noopener">Leetcode : 130. Surrounded Regions (Medium)</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">For example,</span><br><span class="line">X X X X</span><br><span class="line">X O O X</span><br><span class="line">X X O X</span><br><span class="line">X O X X</span><br><span class="line"></span><br><span class="line">After running your function, the board should be:</span><br><span class="line">X X X X</span><br><span class="line">X X X X</span><br><span class="line">X X X X</span><br><span class="line">X O X X</span><br></pre></td></tr></table></figure><p>��Ŀ������ʹ�ñ� ‘X’ �� ‘O’ ת��Ϊ ‘X’��</p><p>���������࣬ʣ�µľ�������ˡ�</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">int</span>[][] direction = &#123;&#123;<span class="number">0</span>, <span class="number">1</span>&#125;, &#123;<span class="number">0</span>, -<span class="number">1</span>&#125;, &#123;<span class="number">1</span>, <span class="number">0</span>&#125;, &#123;-<span class="number">1</span>, <span class="number">0</span>&#125;&#125;;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> m, n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">solve</span><span class="params">(<span class="keyword">char</span>[][] board)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (board == <span class="keyword">null</span> || board.length == <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">    m = board.length;</span><br><span class="line">    n = board[<span class="number">0</span>].length;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">        dfs(board, i, <span class="number">0</span>);</span><br><span class="line">        dfs(board, i, n - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        dfs(board, <span class="number">0</span>, i);</span><br><span class="line">        dfs(board, m - <span class="number">1</span>, i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (board[i][j] == <span class="string">'T'</span>) board[i][j] = <span class="string">'O'</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (board[i][j] == <span class="string">'O'</span>) board[i][j] = <span class="string">'X'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">char</span>[][] board, <span class="keyword">int</span> r, <span class="keyword">int</span> c)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (r &lt; <span class="number">0</span> || r &gt;= m || c &lt; <span class="number">0</span> || c &gt;= n || board[r][c] != <span class="string">'O'</span>) <span class="keyword">return</span>;</span><br><span class="line">    board[r][c] = <span class="string">'T'</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; direction.length; i++) &#123;</span><br><span class="line">        dfs(board, r + direction[i][<span class="number">0</span>], c + direction[i][<span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>�����������ܵ��������</strong></p><p><a href="https://leetcode.com/problems/pacific-atlantic-water-flow/description/" target="_blank" rel="noopener">Leetcode : 417. Pacific Atlantic Water Flow (Medium)</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Given the following 5x5 matrix:</span><br><span class="line"></span><br><span class="line">  Pacific \~   \~   \~   \~   \~ </span><br><span class="line">       \~  1   2   2   3  (5) *</span><br><span class="line">       \~  3   2   3  (4) (4) *</span><br><span class="line">       \~  2   4  (5)  3   1  *</span><br><span class="line">       \~ (6) (7)  1   4   5  *</span><br><span class="line">       \~ (5)  1   1   2   4  *</span><br><span class="line">          *   *   *   *   * Atlantic</span><br><span class="line"></span><br><span class="line">Return:</span><br><span class="line">[[0, 4], [1, 3], [1, 4], [2, 2], [3, 0], [3, 1], [4, 0]] (positions with parentheses in above matrix).</span><br></pre></td></tr></table></figure><p>��Ŀ��������ߺ��ϱ���̫ƽ���ұߺ��±��Ǵ������ڲ������ִ����Σ����θߵĵط���ˮ�ܹ������͵ĵط������ˮ�ܹ�����̫ƽ��ʹ����������λ�á�</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> m, n;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span>[][] matrix;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span>[][] direction = &#123;&#123;<span class="number">0</span>, <span class="number">1</span>&#125;, &#123;<span class="number">0</span>, -<span class="number">1</span>&#125;, &#123;<span class="number">1</span>, <span class="number">0</span>&#125;, &#123;-<span class="number">1</span>, <span class="number">0</span>&#125;&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> List&lt;<span class="keyword">int</span>[]&gt; pacificAtlantic(<span class="keyword">int</span>[][] matrix) &#123;</span><br><span class="line">    List&lt;<span class="keyword">int</span>[]&gt; ret = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="keyword">if</span> (matrix == <span class="keyword">null</span> || matrix.length == <span class="number">0</span>) <span class="keyword">return</span> ret;</span><br><span class="line">    <span class="keyword">this</span>.m = matrix.length;</span><br><span class="line">    <span class="keyword">this</span>.n = matrix[<span class="number">0</span>].length;</span><br><span class="line">    <span class="keyword">this</span>.matrix = matrix;</span><br><span class="line">    <span class="keyword">boolean</span>[][] canReachP = <span class="keyword">new</span> <span class="keyword">boolean</span>[m][n];</span><br><span class="line">    <span class="keyword">boolean</span>[][] canReachA = <span class="keyword">new</span> <span class="keyword">boolean</span>[m][n];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">        dfs(i, <span class="number">0</span>, canReachP);</span><br><span class="line">        dfs(i, n - <span class="number">1</span>, canReachA);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        dfs(<span class="number">0</span>, i, canReachP);</span><br><span class="line">        dfs(m - <span class="number">1</span>, i, canReachA);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (canReachP[i][j] &amp;&amp; canReachA[i][j]) &#123;</span><br><span class="line">                ret.add(<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;i, j&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> r, <span class="keyword">int</span> c, <span class="keyword">boolean</span>[][] canReach)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(canReach[r][c]) <span class="keyword">return</span>;</span><br><span class="line">    canReach[r][c] = <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; direction.length; i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> nextR = direction[i][<span class="number">0</span>] + r;</span><br><span class="line">        <span class="keyword">int</span> nextC = direction[i][<span class="number">1</span>] + c;</span><br><span class="line">        <span class="keyword">if</span> (nextR &lt; <span class="number">0</span> || nextR &gt;= m || nextC &lt; <span class="number">0</span> || nextC &gt;= n</span><br><span class="line">                || matrix[r][c] &gt; matrix[nextR][nextC]) <span class="keyword">continue</span>;</span><br><span class="line">        dfs(nextR, nextC, canReach);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>N �ʺ�</strong></p><p><a href="https://leetcode.com/problems/n-queens/description/" target="_blank" rel="noopener">Leetcode : 51. N-Queens (Hard)</a></p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/1f080e53-4758-406c-bb5f-dbedf89b63ce.jpg" alt=""></p><p>��Ŀ�������� n*n �ľ����аڷ� n ���ʺ󣬲���ÿ���ʺ�����ͬһ�У�ͬһ�У�ͬһ�Խ����ϣ�Ҫ������е� n �ʺ�⡣</p><p>һ��һ�еذڷţ���ȷ��һ���е��Ǹ��ʺ�Ӧ�ð�����һ��ʱ����Ҫ���������������ȷ��ĳһ���Ƿ�Ϸ����������������ֱ�Ϊ���б�����顢45 �ȶԽ��߱������� 135 �ȶԽ��߱�����顣</p><p>45 �ȶԽ��߱�������ά��Ϊ 2*n - 1��ͨ����ͼ������ȷ (r,c) ��λ�����ڵ������±�Ϊ r + c��</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/85583359-1b45-45f2-9811-4f7bb9a64db7.jpg" alt=""></p><p>135 �ȶԽ��߱�������ά��Ҳ�� 2*n - 1��(r,c) ��λ�����ڵ������±�Ϊ n - 1 - (r - c)��</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/9e80f75a-b12b-4344-80c8-1f9ccc2d5246.jpg" alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> List&lt;List&lt;String&gt;&gt; ret;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">char</span>[][] nQueens;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">boolean</span>[] colUsed;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">boolean</span>[] diagonals45Used;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">boolean</span>[] diagonals135Used;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> List&lt;List&lt;String&gt;&gt; solveNQueens(<span class="keyword">int</span> n) &#123;</span><br><span class="line">    ret = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    nQueens = <span class="keyword">new</span> <span class="keyword">char</span>[n][n];</span><br><span class="line">    Arrays.fill(nQueens, <span class="string">'.'</span>);</span><br><span class="line">    colUsed = <span class="keyword">new</span> <span class="keyword">boolean</span>[n];</span><br><span class="line">    diagonals45Used = <span class="keyword">new</span> <span class="keyword">boolean</span>[<span class="number">2</span> * n - <span class="number">1</span>];</span><br><span class="line">    diagonals135Used = <span class="keyword">new</span> <span class="keyword">boolean</span>[<span class="number">2</span> * n - <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">this</span>.n = n;</span><br><span class="line">    backstracking(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">backstracking</span><span class="params">(<span class="keyword">int</span> row)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (row == n) &#123;</span><br><span class="line">        List&lt;String&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">char</span>[] chars : nQueens) &#123;</span><br><span class="line">            list.add(<span class="keyword">new</span> String(chars));</span><br><span class="line">        &#125;</span><br><span class="line">        ret.add(list);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> col = <span class="number">0</span>; col &lt; n; col++) &#123;</span><br><span class="line">        <span class="keyword">int</span> diagonals45Idx = row + col;</span><br><span class="line">        <span class="keyword">int</span> diagonals135Idx = n - <span class="number">1</span> - (row - col);</span><br><span class="line">        <span class="keyword">if</span> (colUsed[col] || diagonals45Used[diagonals45Idx] || diagonals135Used[diagonals135Idx]) &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        nQueens[row][col] = <span class="string">'Q'</span>;</span><br><span class="line">        colUsed[col] = diagonals45Used[diagonals45Idx] = diagonals135Used[diagonals135Idx] = <span class="keyword">true</span>;</span><br><span class="line">        backstracking(row + <span class="number">1</span>);</span><br><span class="line">        colUsed[col] = diagonals45Used[diagonals45Idx] = diagonals135Used[diagonals135Idx] = <span class="keyword">false</span>;</span><br><span class="line">        nQueens[row][col] = <span class="string">'.'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Backtracking"><a href="#Backtracking" class="headerlink" title="Backtracking"></a>Backtracking</h3><p>������ DFS ��һ�֣����������ڱ���ͼ�Ľڵ��ϣ������������ <strong>�������</strong> ���⣬������ { ‘a’,’b’,’c’ } �����ַ�������������������ַ����еõ����ַ�����</p><p>�ڳ���ʵ��ʱ��������Ҫע���Ԫ�ؽ��б�ǵ����⡣ʹ�õݹ�ʵ�ֵĻ��ݣ��ڷ���һ����Ԫ�ؽ����µĵݹ���ã���ʱ��Ҫ����Ԫ�ر��Ϊ�Ѿ����ʣ����������ڼ����ݹ����ʱ�����ظ����ʸ�Ԫ�أ������ڵݹ鷵��ʱ����Ҫ����Ԫ�ر��Ϊδ���ʣ���Ϊֻ��Ҫ��֤��һ���ݹ����в�ͬʱ����һ��Ԫ�أ����ڲ�ͬ�ĵݹ����ǿ��Է����Ѿ����ʹ����ǲ��ڵ�ǰ�ݹ����е�Ԫ�ء�</p><p><strong>���ּ������</strong></p><p><a href="https://leetcode.com/problems/letter-combinations-of-a-phone-number/description/" target="_blank" rel="noopener">Leetcode : 17. Letter Combinations of a Phone Number (Medium)</a></p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/a3f34241-bb80-4879-8ec9-dff2d81b514e.jpg" alt=""></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input:Digit string "23"</span><br><span class="line">Output: ["ad", "ae", "af", "bd", "be", "bf", "cd", "ce", "cf"].</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String[] KEYS = &#123;<span class="string">""</span>, <span class="string">""</span>, <span class="string">"abc"</span>, <span class="string">"def"</span>, <span class="string">"ghi"</span>, <span class="string">"jkl"</span>, <span class="string">"mno"</span>, <span class="string">"pqrs"</span>, <span class="string">"tuv"</span>, <span class="string">"wxyz"</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;String&gt; <span class="title">letterCombinations</span><span class="params">(String digits)</span> </span>&#123;</span><br><span class="line">    List&lt;String&gt; ret = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="keyword">if</span> (digits != <span class="keyword">null</span> &amp;&amp; digits.length() != <span class="number">0</span>) &#123;</span><br><span class="line">        combination(<span class="string">""</span>, digits, <span class="number">0</span>, ret);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">combination</span><span class="params">(String prefix, String digits, <span class="keyword">int</span> offset, List&lt;String&gt; ret)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (offset == digits.length()) &#123;</span><br><span class="line">        ret.add(prefix);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    String letters = KEYS[digits.charAt(offset) - <span class="string">'0'</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">char</span> c : letters.toCharArray()) &#123;</span><br><span class="line">        combination(prefix + c, digits, offset + <span class="number">1</span>, ret);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>�ھ�����Ѱ���ַ���</strong></p><p><a href="https://leetcode.com/problems/word-search/description/" target="_blank" rel="noopener">Leetcode : 79. Word Search (Medium)</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">For example,</span><br><span class="line">Given board =</span><br><span class="line">[</span><br><span class="line">  ['A','B','C','E'],</span><br><span class="line">  ['S','F','C','S'],</span><br><span class="line">  ['A','D','E','E']</span><br><span class="line">]</span><br><span class="line">word = "ABCCED", -&gt; returns true,</span><br><span class="line">word = "SEE", -&gt; returns true,</span><br><span class="line">word = "ABCB", -&gt; returns false.</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span>[][] shift = &#123;&#123;<span class="number">1</span>, <span class="number">0</span>&#125;, &#123;-<span class="number">1</span>, <span class="number">0</span>&#125;, &#123;<span class="number">0</span>, <span class="number">1</span>&#125;, &#123;<span class="number">0</span>, -<span class="number">1</span>&#125;&#125;;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span>[][] visited;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> m;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">exist</span><span class="params">(<span class="keyword">char</span>[][] board, String word)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (word == <span class="keyword">null</span> || word.length() == <span class="number">0</span>) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">if</span> (board == <span class="keyword">null</span> || board.length == <span class="number">0</span> || board[<span class="number">0</span>].length == <span class="number">0</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    m = board.length;</span><br><span class="line">    n = board[<span class="number">0</span>].length;</span><br><span class="line">    visited = <span class="keyword">new</span> <span class="keyword">boolean</span>[m][n];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (dfs(board, word, <span class="number">0</span>, i, j)) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">dfs</span><span class="params">(<span class="keyword">char</span>[][] board, String word, <span class="keyword">int</span> start, <span class="keyword">int</span> r, <span class="keyword">int</span> c)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (start == word.length()) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (r &lt; <span class="number">0</span> || r &gt;= m || c &lt; <span class="number">0</span> || c &gt;= n || board[r][c] != word.charAt(start) ||  visited[r][c] ) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    visited[r][c] = <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; shift.length; i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> nextR = r + shift[i][<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">int</span> nextC = c + shift[i][<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span> (dfs(board, word, start + <span class="number">1</span>, nextR, nextC)) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    visited[r][c] = <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>IP ��ַ����</strong></p><p><a href="https://leetcode.com/problems/restore-ip-addresses/description/" target="_blank" rel="noopener">Leetcode : 93. Restore IP Addresses(Medium)</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Given "25525511135",</span><br><span class="line">return ["255.255.11.135", "255.255.111.35"].</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> List&lt;String&gt; ret;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> List&lt;String&gt; <span class="title">restoreIpAddresses</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">    ret = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    doRestore(<span class="number">0</span>, <span class="string">""</span>, s);</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">doRestore</span><span class="params">(<span class="keyword">int</span> k, String path, String s)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (k == <span class="number">4</span> || s.length() == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (k == <span class="number">4</span> &amp;&amp; s.length() == <span class="number">0</span>) &#123;</span><br><span class="line">            ret.add(path);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s.length() &amp;&amp; i &lt;= <span class="number">2</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i != <span class="number">0</span> &amp;&amp; s.charAt(<span class="number">0</span>) == <span class="string">'0'</span>) <span class="keyword">break</span>;</span><br><span class="line">        String part = s.substring(<span class="number">0</span>, i + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span> (Integer.valueOf(part) &lt;= <span class="number">255</span>) &#123;</span><br><span class="line">            doRestore(k + <span class="number">1</span>, path.length() != <span class="number">0</span> ? path + <span class="string">"."</span> + part : part, s.substring(i + <span class="number">1</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>����</strong></p><p><a href="https://leetcode.com/problems/permutations/description/" target="_blank" rel="noopener">Leetcode : 46. Permutations (Medium)</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[1,2,3] have the following permutations:</span><br><span class="line">[</span><br><span class="line">  [1,2,3],</span><br><span class="line">  [1,3,2],</span><br><span class="line">  [2,1,3],</span><br><span class="line">  [2,3,1],</span><br><span class="line">  [3,1,2],</span><br><span class="line">  [3,2,1]</span><br><span class="line">]</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> List&lt;List&lt;Integer&gt;&gt; permute(<span class="keyword">int</span>[] nums) &#123;</span><br><span class="line">    List&lt;List&lt;Integer&gt;&gt; ret = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    List&lt;Integer&gt; permuteList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="keyword">boolean</span>[] visited = <span class="keyword">new</span> <span class="keyword">boolean</span>[nums.length];</span><br><span class="line">    backtracking(permuteList, visited, nums, ret);</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">backtracking</span><span class="params">(List&lt;Integer&gt; permuteList, <span class="keyword">boolean</span>[] visited, <span class="keyword">int</span>[] nums, List&lt;List&lt;Integer&gt;&gt; ret)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(permuteList.size() == nums.length)&#123;</span><br><span class="line">        ret.add(<span class="keyword">new</span> ArrayList(permuteList));</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; visited.length; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(visited[i]) <span class="keyword">continue</span>;</span><br><span class="line">        visited[i] = <span class="keyword">true</span>;</span><br><span class="line">        permuteList.add(nums[i]);</span><br><span class="line">        backtracking(permuteList, visited, nums, ret);</span><br><span class="line">        permuteList.remove(permuteList.size() - <span class="number">1</span>);</span><br><span class="line">        visited[i] = <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>������ͬԪ��������</strong></p><p><a href="https://leetcode.com/problems/permutations-ii/description/" target="_blank" rel="noopener">Leetcode : 47. Permutations II (Medium)</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[1,1,2] have the following unique permutations:</span><br><span class="line">[[1,1,2], [1,2,1], [2,1,1]]</span><br></pre></td></tr></table></figure><p>��Ŀ����������Ԫ�ؿ��ܺ�����ͬ��Ԫ�أ���������ʱ���п��ܳ����ظ������У�Ҫ���ظ�������ֻ����һ����</p><p>��ʵ���ϣ��� Permutations ��ͬ����Ҫ������Ȼ�������һ��Ԫ��ʱ���ж����Ԫ���Ƿ����ǰһ��Ԫ�أ�������ڣ�����ǰһ��Ԫ�ػ�δ���ʣ���ô���������Ԫ�ء�</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> List&lt;List&lt;Integer&gt;&gt; permuteUnique(<span class="keyword">int</span>[] nums) &#123;</span><br><span class="line">    List&lt;List&lt;Integer&gt;&gt; ret = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    List&lt;Integer&gt; permuteList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    Arrays.sort(nums);</span><br><span class="line">    <span class="keyword">boolean</span>[] visited = <span class="keyword">new</span> <span class="keyword">boolean</span>[nums.length];</span><br><span class="line">    backtracking(permuteList, visited, nums, ret);</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">backtracking</span><span class="params">(List&lt;Integer&gt; permuteList, <span class="keyword">boolean</span>[] visited, <span class="keyword">int</span>[] nums, List&lt;List&lt;Integer&gt;&gt; ret)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (permuteList.size() == nums.length) &#123;</span><br><span class="line">        ret.add(<span class="keyword">new</span> ArrayList(permuteList));</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; visited.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i != <span class="number">0</span> &amp;&amp; nums[i] == nums[i - <span class="number">1</span>] &amp;&amp; !visited[i - <span class="number">1</span>]) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span> (visited[i]) <span class="keyword">continue</span>;</span><br><span class="line">        visited[i] = <span class="keyword">true</span>;</span><br><span class="line">        permuteList.add(nums[i]);</span><br><span class="line">        backtracking(permuteList, visited, nums, ret);</span><br><span class="line">        permuteList.remove(permuteList.size() - <span class="number">1</span>);</span><br><span class="line">        visited[i] = <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>���</strong></p><p><a href="https://leetcode.com/problems/combinations/description/" target="_blank" rel="noopener">Leetcode : 77. Combinations (Medium)</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">If n = 4 and k = 2, a solution is:</span><br><span class="line">[</span><br><span class="line">  [2,4],</span><br><span class="line">  [3,4],</span><br><span class="line">  [2,3],</span><br><span class="line">  [1,2],</span><br><span class="line">  [1,3],</span><br><span class="line">  [1,4],</span><br><span class="line">]</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> List&lt;List&lt;Integer&gt;&gt; combine(<span class="keyword">int</span> n, <span class="keyword">int</span> k) &#123;</span><br><span class="line">    List&lt;List&lt;Integer&gt;&gt; ret = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    List&lt;Integer&gt; combineList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    backtracking(<span class="number">1</span>, n, k, combineList, ret);</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">backtracking</span><span class="params">(<span class="keyword">int</span> start, <span class="keyword">int</span> n, <span class="keyword">int</span> k, List&lt;Integer&gt; combineList, List&lt;List&lt;Integer&gt;&gt; ret)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(k == <span class="number">0</span>)&#123;</span><br><span class="line">        ret.add(<span class="keyword">new</span> ArrayList(combineList)); <span class="comment">// ����Ҫ���¹���һ�� List</span></span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = start; i &lt;= n - k + <span class="number">1</span>; i++)&#123; <span class="comment">// ��֦</span></span><br><span class="line"></span><br><span class="line">        combineList.add(i);                        <span class="comment">// �� i ���Ϊ�ѷ���</span></span><br><span class="line">        backtracking(i + <span class="number">1</span>, n, k - <span class="number">1</span>, combineList, ret);</span><br><span class="line">        combineList.remove(combineList.size() - <span class="number">1</span>); <span class="comment">// �� i ���Ϊδ����</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>������</strong></p><p><a href="https://leetcode.com/problems/combination-sum/description/" target="_blank" rel="noopener">Leetcode : 39. Combination Sum (Medium)</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">given candidate set [2, 3, 6, 7] and target 7,</span><br><span class="line">A solution set is:</span><br><span class="line">[[7],[2, 2, 3]]</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> List&lt;List&lt;Integer&gt;&gt; ret;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> List&lt;List&lt;Integer&gt;&gt; combinationSum(<span class="keyword">int</span>[] candidates, <span class="keyword">int</span> target) &#123;</span><br><span class="line">    ret = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    doCombination(candidates, target, <span class="number">0</span>, <span class="keyword">new</span> ArrayList&lt;&gt;());</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">doCombination</span><span class="params">(<span class="keyword">int</span>[] candidates, <span class="keyword">int</span> target, <span class="keyword">int</span> start, List&lt;Integer&gt; list)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (target == <span class="number">0</span>) &#123;</span><br><span class="line">        ret.add(<span class="keyword">new</span> ArrayList&lt;&gt;(list));</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = start; i &lt; candidates.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (candidates[i] &lt;= target) &#123;</span><br><span class="line">            list.add(candidates[i]);</span><br><span class="line">            doCombination(candidates, target - candidates[i], i, list);</span><br><span class="line">            list.remove(list.size() - <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>������ͬԪ�ص���������</strong></p><p><a href="https://leetcode.com/problems/combination-sum-ii/description/" target="_blank" rel="noopener">Leetcode : 40. Combination Sum II (Medium)</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">For example, given candidate set [10, 1, 2, 7, 6, 1, 5] and target 8, </span><br><span class="line">A solution set is: </span><br><span class="line">[</span><br><span class="line">  [1, 7],</span><br><span class="line">  [1, 2, 5],</span><br><span class="line">  [2, 6],</span><br><span class="line">  [1, 1, 6]</span><br><span class="line">]</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> List&lt;List&lt;Integer&gt;&gt; ret;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> List&lt;List&lt;Integer&gt;&gt; combinationSum2(<span class="keyword">int</span>[] candidates, <span class="keyword">int</span> target) &#123;</span><br><span class="line">    ret = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    Arrays.sort(candidates);</span><br><span class="line">    doCombination(candidates, target, <span class="number">0</span>, <span class="keyword">new</span> ArrayList&lt;&gt;(), <span class="keyword">new</span> <span class="keyword">boolean</span>[candidates.length]);</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">doCombination</span><span class="params">(<span class="keyword">int</span>[] candidates, <span class="keyword">int</span> target, <span class="keyword">int</span> start, List&lt;Integer&gt; list, <span class="keyword">boolean</span>[] visited)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (target == <span class="number">0</span>) &#123;</span><br><span class="line">        ret.add(<span class="keyword">new</span> ArrayList&lt;&gt;(list));</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = start; i &lt; candidates.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i != <span class="number">0</span> &amp;&amp; candidates[i] == candidates[i - <span class="number">1</span>] &amp;&amp; !visited[i - <span class="number">1</span>]) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span> (candidates[i] &lt;= target) &#123;</span><br><span class="line">            list.add(candidates[i]);</span><br><span class="line">            visited[i] = <span class="keyword">true</span>;</span><br><span class="line">            doCombination(candidates, target - candidates[i], i + <span class="number">1</span>, list, visited);</span><br><span class="line">            visited[i] = <span class="keyword">false</span>;</span><br><span class="line">            list.remove(list.size() - <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>�Ӽ�</strong></p><p><a href="https://leetcode.com/problems/subsets/description/" target="_blank" rel="noopener">Leetcode : 78. Subsets (Medium)</a></p><p>��Ŀ�������ҳ����ϵ������Ӽ����Ӽ������ظ���[1, 2] �� [2, 1] �����Ӽ����ظ�</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> List&lt;List&lt;Integer&gt;&gt; ret;</span><br><span class="line"><span class="keyword">private</span> List&lt;Integer&gt; subsetList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> List&lt;List&lt;Integer&gt;&gt; subsets(<span class="keyword">int</span>[] nums) &#123;</span><br><span class="line">    ret = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    subsetList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= nums.length; i++) &#123;</span><br><span class="line">        backtracking(<span class="number">0</span>, i, nums);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">backtracking</span><span class="params">(<span class="keyword">int</span> startIdx, <span class="keyword">int</span> size, <span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (subsetList.size() == size) &#123;</span><br><span class="line">        ret.add(<span class="keyword">new</span> ArrayList(subsetList));</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = startIdx; i &lt; nums.length; i++) &#123;</span><br><span class="line">        subsetList.add(nums[i]);</span><br><span class="line">        backtracking(i + <span class="number">1</span>, size, nums); <span class="comment">// startIdx ��Ϊ��һ��Ԫ�أ�ʹ subset �е�Ԫ�ض���������</span></span><br><span class="line">        subsetList.remove(subsetList.size() - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>������ͬԪ�����Ӽ�</strong></p><p><a href="https://leetcode.com/problems/subsets-ii/description/" target="_blank" rel="noopener">Leetcode : 90. Subsets II (Medium)</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">For example,</span><br><span class="line">If nums = [1,2,2], a solution is:</span><br><span class="line"></span><br><span class="line">[</span><br><span class="line">  [2],</span><br><span class="line">  [1],</span><br><span class="line">  [1,2,2],</span><br><span class="line">  [2,2],</span><br><span class="line">  [1,2],</span><br><span class="line">  []</span><br><span class="line">]</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> List&lt;List&lt;Integer&gt;&gt; ret;</span><br><span class="line"><span class="keyword">private</span> List&lt;Integer&gt; subsetList;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">boolean</span>[] visited;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> List&lt;List&lt;Integer&gt;&gt; subsetsWithDup(<span class="keyword">int</span>[] nums) &#123;</span><br><span class="line">    ret = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    subsetList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    visited = <span class="keyword">new</span> <span class="keyword">boolean</span>[nums.length];</span><br><span class="line">    Arrays.sort(nums);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= nums.length; i++) &#123;</span><br><span class="line">        backtracking(<span class="number">0</span>, i, nums);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">backtracking</span><span class="params">(<span class="keyword">int</span> startIdx, <span class="keyword">int</span> size, <span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (subsetList.size() == size) &#123;</span><br><span class="line">        ret.add(<span class="keyword">new</span> ArrayList(subsetList));</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = startIdx; i &lt; nums.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i != <span class="number">0</span> &amp;&amp; nums[i] == nums[i - <span class="number">1</span>] &amp;&amp; !visited[i - <span class="number">1</span>]) <span class="keyword">continue</span>;</span><br><span class="line">        subsetList.add(nums[i]);</span><br><span class="line">        visited[i] = <span class="keyword">true</span>;</span><br><span class="line">        backtracking(i + <span class="number">1</span>, size, nums);</span><br><span class="line">        visited[i] = <span class="keyword">false</span>;</span><br><span class="line">        subsetList.remove(subsetList.size() - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>�ָ��ַ���ʹ��ÿ���ֶ��ǻ�����</strong></p><p><a href="https://leetcode.com/problems/palindrome-partitioning/description/" target="_blank" rel="noopener">Leetcode : 131. Palindrome Partitioning (Medium)</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> List&lt;List&lt;String&gt;&gt; ret;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> List&lt;List&lt;String&gt;&gt; partition(String s) &#123;</span><br><span class="line">    ret = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    doPartion(<span class="keyword">new</span> ArrayList&lt;&gt;(), s);</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">doPartion</span><span class="params">(List&lt;String&gt; list, String s)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (s.length() == <span class="number">0</span>) &#123;</span><br><span class="line">        ret.add(<span class="keyword">new</span> ArrayList&lt;&gt;(list));</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s.length(); i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (isPalindrome(s, <span class="number">0</span>, i)) &#123;</span><br><span class="line">            list.add(s.substring(<span class="number">0</span>, i + <span class="number">1</span>));</span><br><span class="line">            doPartion(list, s.substring(i + <span class="number">1</span>));</span><br><span class="line">            list.remove(list.size() - <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">isPalindrome</span><span class="params">(String s, <span class="keyword">int</span> begin, <span class="keyword">int</span> end)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (begin &lt; end) &#123;</span><br><span class="line">        <span class="keyword">if</span> (s.charAt(begin++) != s.charAt(end--)) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>����</strong></p><p><a href="https://leetcode.com/problems/sudoku-solver/description/" target="_blank" rel="noopener">Leetcode : 37. Sudoku Solver (Hard)</a></p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/1ca52246-c443-48ae-b1f8-1cafc09ec75c.png" alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">boolean</span>[][] rowsUsed = <span class="keyword">new</span> <span class="keyword">boolean</span>[<span class="number">9</span>][<span class="number">10</span>];</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">boolean</span>[][] colsUsed = <span class="keyword">new</span> <span class="keyword">boolean</span>[<span class="number">9</span>][<span class="number">10</span>];</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">boolean</span>[][] cubesUsed = <span class="keyword">new</span> <span class="keyword">boolean</span>[<span class="number">9</span>][<span class="number">10</span>];</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">char</span>[][] board;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">solveSudoku</span><span class="params">(<span class="keyword">char</span>[][] board)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.board = board;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">9</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">9</span>; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (board[i][j] == <span class="string">'.'</span>) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">int</span> num = board[i][j] - <span class="string">'0'</span>;</span><br><span class="line">            rowsUsed[i][num] = <span class="keyword">true</span>;</span><br><span class="line">            colsUsed[j][num] = <span class="keyword">true</span>;</span><br><span class="line">            cubesUsed[cubeNum(i, j)][num] = <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">9</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">9</span>; j++) &#123;</span><br><span class="line">            backtracking(i, j);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">backtracking</span><span class="params">(<span class="keyword">int</span> row, <span class="keyword">int</span> col)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (row &lt; <span class="number">9</span> &amp;&amp; board[row][col] != <span class="string">'.'</span>) &#123;</span><br><span class="line">        row = col == <span class="number">8</span> ? row + <span class="number">1</span> : row;</span><br><span class="line">        col = col == <span class="number">8</span> ? <span class="number">0</span> : col + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (row == <span class="number">9</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> num = <span class="number">1</span>; num &lt;= <span class="number">9</span>; num++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (rowsUsed[row][num] || colsUsed[col][num] || cubesUsed[cubeNum(row, col)][num]) <span class="keyword">continue</span>;</span><br><span class="line">        rowsUsed[row][num] = colsUsed[col][num] = cubesUsed[cubeNum(row, col)][num] = <span class="keyword">true</span>;</span><br><span class="line">        board[row][col] = (<span class="keyword">char</span>) (num + <span class="string">'0'</span>);</span><br><span class="line">        <span class="keyword">if</span> (backtracking(row, col)) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        board[row][col] = <span class="string">'.'</span>;</span><br><span class="line">        rowsUsed[row][num] = colsUsed[col][num] = cubesUsed[cubeNum(row, col)][num] = <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">cubeNum</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> j)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> r = i / <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">int</span> c = j / <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">return</span> r * <span class="number">3</span> + c;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="����-2"><a href="#����-2" class="headerlink" title="����"></a>����</h2><p><strong>�����ʽ������</strong></p><p><a href="https://leetcode.com/problems/different-ways-to-add-parentheses/description/" target="_blank" rel="noopener">Leetcode : 241. Different Ways to Add Parentheses (Medium)</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Input: "2-1-1".</span><br><span class="line"></span><br><span class="line">((2-1)-1) = 0</span><br><span class="line">(2-(1-1)) = 2</span><br><span class="line"></span><br><span class="line">Output : [0, 2]</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Integer&gt; <span class="title">diffWaysToCompute</span><span class="params">(String input)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = input.length();</span><br><span class="line">    List&lt;Integer&gt; ret = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">char</span> c = input.charAt(i);</span><br><span class="line">        <span class="keyword">if</span> (c == <span class="string">'+'</span> || c == <span class="string">'-'</span> || c == <span class="string">'*'</span>) &#123;</span><br><span class="line">            List&lt;Integer&gt; left = diffWaysToCompute(input.substring(<span class="number">0</span>, i));</span><br><span class="line">            List&lt;Integer&gt; right = diffWaysToCompute(input.substring(i + <span class="number">1</span>));</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> l : left) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> r : right) &#123;</span><br><span class="line">                    <span class="keyword">switch</span> (c) &#123;</span><br><span class="line">                        <span class="keyword">case</span> <span class="string">'+'</span>: ret.add(l + r); <span class="keyword">break</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="string">'-'</span>: ret.add(l - r); <span class="keyword">break</span>;</span><br><span class="line">                        <span class="keyword">case</span> <span class="string">'*'</span>: ret.add(l * r); <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (ret.size() == <span class="number">0</span>) ret.add(Integer.valueOf(input));</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="��̬�滮"><a href="#��̬�滮" class="headerlink" title="��̬�滮"></a>��̬�滮</h2><p>�ݹ�Ͷ�̬�滮���ǽ�ԭ�����ɶ��������Ȼ����⣬����֮����ʵ������ǣ���̬�滮������������Ľ⡣</p><h3 id="�ָ�����"><a href="#�ָ�����" class="headerlink" title="�ָ�����"></a>�ָ�����</h3><p><strong>�ָ����������˻�</strong></p><p><a href="https://leetcode.com/problems/integer-break/description/" target="_blank" rel="noopener">Leetcode : 343. Integer Break (Medim)</a></p><p>��Ŀ������For example, given n = 2, return 1 (2 = 1 + 1); given n = 10, return 36 (10 = 3 + 3 + 4).</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">integerBreak</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span>[] dp = <span class="keyword">new</span> <span class="keyword">int</span>[n + <span class="number">1</span>];</span><br><span class="line">    dp[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= i - <span class="number">1</span>; j++) &#123;</span><br><span class="line">            dp[i] = Math.max(dp[i], Math.max(j * dp[i - j], j * (i - j)));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> dp[n];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>��ƽ�������ָ�����</strong></p><p><a href="https://leetcode.com/problems/perfect-squares/description/" target="_blank" rel="noopener">Leetcode : 279. Perfect Squares(Medium)</a></p><p>��Ŀ������For example, given n = 12, return 3 because 12 = 4 + 4 + 4; given n = 13, return 2 because 13 = 4 + 9.</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">numSquares</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    List&lt;Integer&gt; squares = <span class="keyword">new</span> ArrayList&lt;&gt;(); <span class="comment">// �洢С�� n ��ƽ����</span></span><br><span class="line">    <span class="keyword">int</span> diff = <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">while</span>(square &lt;= n) &#123;</span><br><span class="line">        squares.add(square);</span><br><span class="line">        square += diff;</span><br><span class="line">        diff += <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span>[] dp = <span class="keyword">new</span> <span class="keyword">int</span>[n + <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> max = Integer.MAX_VALUE;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> s : squares) &#123;</span><br><span class="line">            <span class="keyword">if</span>(s &gt; i) <span class="keyword">break</span>;</span><br><span class="line">            max = Math.min(max, dp[i - s] + <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        dp[i] = max;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> dp[n];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>�ָ�����������ĸ�ַ���</strong></p><p><a href="https://leetcode.com/problems/decode-ways/description/" target="_blank" rel="noopener">Leetcode : 91. Decode Ways (Medium)</a></p><p>��Ŀ������Given encoded message “12”, it could be decoded as “AB” (1 2) or “L” (12).</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">numDecodings</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(s == <span class="keyword">null</span> || s.length() == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> n = s.length();</span><br><span class="line">    <span class="keyword">int</span>[] dp = <span class="keyword">new</span> <span class="keyword">int</span>[n + <span class="number">1</span>];</span><br><span class="line">    dp[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    dp[<span class="number">1</span>] = s.charAt(<span class="number">0</span>) == <span class="string">'0'</span> ? <span class="number">0</span> : <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> one = Integer.valueOf(s.substring(i - <span class="number">1</span>, i));</span><br><span class="line">        <span class="keyword">if</span>(one != <span class="number">0</span>) dp[i] += dp[i - <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span>(s.charAt(i - <span class="number">2</span>) == <span class="string">'0'</span>) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">int</span> two = Integer.valueOf(s.substring(i - <span class="number">2</span>, i));</span><br><span class="line">        <span class="keyword">if</span>(two &lt;= <span class="number">26</span>) dp[i] += dp[i - <span class="number">2</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> dp[n];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="����·��"><a href="#����·��" class="headerlink" title="����·��"></a>����·��</h3><p><strong>�������·����</strong></p><p><a href="https://leetcode.com/problems/unique-paths/description/" target="_blank" rel="noopener">Leetcode : 62. Unique Paths (Medium)</a></p><p>��Ŀ������ͳ�ƴӾ������Ͻǵ����½ǵ�·��������ÿ��ֻ������������ƶ���</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">uniquePaths</span><span class="params">(<span class="keyword">int</span> m, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span>[] dp = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(i == <span class="number">0</span>) dp[j] = <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(j != <span class="number">0</span>) dp[j] = dp[j] + dp[j - <span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> dp[n - <span class="number">1</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>�������С·����</strong></p><p><a href="https://leetcode.com/problems/minimum-path-sum/description/" target="_blank" rel="noopener">Leetcode : 64. Minimum Path Sum (Medium)</a></p><p>��Ŀ��������Ӿ�������Ͻǵ����½ǵ���С·���ͣ�ÿ��ֻ������������ƶ���</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">minPathSum</span><span class="params">(<span class="keyword">int</span>[][] grid)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(grid.length == <span class="number">0</span> || grid[<span class="number">0</span>].length == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> m = grid.length, n = grid[<span class="number">0</span>].length;</span><br><span class="line">    <span class="keyword">int</span>[] dp = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(j == <span class="number">0</span>) dp[<span class="number">0</span>] = dp[<span class="number">0</span>] + grid[i][<span class="number">0</span>];</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(i == <span class="number">0</span>) dp[j] = dp[j - <span class="number">1</span>] + grid[<span class="number">0</span>][j];</span><br><span class="line">            <span class="keyword">else</span> dp[j] = Math.min(dp[j - <span class="number">1</span>], dp[j]) + grid[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> dp[n - <span class="number">1</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="쳲���������"><a href="#쳲���������" class="headerlink" title="쳲���������"></a>쳲���������</h3><p><strong>��¥��</strong></p><p><a href="https://leetcode.com/problems/climbing-stairs/description/" target="_blank" rel="noopener">Leetcode : 70. Climbing Stairs (Easy)</a></p><p>��Ŀ�������� N ��¥�ݣ�ÿ�ο�����һ�׻������ף����ж�������¥�ݵķ�����</p><p>����һ������ dp �洢��¥�ݵķ�������Ϊ�˷������ۣ������±�� 1 ��ʼ����dp[i] ��ʾ�ߵ��� i ��¥�ݵķ�����Ŀ���� i ��¥�ݿ��Դӵ� i-1 �� i-2 ��¥������һ������ߵ��� i ��¥�ݵķ�����Ϊ�ߵ��� i-1 �͵� i-2 ��¥�ݵķ�����֮�͡�</p><p><img src="http://latex.codecogs.com/gif.latex?\\\\dp[i]=dp[i-1]+dp[i-2]" alt=""></p><p>dp[N] ��Ϊ����</p><p>���ǵ� dp[i] ֻ�� dp[i - 1] �� dp[i - 2] �йأ���˿���ֻ�������������洢 dp[i - 1] �� dp[i - 2] ���ɣ�ʹ��ԭ���� O(n) �ռ临�Ӷ��Ż�Ϊ O(1) ���Ӷȡ�</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">climbStairs</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n == <span class="number">1</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(n == <span class="number">2</span>) <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">    <span class="comment">// ǰһ��¥�ݡ���һ��¥��</span></span><br><span class="line">    <span class="keyword">int</span> pre1 = <span class="number">2</span>, pre2 = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; n; i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> cur = pre1 + pre2;</span><br><span class="line">        pre2 = pre1;</span><br><span class="line">        pre1 = cur;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> pre1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>ĸţ����</strong></p><p><a href="#">����Ա��������ָ��-P181</a></p><p>��Ŀ����������ũ���г����ĸţÿ�궼���� 1 ͷСĸţ��������Զ����������һ���� 1 ֻСĸţ���ӵڶ��꿪ʼ��ĸţ��ʼ��Сĸţ��ÿֻСĸţ 3 ��֮������ֿ�����Сĸţ���������� N���� N ���ţ��������</p><p>�� i ������ţ������Ϊ��</p><p><img src="http://latex.codecogs.com/gif.latex?\\\\dp[i]=dp[i-1]+dp[i-3]" alt=""></p><p><strong>ǿ������</strong></p><p><a href="https://leetcode.com/problems/house-robber/description/" target="_blank" rel="noopener">Leetcode : 198. House Robber (Easy)</a></p><p>��Ŀ����������һ��ס�������ǲ������ڽ���ס�����������������</p><p>���� dp ���������洢���������������� dp[i] ��ʾ������ i ��ס��ʱ����������������ڲ��������ڽ�ס���������������˵� i ��ס����ôֻ������ i - 2 �� i - 3 ��ס��������</p><p><img src="http://latex.codecogs.com/gif.latex?\\\\dp[i]=max(dp[i-2],dp[i-3]" alt="">+nums[i])</p><p>O(n) �ռ临�Ӷ�ʵ�ַ�����</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">rob</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = nums.length;</span><br><span class="line">    <span class="keyword">if</span>(n == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(n == <span class="number">1</span>) <span class="keyword">return</span> nums[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">if</span>(n == <span class="number">2</span>) <span class="keyword">return</span> Math.max(nums[<span class="number">0</span>], nums[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">int</span>[] dp = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">    dp[<span class="number">0</span>] = nums[<span class="number">0</span>];</span><br><span class="line">    dp[<span class="number">1</span>] = nums[<span class="number">1</span>];</span><br><span class="line">    dp[<span class="number">2</span>] = nums[<span class="number">0</span>] + nums[<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">3</span>; i &lt; n; i++)&#123;</span><br><span class="line">        dp[i] = Math.max(dp[i -<span class="number">2</span>], dp[i - <span class="number">3</span>]) + nums[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> Math.max(dp[n - <span class="number">1</span>], dp[n - <span class="number">2</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>O(1) �ռ临�Ӷ�ʵ�ַ�����</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">rob</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = nums.length;</span><br><span class="line">    <span class="keyword">if</span>(n == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(n == <span class="number">1</span>) <span class="keyword">return</span> nums[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">if</span>(n == <span class="number">2</span>) <span class="keyword">return</span> Math.max(nums[<span class="number">0</span>], nums[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">int</span> pre3 = nums[<span class="number">0</span>], pre2 = nums[<span class="number">1</span>], pre1 = nums[<span class="number">2</span>] + nums[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">3</span>; i &lt; n; i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> cur = Math.max(pre2, pre3) + nums[i];</span><br><span class="line">        pre3 = pre2;</span><br><span class="line">        pre2 = pre1;</span><br><span class="line">        pre1 = cur;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> Math.max(pre1, pre2);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>ǿ���ڻ��ν�������</strong></p><p><a href="https://leetcode.com/problems/house-robber-ii/description/" target="_blank" rel="noopener">Leetcode : 213. House Robber II (Medium)</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">rob</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(nums == <span class="keyword">null</span> || nums.length == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> n = nums.length;</span><br><span class="line">    <span class="keyword">if</span>(n == <span class="number">1</span>) <span class="keyword">return</span> nums[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">return</span> Math.max(rob(nums, <span class="number">0</span>, n - <span class="number">2</span>), rob(nums, <span class="number">1</span>, n - <span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">rob</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> s, <span class="keyword">int</span> e)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = nums.length;</span><br><span class="line">    <span class="keyword">if</span>(e - s == <span class="number">0</span>) <span class="keyword">return</span> nums[s];</span><br><span class="line">    <span class="keyword">if</span>(e - s == <span class="number">1</span>) <span class="keyword">return</span> Math.max(nums[s], nums[s + <span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">int</span>[] dp = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">    dp[s] = nums[s];</span><br><span class="line">    dp[s + <span class="number">1</span>] = nums[s + <span class="number">1</span>];</span><br><span class="line">    dp[s + <span class="number">2</span>] = nums[s] + nums[s + <span class="number">2</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = s + <span class="number">3</span>; i &lt;= e; i++) &#123;</span><br><span class="line">        dp[i] = Math.max(dp[i - <span class="number">2</span>], dp[i - <span class="number">3</span>]) + nums[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> Math.max(dp[e], dp[e - <span class="number">1</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>�ż�����</strong></p><p>��Ŀ�������� N �� �� �� �ŷ⣬���Ǳ����ң������װ�ŵķ�ʽ������</p><p>����һ������ dp �洢����ʽ������dp[i] ��ʾǰ i ���ź��ŷ�Ĵ���ʽ����������� i ����װ���� j ���ŷ����棬���� j ����װ���� k ���ŷ����档���� i �� k �Ƿ���ȣ������������</p><p>�� i==k������ i �� k ���ź����ǵ��ź��ŷ�����ȷ��λ�ã��������� i-2 ������ dp[i-2] �ִ���װ�ŵķ�ʽ������ j �� i-1 ��ȡֵ����˹��� (i-1)*dp[i-2] �ִ���װ�ŷ�ʽ��</p><p>�� i != k������ i �� j ���ź󣬵� i ���ź��ŷ�����ȷ��λ�ã����� i-1 ������ dp[i-1] �ִ���װ�ŷ�ʽ������ j �� i-1 ��ȡֵ����˹��� (n-1)*dp[i-1] �ִ���װ�ŷ�ʽ��</p><p>��������������װ��������ʽ����Ϊ��</p><p><img src="http://latex.codecogs.com/gif.latex?\\\\dp[i]=(i-1" alt=""><em>dp[i-2]+(i-1)</em>dp[i-1])</p><p>dp[N] ��Ϊ����</p><p>����¥������һ����dp[i] ֻ�� dp[i-1] �� dp[i-2] �йأ����Ҳ����ֻ�������������洢 dp[i-1] �� dp[i-2]��</p><h3 id="�����������"><a href="#�����������" class="headerlink" title="�����������"></a>�����������</h3><p>��֪һ������ {S<sub>1</sub>, S<sub>2</sub>,…,S<sub>n</sub>} ��ȡ�����������µ����� {S<sub>i1</sub>, S<sub>i2</sub>,…, S<sub>im</sub>}������ i1��i2 … im ���ֵ��������������и�������Ȼ����ԭ�����е��Ⱥ�˳�򣬳�������Ϊԭ���е�һ��<strong>������</strong>��</p><p>������������У����±� ix &gt; iy ʱ��S<sub>ix</sub> &gt; S<sub>iy</sub>����������Ϊԭ���е�һ��<strong>����������</strong>��</p><p>����һ������ dp �洢����������еĳ��ȣ�dp[n] ��ʾ�� S<sub>n</sub> ��β�����е�����������г��ȡ�����һ������������ {S<sub>i1</sub>, S<sub>i2</sub>,…,S<sub>im</sub>}����� im &lt; n ���� S<sub>im</sub> &lt; S<sub>n</sub> ����ʱ {S<sub>i1</sub>, S<sub>i2</sub>,…, S<sub>im</sub>, S<sub>n</sub>} Ϊһ�����������У����������еĳ������� 1���������������ĵ����������У���������Ǹ����������о���Ҫ�ҵģ��ڳ�����ĵ����������ϼ��� S<sub>n</sub> �͹������� S<sub>n</sub> Ϊ��β������������С���� dp[n] = max{ dp[i]+1 | S<sub>i</sub> &lt; S<sub>n</sub> &amp;&amp; i &lt; n} ��</p><p>��Ϊ���� dp[n] ʱ�����޷��ҵ�һ�����������ĵ��������У���ʱ {S<sub>n</sub>} �͹����˵��������У������Ҫ��ǰ�����ⷽ�����޸ģ��� dp[n] ��СΪ 1������</p><p><img src="http://latex.codecogs.com/gif.latex?\\\\dp[n]=max\{1,dp[i]+1|S_i&lt;S_n\&amp;\&amp;i&lt;n\}" alt=""></p><p>����һ������Ϊ N �����У�������в���һ������ S<sub>N</sub> Ϊ��β����� dp[N] �������е�����������еĳ��ȣ���Ҫ���� dp �����ҳ����ֵ������Ҫ�Ľ������ max{ dp[i] | 1 &lt;= i &lt;= N} ��Ϊ����</p><p><strong>�����������</strong></p><p><a href="https://leetcode.com/problems/longest-increasing-subsequence/description/" target="_blank" rel="noopener">Leetcode : 300. Longest Increasing Subsequence (Medium)</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">lengthOfLIS</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = nums.length;</span><br><span class="line">    <span class="keyword">int</span>[] dp = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> max = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; i; j++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[i] &gt; nums[j]) max = Math.max(max, dp[j] + <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        dp[i] = max;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> ret = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">        ret = Math.max(ret, dp[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>���Ͻⷨ��ʱ�临�Ӷ�Ϊ O(n<sup>2</sup>) ������ʹ�ö��ֲ���ʹ��ʱ�临�ӶȽ���Ϊ O(nlog<sub>n</sub>)������һ�� tails ���飬���� tails[i] �洢����Ϊ i + 1 ������������е����һ��Ԫ�أ������������ [4,5,6,3]����</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">len = 1  :      [4], [5], [6], [3]  =&gt; tails[0] = 3</span><br><span class="line">len = 2  :      [4, 5], [5, 6]      =&gt; tails[1] = 5</span><br><span class="line">len = 3  :      [4, 5, 6]            =&gt; tails[2] = 6</span><br></pre></td></tr></table></figure><p>����һ��Ԫ�� x����������� tails �������е�ֵ����ô������ӵ� tails ���棻��� tails[i-1] &lt; x &lt;= tails[i]����ô���� tails[i] = x ��</p><p>���Կ��� tails ���鱣����������ڲ��� S<sub>i</sub> λ�� tails �����λ��ʱ�Ϳ���ʹ�ö��ֲ��ҡ�</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">lengthOfLIS</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = nums.length;</span><br><span class="line">    <span class="keyword">int</span>[] tails = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">    <span class="keyword">int</span> size = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">        <span class="keyword">int</span> idx = binarySearch(tails, <span class="number">0</span>, size, nums[i]);</span><br><span class="line">        tails[idx] = nums[i];</span><br><span class="line">        <span class="keyword">if</span>(idx == size) size++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> size;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">binarySearch</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> sIdx, <span class="keyword">int</span> eIdx, <span class="keyword">int</span> key)</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(sIdx &lt; eIdx)&#123;</span><br><span class="line">        <span class="keyword">int</span> mIdx = sIdx + (eIdx - sIdx) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(nums[mIdx] == key) <span class="keyword">return</span> mIdx;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(nums[mIdx] &gt; key) eIdx = mIdx;</span><br><span class="line">        <span class="keyword">else</span> sIdx = mIdx + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sIdx;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>��ڶ�������</strong></p><p><a href="https://leetcode.com/problems/wiggle-subsequence/description/" target="_blank" rel="noopener">Leetcode : 376. Wiggle Subsequence (Medium)</a></p><p>Ҫ��ʹ�� O(n) ʱ�临�Ӷ���⡣</p><p>ʹ������״̬ up �� down��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">wiggleMaxLength</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> len = nums.length;</span><br><span class="line">    <span class="keyword">if</span> (len == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> up = <span class="number">1</span>, down = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; len; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (nums[i] &gt; nums[i - <span class="number">1</span>]) up = down + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (nums[i] &lt; nums[i - <span class="number">1</span>]) down = up + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> Math.max(up, down);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="�������ϵ��"><a href="#�������ϵ��" class="headerlink" title="�������ϵ��"></a>�������ϵ��</h3><p>�������������� S1 �� S2���ҳ�������Ĺ��������С�</p><p>����һ����ά���� dp �����洢����������еĳ��ȣ����� dp[i][j] ��ʾ S1 ��ǰ i ���ַ��� S2 ��ǰ j ���ַ�����������еĳ��ȡ����� S1<sub>i</sub> �� S2<sub>j</sub> ֵ�Ƿ���ȣ���Ϊ���������</p><p>�� �� S1<sub>i</sub>==S2<sub>j</sub> ʱ����ô������ S1 ��ǰ i-1 ���ַ��� S2 ��ǰ j-1 ���ַ�����������еĻ������ټ��� S1<sub>i</sub> ���ֵ������������г��ȼ� 1 ���� dp[i][j] = dp[i-1][j-1] + 1��</p><p>�� �� S1<sub>i</sub> != S2<sub>j</sub> ʱ����ʱ�����������Ϊ S1 ��ǰ i-1 ���ַ��� S2 ��ǰ j ���ַ�����������У��� S1 ��ǰ i ���ַ��� S2 ��ǰ j-1 ���ַ�����������У����ǵ�����ߣ��� dp[i][j] = max{ dp[i-1][j], dp[i][j-1] }��</p><p>���ϣ��������ϵ�е�״̬ת�Ʒ���Ϊ��</p><p><img src="http://latex.codecogs.com/gif.latex?\\\\dp[i][j]=\left\{\begin{array}{rcl}dp[i-1][j-1]&amp;&amp;{S1_i==S2_j}\\max(dp[i-1][j],dp[i][j-1]" alt="">&amp;&amp;{S1_i&lt;&gt;S2_j}<br>\end{array}\right.<br>)</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/1dc481cc-99f6-4fa8-8f68-fbd563995bf5.png" alt=""></p><p>���ڳ���Ϊ N ������ S<sub>1</sub> �� ����Ϊ M ������ S<sub>2</sub>��dp[N][M] �������� S<sub>1</sub> ������ S<sub>2</sub> ������������г��ȡ�</p><p>���������������ȣ�����������������²�ͬ�㣺</p><p>�� ��Ե����������У������ǵ�����������С�<br>�� ��������������У�dp[i] ��ʾ�� S<sub>i</sub> Ϊ��β������������г��ȣ������б������ S<sub>i</sub> ����������������У�dp[i][j] ��ʾ S1 ��ǰ i ���ַ��� S2 ��ǰ j ���ַ�������������г��ȣ���һ������ S1<sub>i</sub> �� S2<sub>j</sub> ��<br>�� ���� 2 ���������ս�ʱ��������������� dp[N][M] �������ս⣬��������������� dp[N] �������ս⣬��Ϊ�� S<sub>N</sub> Ϊ��β������������в�һ����������������������У���Ҫ����һ�� dp �����ҵ�����ߡ�</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">lengthOfLCS</span><span class="params">(<span class="keyword">int</span>[] nums1, <span class="keyword">int</span>[] nums2)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n1 = nums1.length, n2 = nums2.length;</span><br><span class="line">    <span class="keyword">int</span>[][] dp = <span class="keyword">new</span> <span class="keyword">int</span>[n1 + <span class="number">1</span>][n2 + <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n1; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n2; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (nums1[i - <span class="number">1</span>] == nums2[j - <span class="number">1</span>]) dp[i][j] = dp[i - <span class="number">1</span>][j - <span class="number">1</span>] + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> dp[i][j] = Math.max(dp[i - <span class="number">1</span>][j], dp[i][j - <span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> dp[n1][n2];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="0-1-����"><a href="#0-1-����" class="headerlink" title="0-1 ����"></a>0-1 ����</h3><p>��һ������Ϊ N �ı�����Ҫ���������װ����Ʒ�ļ�ֵ�����Щ��Ʒ���������ԣ���� w �ͼ�ֵ v��</p><p>����һ����ά���� dp �洢����ֵ������ dp[i][j] ��ʾ��������� j ������£�ǰ i ����Ʒ�ܴﵽ������ֵ����� i ����Ʒ���Ϊ w����ֵΪ v�����ݵ� i ����Ʒ�Ƿ���ӵ������У����Է�����������ۣ�</p><p>�� �� i ����Ʒû��ӵ������������������ j ��ǰ i ����Ʒ������ֵ��������������� j ��ǰ i-1 ����Ʒ������ֵ��dp[i][j] = dp[i-1][j]��<br>�� �� i ����Ʒ��ӵ������У�dp[i][j] = dp[i-1][j-w] + v��</p><p>�� i ����Ʒ�����Ҳ���Բ���ӣ�ȡ�����������������ֵ����</p><p>���ϣ�0-1 ������״̬ת�Ʒ���Ϊ��</p><p><img src="http://latex.codecogs.com/gif.latex?\\\\dp[i][j]=max(dp[i-1][j],dp[i-1][j-w]+v" alt="">)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">knapsack</span><span class="params">(<span class="keyword">int</span> W, <span class="keyword">int</span> N, <span class="keyword">int</span>[] weights, <span class="keyword">int</span>[] values)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span>[][] dp = <span class="keyword">new</span> <span class="keyword">int</span>[N][W];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = W - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">        dp[<span class="number">0</span>][i] = i &gt; weights[<span class="number">0</span>] ? values[<span class="number">0</span>] : <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; N; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = W - <span class="number">1</span>; j &gt;= weights[i]; j--) &#123;</span><br><span class="line">            dp[i][j] = Math.max(dp[i - <span class="number">1</span>][j], dp[i - <span class="number">1</span>][j - weights[i]] + values[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = weights[i - <span class="number">1</span>] - <span class="number">1</span>; j &gt;= <span class="number">0</span>; j--) &#123;</span><br><span class="line">            dp[i][j] = dp[i - <span class="number">1</span>][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> dp[N - <span class="number">1</span>][W - <span class="number">1</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>�ռ��Ż�</strong></p><p>�ڳ���ʵ��ʱ���Զ� 0-1 �������Ż����۲�״̬ת�Ʒ��̿���֪����ǰ i ����Ʒ��״̬����ǰ i-1 ����Ʒ��״̬�йأ���˿��Խ� dp ����Ϊһά���飬���� dp[j] �ȿ��Ա�ʾ dp[i-1][j] Ҳ���Ա�ʾ dp[i][j]����ʱ��</p><p><img src="http://latex.codecogs.com/gif.latex?\\\\dp[j]=max(dp[j],dp[j-w]+v" alt="">)</p><p>��Ϊ dp[j-w] ��ʾ dp[i-1][j-w]����˲������� dp[i][j-w] ��ֹ�� dp[i-1][j-w] ���ǡ�Ҳ����˵Ҫ�ȼ��� dp[i][j] �ټ��� dp[i][j-w]���ڳ���ʵ��ʱ��Ҫ��������ѭ����⡣</p><p><strong>�޷�ʹ��̰���㷨�Ľ���</strong></p><p>0-1 ���������޷�ʹ��̰���㷨����⣬Ҳ����˵���ܰ���������Լ۱���ߵ���Ʒ���ﵽ���ţ�������Ϊ���ַ�ʽ������ɱ����ռ���˷ѣ��Ӷ��޷��ﵽ���š������������Ʒ��һ������Ϊ 5 �ı���������������Ʒ 0 �������Ʒ 1����ôֻ�ܴ�ŵļ�ֵΪ 16���˷��˴�СΪ 2 �Ŀռ䡣���ŵķ�ʽ�Ǵ����Ʒ 1 ����Ʒ 2����ֵΪ 22.</p><table><thead><tr><th>id</th><th>w</th><th>v</th><th>v/w</th></tr></thead><tbody><tr><td>0</td><td>1</td><td>6</td><td>6</td></tr><tr><td>1</td><td>2</td><td>10</td><td>5</td></tr><tr><td>2</td><td>3</td><td>12</td><td>4</td></tr></tbody></table><p><strong>����</strong></p><p>��ȫ��������Ʒ�������޸�������ת��Ϊ 0-1 ��������ÿ����Ʒ������ͼ�ֵ��Ϊ 1/2/4… �����������Ƕ�����һ������Ʒ��Ȼ��һ����Ʒֻ�����һ�Ρ�</p><p>���ر�������Ʒ���������ƣ�ͬ������ת��Ϊ 0-1 ������</p><p>��ά���ñ�������Ʒ���������������������ͬʱ�������������ơ�</p><p>��������Ʒ֮���໥Լ������������</p><p><strong>��������Ϊ����ȵ�������</strong></p><p><a href="https://leetcode.com/problems/partition-equal-subset-sum/description/" target="_blank" rel="noopener">Leetcode : 416. Partition Equal Subset Sum (Medium)</a></p><p>���Կ���һ��������СΪ sum/2 �� 0-1 �������⣬����Ҳ�в�ͬ�ĵط�������û�м�ֵ���ԣ����ұ������뱻������</p><p>����ʵ��ʹ���˿ռ��Ż���</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">canPartition</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> num : nums) &#123;</span><br><span class="line">        sum += num;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (sum % <span class="number">2</span> != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> W = sum / <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">boolean</span>[] dp = <span class="keyword">new</span> <span class="keyword">boolean</span>[W + <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">int</span> n = nums.length;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= W; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(nums[<span class="number">0</span>] == i) dp[i] = <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = W; j &gt;= nums[i]; j--) &#123;</span><br><span class="line">            dp[j] = dp[j] || dp[j - nums[i]];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> dp[W];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>�ַ����������б�ָ�</strong></p><p><a href="https://leetcode.com/problems/word-break/description/" target="_blank" rel="noopener">Leetcode : 139. Word Break (Medium)</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s = "leetcode",</span><br><span class="line">dict = ["leet", "code"].</span><br><span class="line">Return true because "leetcode" can be segmented as "leet code".</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">wordBreak</span><span class="params">(String s, List&lt;String&gt; wordDict)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = s.length();</span><br><span class="line">    <span class="keyword">boolean</span>[] dp = <span class="keyword">new</span> <span class="keyword">boolean</span>[n + <span class="number">1</span>];</span><br><span class="line">    dp[<span class="number">0</span>] = <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (String word : wordDict) &#123;</span><br><span class="line">            <span class="keyword">if</span> (word.length() &lt;= i</span><br><span class="line">                    &amp;&amp; word.equals(s.substring(i - word.length(), i))) &#123;</span><br><span class="line">                dp[i] = dp[i] || dp[i - word.length()];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> dp[n];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>�ı�һ������������ʹ�����ǵĺ�Ϊһ������</strong></p><p><a href="https://leetcode.com/problems/target-sum/description/" target="_blank" rel="noopener">Leetcode : 494. Target Sum (Medium)</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Input: nums is [1, 1, 1, 1, 1], S is 3. </span><br><span class="line">Output: 5</span><br><span class="line">Explanation: </span><br><span class="line"></span><br><span class="line">-1+1+1+1+1 = 3</span><br><span class="line">+1-1+1+1+1 = 3</span><br><span class="line">+1+1-1+1+1 = 3</span><br><span class="line">+1+1+1-1+1 = 3</span><br><span class="line">+1+1+1+1-1 = 3</span><br><span class="line"></span><br><span class="line">There are 5 ways to assign symbols to make the sum of nums be target 3.</span><br></pre></td></tr></table></figure><p>���������ת��Ϊ subset sum ���⣬�Ӷ�ʹ�� 0-1 �����ķ�������⡣���Խ����������������֣�P �� N������ P ʹ�����ţ�N ʹ�ø��ţ��������Ƶ���</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">                  sum(P) - sum(N) = target</span><br><span class="line">sum(P) + sum(N) + sum(P) - sum(N) = target + sum(P) + sum(N)</span><br><span class="line">                       2 * sum(P) = target + sum(nums)</span><br></pre></td></tr></table></figure><p>���ֻҪ�ҵ�һ���Ӽ��������Ƕ�ȡ���ţ����Һ͵��� (target + sum(nums))/2����֤�����ڽ⡣</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findTargetSumWays</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> S)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> num : nums) &#123;</span><br><span class="line">        sum += num;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (sum &lt; S || (sum + S) % <span class="number">2</span> == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> subsetSum(nums, (sum + S) &gt;&gt;&gt; <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">subsetSum</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> targetSum)</span> </span>&#123;</span><br><span class="line">    Arrays.sort(nums);</span><br><span class="line">    <span class="keyword">int</span>[] dp = <span class="keyword">new</span> <span class="keyword">int</span>[targetSum + <span class="number">1</span>];</span><br><span class="line">    dp[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> num = nums[i];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = targetSum; j &gt;= num; j--) &#123;</span><br><span class="line">            dp[j] = dp[j] + dp[j - num];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> dp[targetSum];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>01�ַ����������ַ���</strong></p><p><a href="https://leetcode.com/problems/ones-and-zeroes/description/" target="_blank" rel="noopener">Leetcode : 474. Ones and Zeroes (Medium)</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Input: Array = &#123;"10", "0001", "111001", "1", "0"&#125;, m = 5, n = 3</span><br><span class="line">Output: 4</span><br><span class="line"></span><br><span class="line">Explanation: This are totally 4 strings can be formed by the using of 5 0s and 3 1s, which are ��10,��0001��,��1��,��0��</span><br></pre></td></tr></table></figure><p>����һ����ά���õ� 0-1 �������⣬������������С��0 �������� 1 ��������</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findMaxForm</span><span class="params">(String[] strs, <span class="keyword">int</span> m, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (strs == <span class="keyword">null</span> || strs.length == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> l = strs.length;</span><br><span class="line">    <span class="keyword">int</span>[][] dp = <span class="keyword">new</span> <span class="keyword">int</span>[m + <span class="number">1</span>][n + <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; l; i++) &#123;</span><br><span class="line">        String s = strs[i];</span><br><span class="line">        <span class="keyword">int</span> ones = <span class="number">0</span>, zeros = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">char</span> c : s.toCharArray()) &#123;</span><br><span class="line">            <span class="keyword">if</span> (c == <span class="string">'0'</span>) zeros++;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (c == <span class="string">'1'</span>) ones++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = m; j &gt;= zeros; j--) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> k = n; k &gt;= ones; k--) &#123;</span><br><span class="line">                <span class="keyword">if</span> (zeros &lt;= j &amp;&amp; ones &lt;= k) &#123;</span><br><span class="line">                    dp[j][k] = Math.max(dp[j][k], dp[j - zeros][k - ones] + <span class="number">1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> dp[m][n];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>����Ǯ</strong></p><p><a href="https://leetcode.com/problems/coin-change/description/" target="_blank" rel="noopener">Leetcode : 322. Coin Change (Medium)</a></p><p>��Ŀ��������һЩ����Ӳ�ң�Ҫ������ЩӲ������ɸ�������Ǯ��������ʹ��Ӳ���������١�Ӳ�ҿ����ظ�ʹ�á�</p><p>����һ����ȫ�������⣬��ȫ��������� 0-1����������ʵ����Ψһ�Ĳ�ͬ�ǣ��ڶ���ѭ���Ǵ� 0 ��ʼ�ģ������Ǵ�β����ʼ��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">coinChange</span><span class="params">(<span class="keyword">int</span>[] coins, <span class="keyword">int</span> amount)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span>[] dp = <span class="keyword">new</span> <span class="keyword">int</span>[amount + <span class="number">1</span>];</span><br><span class="line">    Arrays.fill(dp, amount + <span class="number">1</span>);</span><br><span class="line">    dp[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= amount; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; coins.length; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (coins[j] &lt;= i) &#123;</span><br><span class="line">                dp[i] = Math.min(dp[i], dp[i - coins[j]] + <span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> dp[amount] &gt; amount ? -<span class="number">1</span> : dp[amount];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>����ܺ�</strong></p><p><a href="https://leetcode.com/problems/combination-sum-iv/description/" target="_blank" rel="noopener">Leetcode : 377. Combination Sum IV (Medium)</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">nums = [1, 2, 3]</span><br><span class="line">target = 4</span><br><span class="line"></span><br><span class="line">The possible combination ways are:</span><br><span class="line">(1, 1, 1, 1)</span><br><span class="line">(1, 1, 2)</span><br><span class="line">(1, 2, 1)</span><br><span class="line">(1, 3)</span><br><span class="line">(2, 1, 1)</span><br><span class="line">(2, 2)</span><br><span class="line">(3, 1)</span><br><span class="line"></span><br><span class="line">Note that different sequences are counted as different combinations.</span><br><span class="line"></span><br><span class="line">Therefore the output is 7.</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">combinationSum4</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> target)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span>[] dp = <span class="keyword">new</span> <span class="keyword">int</span>[target + <span class="number">1</span>];</span><br><span class="line">    dp[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= target; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; nums.length; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(nums[j] &lt;= i) &#123;</span><br><span class="line">                dp[i] += dp[i - nums[j]];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> dp[target];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>ֻ�ܽ������εĹ�Ʊ����</strong></p><p><a href="https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iii/description/" target="_blank" rel="noopener">Leetcode : 123. Best Time to Buy and Sell Stock III (Hard)</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(<span class="keyword">int</span>[] prices)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> firstBuy = Integer.MIN_VALUE, firstSell = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> secondBuy = Integer.MIN_VALUE, secondSell = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> curPrice : prices) &#123;</span><br><span class="line">        <span class="keyword">if</span> (firstBuy &lt; -curPrice) firstBuy = -curPrice;</span><br><span class="line">        <span class="keyword">if</span> (firstSell &lt; firstBuy + curPrice) firstSell = firstBuy + curPrice;</span><br><span class="line">        <span class="keyword">if</span> (secondBuy &lt; firstSell - curPrice) secondBuy = firstSell - curPrice;</span><br><span class="line">        <span class="keyword">if</span> (secondSell &lt; secondBuy + curPrice) secondSell = secondBuy + curPrice;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> secondSell;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>ֻ�ܽ��� k �εĹ�Ʊ����</strong></p><p><a href="https://leetcode.com/problems/best-time-to-buy-and-sell-stock-iv/description/" target="_blank" rel="noopener">Leetcode : 188. Best Time to Buy and Sell Stock IV (Hard)</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dp[i, j] = max(dp[i, j-1], prices[j] - prices[jj] + dp[i-1, jj]) &#123; jj in range of [0, j-1] &#125; = max(dp[i, j-1], prices[j] + max(dp[i-1, jj] - prices[jj]))</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(<span class="keyword">int</span> k, <span class="keyword">int</span>[] prices)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = prices.length;</span><br><span class="line">    <span class="keyword">if</span> (k &gt;= n/<span class="number">2</span>) &#123;</span><br><span class="line">        <span class="keyword">int</span> maxPro = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (prices[i] &gt; prices[i-<span class="number">1</span>])</span><br><span class="line">                maxPro += prices[i] - prices[i-<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> maxPro;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span>[][] dp = <span class="keyword">new</span> <span class="keyword">int</span>[k + <span class="number">1</span>][n];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= k; i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> localMax = dp[i - <span class="number">1</span>][<span class="number">0</span>] - prices[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; n; j++) &#123;</span><br><span class="line">            dp[i][j] = Math.max(dp[i][j - <span class="number">1</span>], prices[j] + localMax);</span><br><span class="line">            localMax = Math.max(localMax, dp[i - <span class="number">1</span>][j] - prices[j]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> dp[k][n - <span class="number">1</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="��������"><a href="#��������" class="headerlink" title="��������"></a>��������</h3><p><strong>���������</strong></p><p><a href="https://leetcode.com/problems/range-sum-query-immutable/description/" target="_blank" rel="noopener">Leetcode : 303. Range Sum Query - Immutable (Easy)</a></p><p>������ i ~ j �ĺͣ�����ת��Ϊ sum[j] - sum[i-1]������ sum[i] Ϊ 0 ~ j �ĺ͡�</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NumArray</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span>[] nums;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">NumArray</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; nums.length; i++)</span><br><span class="line">            nums[i] += nums[i - <span class="number">1</span>];</span><br><span class="line">        <span class="keyword">this</span>.nums = nums;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">sumRange</span><span class="params">(<span class="keyword">int</span> i, <span class="keyword">int</span> j)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> i == <span class="number">0</span> ? nums[j] : nums[j] - nums[i - <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>���������ĺ�</strong></p><p><a href="https://leetcode.com/problems/maximum-subarray/description/" target="_blank" rel="noopener">Leetcode : 53. Maximum Subarray (Easy)</a></p><p>�� sum[i] Ϊ�� num[i] Ϊ��β�����������ĺͣ������� sum[i-1] �õ� sum[i] ��ֵ����� sum[i-1] С�� 0����ô�� num[i] Ϊ��β�������鲻�ܰ���ǰ������ݣ���Ϊ����ǰ��Ĳ��֣���ô��һ����� num[i] ��С��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxSubArray</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = nums.length;</span><br><span class="line">    <span class="keyword">int</span>[] sum = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">    sum[<span class="number">0</span>] = nums[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">int</span> max = sum[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++)&#123;</span><br><span class="line">        sum[i] = (sum[i-<span class="number">1</span>] &gt; <span class="number">0</span> ? sum[i-<span class="number">1</span>] : <span class="number">0</span>) + nums[i];</span><br><span class="line">        max = Math.max(max, sum[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> max;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>�����еȲ����������ĸ���</strong></p><p><a href="https://leetcode.com/problems/arithmetic-slices/description/" target="_blank" rel="noopener">Leetcode : 413. Arithmetic Slices (Medium)</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">A = [1, 2, 3, 4]</span><br><span class="line"></span><br><span class="line">return: 3, for 3 arithmetic slices in A: [1, 2, 3], [2, 3, 4] and [1, 2, 3, 4] itself.</span><br></pre></td></tr></table></figure><p>���� (1,2,3,4)������������ɵ���������ķ�ʽ�������� (1,2,3,4,5)������ɵ���������ķ�ʽ���� (1,2,3,4) �������⻹����һ�֣��� (1,2,3,4,5)����� dp[i] = dp[i - 1] + 1��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">numberOfArithmeticSlices</span><span class="params">(<span class="keyword">int</span>[] A)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = A.length;</span><br><span class="line">    <span class="keyword">int</span>[] dp = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(A[i] - A[i - <span class="number">1</span>] == A[i - <span class="number">1</span>] - A[i - <span class="number">2</span>]) &#123;</span><br><span class="line">            dp[i] = dp[i - <span class="number">1</span>] + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> ret = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> cnt : dp) &#123;</span><br><span class="line">        ret += cnt;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="�ַ����༭"><a href="#�ַ����༭" class="headerlink" title="�ַ����༭"></a>�ַ����༭</h3><p><strong>ɾ�������ַ������ַ�ʹ�������</strong></p><p><a href="https://leetcode.com/problems/delete-operation-for-two-strings/description/" target="_blank" rel="noopener">Leetcode : 583. Delete Operation for Two Strings (Medium)</a></p><p>����ת��Ϊ�������ַ�������������������⡣</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">minDistance</span><span class="params">(String word1, String word2)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> m = word1.length(), n = word2.length();</span><br><span class="line">    <span class="keyword">int</span>[][] dp = <span class="keyword">new</span> <span class="keyword">int</span>[m + <span class="number">1</span>][n + <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= m; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= n; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i == <span class="number">0</span> || j == <span class="number">0</span>) <span class="keyword">continue</span>;</span><br><span class="line">            dp[i][j] = word1.charAt(i - <span class="number">1</span>) == word2.charAt(j - <span class="number">1</span>) ? dp[i - <span class="number">1</span>][j - <span class="number">1</span>] + <span class="number">1</span></span><br><span class="line">                    : Math.max(dp[i][j - <span class="number">1</span>], dp[i - <span class="number">1</span>][j]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> m + n - <span class="number">2</span> * dp[m][n];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>�޸�һ���ַ�����Ϊ��һ���ַ���</strong> // TODO</p><p><a href="https://leetcode.com/problems/edit-distance/description/" target="_blank" rel="noopener">Leetcode : 72. Edit Distance (Hard)</a></p><h3 id="��������-1"><a href="#��������-1" class="headerlink" title="��������"></a>��������</h3><p><strong>��Ҫ��ȴ�ڵĹ�Ʊ����</strong></p><p><a href="https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown/description/" target="_blank" rel="noopener">Leetcode : 309. Best Time to Buy and Sell Stock with Cooldown(Medium)</a></p><p>��Ŀ����������֮����Ҫ��һ�����ȴʱ�䡣</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/ac9b31ec-cef1-4880-a875-fc4571ca10e1.png" alt=""></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">s0[i] = max(s0[i - 1], s2[i - 1]); // Stay at s0, or rest from s2</span><br><span class="line">s1[i] = max(s1[i - 1], s0[i - 1] - prices[i]); // Stay at s1, or buy from s0</span><br><span class="line">s2[i] = s1[i - 1] + prices[i]; // Only one way from s1</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(<span class="keyword">int</span>[] prices)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (prices == <span class="keyword">null</span> || prices.length == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> n = prices.length;</span><br><span class="line">    <span class="keyword">int</span>[] s0 = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">    <span class="keyword">int</span>[] s1 = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">    <span class="keyword">int</span>[] s2 = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">    s0[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    s1[<span class="number">0</span>] = -prices[<span class="number">0</span>];</span><br><span class="line">    s2[<span class="number">0</span>] = Integer.MIN_VALUE;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">        s0[i] = Math.max(s0[i - <span class="number">1</span>], s2[i - <span class="number">1</span>]);</span><br><span class="line">        s1[i] = Math.max(s1[i - <span class="number">1</span>], s0[i - <span class="number">1</span>] - prices[i]);</span><br><span class="line">        s2[i] = Math.max(s2[i - <span class="number">1</span>], s1[i - <span class="number">1</span>] + prices[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> Math.max(s0[n - <span class="number">1</span>], s2[n - <span class="number">1</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>ͳ�ƴ� 0 ~ n ÿ�����Ķ����Ʊ�ʾ�� 1 �ĸ���</strong></p><p><a href="https://leetcode.com/problems/counting-bits/description/" target="_blank" rel="noopener">Leetcode : 338. Counting Bits (Medium)</a></p><p>�������� 6(110)�������Կ��������� 2(10) ǰ�����һ�� 1 ����� dp[i] = dp[i&amp;(i-1)] + 1;</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">int</span>[] countBits(<span class="keyword">int</span> num) &#123;</span><br><span class="line">    <span class="keyword">int</span>[] ret = <span class="keyword">new</span> <span class="keyword">int</span>[num + <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= num; i++)&#123;</span><br><span class="line">        ret[i] = ret[i&amp;(i-<span class="number">1</span>)] + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>һ���������ܹ����ɵ����</strong></p><p><a href="https://leetcode.com/problems/maximum-length-of-pair-chain/description/" target="_blank" rel="noopener">Leetcode : 646. Maximum Length of Pair Chain (Medium)</a></p><p>���� (a, b) �� (c, d) ����� b &lt; c�������ǿ��Թ���һ������</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findLongestChain</span><span class="params">(<span class="keyword">int</span>[][] pairs)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(pairs == <span class="keyword">null</span> || pairs.length == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    Arrays.sort(pairs, (a, b) -&gt; (a[<span class="number">0</span>] - b[<span class="number">0</span>]));</span><br><span class="line">    <span class="keyword">int</span> n = pairs.length;</span><br><span class="line">    <span class="keyword">int</span>[] dp = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">    Arrays.fill(dp, <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; i; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span>(pairs[i][<span class="number">0</span>] &gt; pairs[j][<span class="number">1</span>])&#123;</span><br><span class="line">                dp[i] = Math.max(dp[i], dp[j] + <span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> ret = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> num : dp) &#123;</span><br><span class="line">        ret = Math.max(ret, num);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>������۳���Ʊ��������</strong></p><p><a href="https://leetcode.com/problems/best-time-to-buy-and-sell-stock/description/" target="_blank" rel="noopener">Leetcode : 121. Best Time to Buy and Sell Stock (Easy)</a></p><p>ֻ����һ�ν��ס�</p><p>ֻҪ��¼ǰ�����С�۸񣬽������С�۸���Ϊ����۸�Ȼ�󽫵�ǰ�ļ۸���Ϊ�۳��۸񣬲鿴����۸��Ƿ��ǵ�ǰ�����۸�</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxProfit</span><span class="params">(<span class="keyword">int</span>[] prices)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = prices.length;</span><br><span class="line">    <span class="keyword">if</span>(n == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> soFarMin = prices[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">int</span> max = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(soFarMin &gt; prices[i]) soFarMin = prices[i];</span><br><span class="line">        <span class="keyword">else</span> max = Math.max(max, prices[i] - soFarMin);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> max;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>����ճ���ַ�</strong></p><p><a href="https://leetcode.com/problems/2-keys-keyboard/description/" target="_blank" rel="noopener">Leetcode : 650. 2 Keys Keyboard (Medium)</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">minSteps</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span>[] dp = <span class="keyword">new</span> <span class="keyword">int</span>[n + <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        dp[i] = i;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = i - <span class="number">1</span>; j &gt;= <span class="number">0</span>; j--) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i % j == <span class="number">0</span>) &#123;</span><br><span class="line">                dp[i] = dp[j] + dp[i / j];</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> dp[n];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">minSteps</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">1</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= Math.sqrt(n); i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (n % i == <span class="number">0</span>) <span class="keyword">return</span> i + minSteps(n / i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> n;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="��ѧ"><a href="#��ѧ" class="headerlink" title="��ѧ"></a>��ѧ</h2><h3 id="����-3"><a href="#����-3" class="headerlink" title="����"></a>����</h3><p><strong>�����ֽ�</strong></p><p>ÿһ���������Էֽ�������ĳ˻������� 84 = 2<sup>2</sup> * 3<sup>1</sup> * 5<sup>0</sup> * 7<sup>1</sup> * 11<sup>0</sup> * 13<sup>0</sup> * 17<sup>0</sup> * ��</p><p><strong>����</strong></p><p>�� x = 2<sup>m0</sup> * 3<sup>m1</sup> * 5<sup>m2</sup> * 7<sup>m3</sup> * 11<sup>m4</sup> * ��<br>�� y = 2<sup>n0</sup> * 3<sup>n1</sup> * 5<sup>n2</sup> * 7<sup>n3</sup> * 11<sup>n4</sup> * ��</p><p>��� x ���� y��y mod x == 0������������� i��mi &lt;= ni��</p><p>x �� y �� <strong>���Լ��</strong> Ϊ��gcd(x,y) =  2<sup>min(m0,n0)</sup> * 3<sup>min(m1,n1)</sup> * 5<sup>min(m2,n2)</sup> * …</p><p>x �� y �� <strong>��С������</strong> Ϊ��lcm(x,y) =  2<sup>max(m0,n0)</sup> * 3<sup>max(m1,n1)</sup> * 5<sup>max(m2,n2)</sup> * …</p><p><strong>������������</strong></p><p><a href="https://leetcode.com/problems/count-primes/description/" target="_blank" rel="noopener">Leetcode : 204. Count Primes (Easy)</a></p><p>������˹����ɸ����ÿ���ҵ�һ������ʱ�����ܱ��������������ų���</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">countPrimes</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">boolean</span>[] notPrimes = <span class="keyword">new</span> <span class="keyword">boolean</span>[n + <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">2</span>; i &lt; n; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(notPrimes[i]) <span class="keyword">continue</span>;</span><br><span class="line">        cnt++;</span><br><span class="line">        <span class="comment">// �� i * i ��ʼ����Ϊ��� k &lt; i����ô k * i ��֮ǰ���Ѿ���ȥ������</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">long</span> j = (<span class="keyword">long</span>) i * i; j &lt; n; j += i)&#123;</span><br><span class="line">            notPrimes[(<span class="keyword">int</span>) j] = <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> cnt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="���Լ��"><a href="#���Լ��" class="headerlink" title="���Լ��"></a>���Լ��</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (b == <span class="number">0</span>) <span class="keyword">return</span> a;</span><br><span class="line">    <span class="keyword">return</span> gcd(b, a % b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>��󹫱���Ϊ�����ĳ˻��������Լ����</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">lcm</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> a * b / gcd(a, b);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>�������Լ�����⣬��Ϊ��Ҫ���� a % b ������������ǱȽϺ�ʱ�ģ�����ʹ�� <a href=""> ���֮����2.7</a> �ķ��������ü�������λ�������滻����</p><p>���� a �� b �����Լ�� f(a, b)���У�</p><p>1. ��� a �� b ��Ϊż����f(a, b) = 2*f(a/2, b/2);<br>2. ��� a ��ż�� b ��������f(a, b) = f(a/2, b);<br>3. ��� b ��ż�� a ��������f(a, b) = f(a, b/2);<br>4. ��� a �� b ��Ϊ������f(a, b) = f(a, a-b);</p><p>�� 2 �ͳ� 2 ������ת��Ϊ��λ������</p><h3 id="����ת��"><a href="#����ת��" class="headerlink" title="����ת��"></a>����ת��</h3><p>Java �� static String toString(int num, int radix) ���Խ�һ������װ��Ϊ redix ���Ʊ�ʾ���ַ�����</p><p><strong>7 ����</strong></p><p><a href="https://leetcode.com/problems/base-7/description/" target="_blank" rel="noopener">Leetcode : 504. Base 7 (Easy)</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">convertToBase7</span><span class="params">(<span class="keyword">int</span> num)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (num &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">'-'</span> + convertToBase7(-num);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (num &lt; <span class="number">7</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> num + <span class="string">""</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> convertToBase7(num / <span class="number">7</span>) + num % <span class="number">7</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>16 ����</strong></p><p><a href="https://leetcode.com/problems/convert-a-number-to-hexadecimal/description/" target="_blank" rel="noopener">Leetcode : 405. Convert a Number to Hexadecimal (Easy)</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">toHex</span><span class="params">(<span class="keyword">int</span> num)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">char</span>[] map = &#123;<span class="string">'0'</span>,<span class="string">'1'</span>,<span class="string">'2'</span>,<span class="string">'3'</span>,<span class="string">'4'</span>,<span class="string">'5'</span>,<span class="string">'6'</span>,<span class="string">'7'</span>,<span class="string">'8'</span>,<span class="string">'9'</span>,<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'c'</span>,<span class="string">'d'</span>,<span class="string">'e'</span>,<span class="string">'f'</span>&#125;;</span><br><span class="line">    <span class="keyword">if</span>(num == <span class="number">0</span>) <span class="keyword">return</span> <span class="string">"0"</span>;</span><br><span class="line">    String ret = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">while</span>(num != <span class="number">0</span>)&#123;</span><br><span class="line">        ret = map[(num &amp; <span class="number">0b1111</span>)] + ret;</span><br><span class="line">        num &gt;&gt;&gt;= <span class="number">4</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="�׳�"><a href="#�׳�" class="headerlink" title="�׳�"></a>�׳�</h3><p><strong>ͳ�ƽ׳�β���ж��ٸ� 0</strong></p><p><a href="https://leetcode.com/problems/factorial-trailing-zeroes/description/" target="_blank" rel="noopener">Leetcode : 172. Factorial Trailing Zeroes (Easy)</a></p><p>β���� 0 �� 2 * 5 ������2 ���������Զ��� 5 �����������ֻҪͳ���ж��ٸ� 5 ���ɡ�</p><p>����һ���� N���������� 5 �ĸ���Ϊ��N/5 + N/5<sup>2</sup> + N/5<sup>3</sup> + …������ N/5 ��ʾ������ N ������ 5 �ı�������һ�� 5��N/5<sup>2</sup> ��ʾ������ N ������ 5<sup>2</sup> �ı����ٹ���һ�� 5 …��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">trailingZeroes</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> n == <span class="number">0</span> ? <span class="number">0</span> : n / <span class="number">5</span> + trailingZeroes(n / <span class="number">5</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>���ͳ�Ƶ��� N! �Ķ����Ʊ�ʾ�����λ 1 ��λ�ã�ֻҪͳ���ж��ٸ� 2 ���ɣ�����Ŀ���� <a href="#"> ���֮����2.2</a> ��������ж��ٸ� 5 һ����2 �ĸ���Ϊ N/2 + N/2<sup>2</sup> + N/2<sup>3</sup> + …</p><h3 id="�ַ����ӷ�����"><a href="#�ַ����ӷ�����" class="headerlink" title="�ַ����ӷ�����"></a>�ַ����ӷ�����</h3><p><strong>�����Ƽӷ�</strong></p><p><a href="https://leetcode.com/problems/add-binary/description/" target="_blank" rel="noopener">Leetcode : 67. Add Binary (Easy)</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">addBinary</span><span class="params">(String a, String b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = a.length() - <span class="number">1</span>, j = b.length() - <span class="number">1</span>, carry = <span class="number">0</span>;</span><br><span class="line">    String str = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &gt;= <span class="number">0</span> || j &gt;= <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(i &gt;= <span class="number">0</span> &amp;&amp; a.charAt(i--) == <span class="string">'1'</span>) carry++;</span><br><span class="line">        <span class="keyword">if</span>(j &gt;= <span class="number">0</span> &amp;&amp; b.charAt(j--) == <span class="string">'1'</span>) carry++;</span><br><span class="line">        str = (carry % <span class="number">2</span>) + str;</span><br><span class="line">        carry /= <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(carry == <span class="number">1</span>) str = <span class="string">"1"</span> + str;</span><br><span class="line">    <span class="keyword">return</span> str;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>�ַ����ӷ�</strong></p><p><a href="https://leetcode.com/problems/add-strings/description/" target="_blank" rel="noopener">Leetcode : 415. Add Strings (Easy)</a></p><p>��Ŀ�������ַ�����ֵΪ�Ǹ�����</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">addStrings</span><span class="params">(String num1, String num2)</span> </span>&#123;</span><br><span class="line">    StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">    <span class="keyword">int</span> carry = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = num1.length() - <span class="number">1</span>, j = num2.length() - <span class="number">1</span>; i &gt;= <span class="number">0</span> || j &gt;= <span class="number">0</span> || carry == <span class="number">1</span>; i--, j--)&#123;</span><br><span class="line">        <span class="keyword">int</span> x = i &lt; <span class="number">0</span> ? <span class="number">0</span> : num1.charAt(i) - <span class="string">'0'</span>;</span><br><span class="line">        <span class="keyword">int</span> y = j &lt; <span class="number">0</span> ? <span class="number">0</span> : num2.charAt(j) - <span class="string">'0'</span>;</span><br><span class="line">        sb.append((x + y + carry) % <span class="number">10</span>);</span><br><span class="line">        carry = (x + y + carry) / <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sb.reverse().toString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="��������-2"><a href="#��������-2" class="headerlink" title="��������"></a>��������</h3><p><strong>�ı�����Ԫ��ʹ���е�����Ԫ�ض����</strong></p><p><a href="https://leetcode.com/problems/minimum-moves-to-equal-array-elements-ii/description/" target="_blank" rel="noopener">Leetcode : 462. Minimum Moves to Equal Array Elements II (Medium)</a></p><p>��Ŀ������ÿ�ο��Զ�һ������Ԫ�ؼ�һ���߼�һ������С�ĸı������</p><p>���Ǹ����͵��������⣬�ƶ�������С�ķ�ʽ������Ԫ�ض��ƶ�����λ�����������£�</p><p>�� m Ϊ��λ����a �� b �� m ���ߵ�����Ԫ�أ��� b &gt; a��Ҫʹ a �� b ��ȣ������ܹ��ƶ��Ĵ���Ϊ b - a�����ֵ���� (b - m) + (m - a)��Ҳ���ǰ����������ƶ�����λ�����ƶ�������</p><p>�����鳤��Ϊ N��������ҵ� N/2 �� a �� b ����ϣ�ʹ���Ƕ��ƶ��� m ��λ�á�</p><p><strong>�ⷨ 1</strong></p><p>������ʱ�临�Ӷȣ�O(NlgN)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">minMoves2</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">    Arrays.sort(nums);</span><br><span class="line">    <span class="keyword">int</span> ret = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> l = <span class="number">0</span>, h = nums.length - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(l &lt;= h) &#123;</span><br><span class="line">        ret += nums[h] - nums[l];</span><br><span class="line">        l++;</span><br><span class="line">        h--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>�ⷨ 2</strong></p><p>ʹ�ÿ��������ҵ���λ����ʱ�临�Ӷ� O(N)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">minMoves2</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ret = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> n = nums.length;</span><br><span class="line">    <span class="keyword">int</span> median = quickSelect(nums, <span class="number">0</span>, n - <span class="number">1</span>, n / <span class="number">2</span> + <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> num : nums) ret += Math.abs(num - median);</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">quickSelect</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> start, <span class="keyword">int</span> end, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> l = start, r = end, privot = nums[(l + r) / <span class="number">2</span>];</span><br><span class="line">    <span class="keyword">while</span>(l &lt;= r) &#123;</span><br><span class="line">        <span class="keyword">while</span>(nums[l] &lt; privot) l++;</span><br><span class="line">        <span class="keyword">while</span>(nums[r] &gt; privot) r--;</span><br><span class="line">        <span class="keyword">if</span>(l &gt;= r) <span class="keyword">break</span>;</span><br><span class="line">        swap(nums, l, r);</span><br><span class="line">        l++; r--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> left = l - start + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(left &gt; k) <span class="keyword">return</span> quickSelect(nums, start, l - <span class="number">1</span>, k);</span><br><span class="line">    <span class="keyword">if</span>(left == k &amp;&amp; l == r) <span class="keyword">return</span> nums[l];</span><br><span class="line">    <span class="keyword">int</span> right = r - start + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> quickSelect(nums, r + <span class="number">1</span>, end, k - right);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> i, <span class="keyword">int</span> j)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> tmp = nums[i]; nums[i] = nums[j]; nums[j] = tmp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="����ͶƱ����"><a href="#����ͶƱ����" class="headerlink" title="����ͶƱ����"></a>����ͶƱ����</h3><p><strong>�����г��ִ������� n / 2 ��Ԫ��</strong></p><p><a href="https://leetcode.com/problems/majority-element/description/" target="_blank" rel="noopener">Leetcode : 169. Majority Element (Easy)</a></p><p>�ȶ������������м��Ǹ������ִ���һ������ n / 2</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">majorityElement</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">    Arrays.sort(nums);</span><br><span class="line">    <span class="keyword">return</span> nums[nums.length / <span class="number">2</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>�������� Boyer-Moore Majority Vote Algorithm �����������⣬ʹ��ʱ�临�Ӷ�Ϊ O(n)��������ô�����㷨��ʹ�� cnt ��ͳ��һ��Ԫ�س��ֵĴ���������������Ԫ�غ�ͳ��Ԫ�ز����ʱ���� cnt–�����ǰ������� i ��Ԫ�أ��� cnt == 0 ��˵��ǰ i ��Ԫ��û�� majority�������� majority�����ǳ��ֵĴ������� i / 2 ����Ϊ������� i / 2 �Ļ� cnt ��һ������Ϊ 0 ����ʱʣ�µ� n - i ��Ԫ���У�majority ����Ŀ���� (n - i) / 2����˼������Ҿ����ҳ� majority��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">majorityElement</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="number">0</span>, majority = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums.length; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(cnt == <span class="number">0</span>) &#123;</span><br><span class="line">            majority = nums[i];</span><br><span class="line">            cnt++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(majority == nums[i]) cnt++;</span><br><span class="line">        <span class="keyword">else</span> cnt--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> majority;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="����-4"><a href="#����-4" class="headerlink" title="����"></a>����</h3><p><strong>ƽ����</strong></p><p><a href="https://leetcode.com/problems/valid-perfect-square/description/" target="_blank" rel="noopener">Leetcode : 367. Valid Perfect Square (Easy)</a></p><p>ƽ�����У�1,4,9,16,..<br>���3,5,7,…</p><p>���Ϊ�Ȳ����У�ʹ��������Կ��Եõ��� 1 ��ʼ��ƽ�����С�</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isPerfectSquare</span><span class="params">(<span class="keyword">int</span> num)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> subNum = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (num &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        num -= subNum;</span><br><span class="line">        subNum += <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> num == <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>3 �� n �η�</strong></p><p><a href="https://leetcode.com/problems/power-of-three/description/" target="_blank" rel="noopener">Leetcode : 326. Power of Three (Easy)</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isPowerOfThree</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> n &gt; <span class="number">0</span> &amp;&amp; (<span class="number">1162261467</span> % n == <span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>�ҳ������еĳ˻�����������</strong></p><p><a href="https://leetcode.com/problems/maximum-product-of-three-numbers/description/" target="_blank" rel="noopener">Leetcode : 628. Maximum Product of Three Numbers (Easy)</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maximumProduct</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> max1 = Integer.MIN_VALUE, max2 = Integer.MIN_VALUE, max3 = Integer.MIN_VALUE, min1 = Integer.MAX_VALUE, min2 = Integer.MAX_VALUE;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> n : nums) &#123;</span><br><span class="line">        <span class="keyword">if</span> (n &gt; max1) &#123;</span><br><span class="line">            max3 = max2;</span><br><span class="line">            max2 = max1;</span><br><span class="line">            max1 = n;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (n &gt; max2) &#123;</span><br><span class="line">            max3 = max2;</span><br><span class="line">            max2 = n;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (n &gt; max3) &#123;</span><br><span class="line">            max3 = n;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (n &lt; min1) &#123;</span><br><span class="line">            min2 = min1;</span><br><span class="line">            min1 = n;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (n &lt; min2) &#123;</span><br><span class="line">            min2 = n;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> Math.max(max1*max2*max3, max1*min1*min2);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>�˻�����</strong></p><p><a href="https://leetcode.com/problems/product-of-array-except-self/description/" target="_blank" rel="noopener">Leetcode : 238. Product of Array Except Self (Medium)</a></p><p>��Ŀ����������һ�����飬����һ�������飬�������ÿ��Ԫ��Ϊԭʼ�����г��˸�λ���ϵ�Ԫ��֮������Ԫ�صĳ˻���</p><p>��ĿҪ��ʱ�临�Ӷ�Ϊ O(n)�����Ҳ���ʹ�ó�����</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">int</span>[] productExceptSelf(<span class="keyword">int</span>[] nums) &#123;</span><br><span class="line">    <span class="keyword">int</span> n = nums.length;</span><br><span class="line">    <span class="keyword">int</span>[] ret = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">    ret[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">        ret[i] = ret[i - <span class="number">1</span>] * nums[i - <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> right = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = n - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">        ret[i] *= right;</span><br><span class="line">        right *= nums[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="���ݽu���"><a href="#���ݽu���" class="headerlink" title="���ݽṹ���"></a>���ݽṹ���</h1><h2 id="ջ�Ͷ���"><a href="#ջ�Ͷ���" class="headerlink" title="ջ�Ͷ���"></a>ջ�Ͷ���</h2><p><strong>��ջʵ�ֶ���</strong></p><p>һ��ջʵ�֣�</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span>  <span class="title">MyQueue</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Stack&lt;Integer&gt; st = <span class="keyword">new</span> Stack();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">push</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">        Stack&lt;Integer&gt; temp = <span class="keyword">new</span> Stack();</span><br><span class="line">        <span class="keyword">while</span>(!st.isEmpty())&#123;</span><br><span class="line">            temp.push(st.pop());</span><br><span class="line">        &#125;</span><br><span class="line">        st.push(x);</span><br><span class="line">        <span class="keyword">while</span>(!temp.isEmpty())&#123;</span><br><span class="line">            st.push(temp.pop());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">pop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> st.pop();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">peek</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> st.peek();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">empty</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> st.isEmpty();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>����ջʵ�֣�</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span>  <span class="title">MyQueue</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> Stack&lt;Integer&gt; in = <span class="keyword">new</span> Stack();</span><br><span class="line">    <span class="keyword">private</span> Stack&lt;Integer&gt; out = <span class="keyword">new</span> Stack();</span><br><span class="line">  </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">push</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">        in.push(x);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">pop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        in2out();</span><br><span class="line">        <span class="keyword">return</span> out.pop();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">peek</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        in2out();</span><br><span class="line">        <span class="keyword">return</span> out.peek();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">in2out</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(out.isEmpty())&#123;</span><br><span class="line">            <span class="keyword">while</span>(!in.isEmpty())&#123;</span><br><span class="line">                out.push(in.pop());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">empty</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> in.isEmpty() &amp;&amp; out.isEmpty();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>�ö���ʵ��ջ</strong></p><p><a href="https://leetcode.com/problems/implement-stack-using-queues/description/" target="_blank" rel="noopener">Leetcode : 225. Implement Stack using Queues (Easy)</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyStack</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> Queue&lt;Integer&gt; queue;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyStack</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        queue = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">push</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">        queue.add(x);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; queue.size(); i++)&#123; <span class="comment">// ��ת</span></span><br><span class="line">            queue.add(queue.remove());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">pop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> queue.remove();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">top</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> queue.peek();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">empty</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> queue.isEmpty();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>��Сֵջ</strong></p><p><a href="https://leetcode.com/problems/min-stack/description/" target="_blank" rel="noopener">Leetcode : 155. Min Stack (Easy)</a></p><p>������ջʵ�֣�һ���洢���ݣ�һ���洢��Сֵ��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MinStack</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> Stack&lt;Integer&gt; dataStack;</span><br><span class="line">    <span class="keyword">private</span> Stack&lt;Integer&gt; minStack;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> min;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MinStack</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        dataStack = <span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line">        minStack = <span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line">        min = Integer.MAX_VALUE;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">push</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">        dataStack.add(x);</span><br><span class="line">        <span class="keyword">if</span>(x &lt; min) &#123;</span><br><span class="line">            min = x;</span><br><span class="line">        &#125;</span><br><span class="line">        minStack.add(min);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">pop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        dataStack.pop();</span><br><span class="line">        minStack.pop();</span><br><span class="line">        <span class="keyword">if</span>(!minStack.isEmpty()) &#123;</span><br><span class="line">            min = minStack.peek();</span><br><span class="line">        &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">            min = Integer.MAX_VALUE;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">top</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dataStack.peek();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getMin</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> min;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>����ʵ����Сֵ�������⣬�����Ƚ�����ʹ��ջ��ʵ�֣�Ȼ��ͽ�����ת��Ϊ��Сֵջ�������������� ���֮����3.7��</p><p><strong>��ջʵ������ƥ��</strong></p><p><a href="https://leetcode.com/problems/valid-parentheses/description/" target="_blank" rel="noopener">Leetcode : 20. Valid Parentheses (Easy)</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">"()[]&#123;&#125;"</span><br><span class="line"></span><br><span class="line">Output : true</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isValid</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">    Stack&lt;Character&gt; stack = <span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s.length(); i++)&#123;</span><br><span class="line">        <span class="keyword">char</span> c = s.charAt(i);</span><br><span class="line">        <span class="keyword">if</span>(c == <span class="string">'('</span> || c == <span class="string">'&#123;'</span> || c == <span class="string">'['</span>) stack.push(c);</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(stack.isEmpty()) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            <span class="keyword">char</span> cStack = stack.pop();</span><br><span class="line">            <span class="keyword">if</span>(c == <span class="string">')'</span> &amp;&amp; cStack != <span class="string">'('</span> ||</span><br><span class="line">              c == <span class="string">']'</span> &amp;&amp; cStack != <span class="string">'['</span> ||</span><br><span class="line">              c == <span class="string">'&#125;'</span> &amp;&amp; cStack != <span class="string">'&#123;'</span> ) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> stack.isEmpty();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>�����бȵ�ǰԪ�ش����һ������Ԫ�صľ���</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: [73, 74, 75, 71, 69, 72, 76, 73]</span><br><span class="line">Output: [1, 1, 4, 2, 1, 1, 0, 0]</span><br></pre></td></tr></table></figure><p><a href="https://leetcode.com/problems/daily-temperatures/description/" target="_blank" rel="noopener">Leetcode : 739. Daily Temperatures (Medium)</a></p><p>ʹ��ջ���洢��δ�����Ԫ�ء����Ա�֤��ջ������Ԫ�ص���������������һ��������ĳ��Ԫ�ش��Ԫ�ؽ���ջ�У������Ǹ�Ԫ���Ѿ��ҵ��������Ԫ�أ���˻��ջ��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">int</span>[] dailyTemperatures(<span class="keyword">int</span>[] temperatures) &#123;</span><br><span class="line">    <span class="keyword">int</span> n = temperatures.length;</span><br><span class="line">    <span class="keyword">int</span>[] ret = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">    Stack&lt;Integer&gt; stack = <span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">while</span>(!stack.isEmpty() &amp;&amp; temperatures[i] &gt; temperatures[stack.peek()]) &#123;</span><br><span class="line">            <span class="keyword">int</span> idx = stack.pop();</span><br><span class="line">            ret[idx] = i - idx;</span><br><span class="line">        &#125;</span><br><span class="line">        stack.add(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>��������һ���ȵ�ǰ�������</strong></p><p><a href="https://leetcode.com/problems/next-greater-element-i/description/" target="_blank" rel="noopener">Leetcode : 496. Next Greater Element I (Easy)</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Input: nums1 = [4,1,2], nums2 = [1,3,4,2].</span><br><span class="line">Output: [-1,3,-1]</span><br></pre></td></tr></table></figure><p>�ڱ�������ʱ�� Stack �������е����������������ǰ����������ջ��Ԫ�����Ĵ�˵��ջ��Ԫ�ص���һ��������������ǵ�ǰԪ�ء�</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">int</span>[] nextGreaterElement(<span class="keyword">int</span>[] nums1, <span class="keyword">int</span>[] nums2) &#123;</span><br><span class="line">    Map&lt;Integer, Integer&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    Stack&lt;Integer&gt; stack = <span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> num : nums2)&#123;</span><br><span class="line">        <span class="keyword">while</span>(!stack.isEmpty() &amp;&amp; num &gt; stack.peek())&#123;</span><br><span class="line">            map.put(stack.pop(), num);</span><br><span class="line">        &#125;</span><br><span class="line">        stack.add(num);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span>[] ret = <span class="keyword">new</span> <span class="keyword">int</span>[nums1.length];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums1.length; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(map.containsKey(nums1[i])) ret[i] = map.get(nums1[i]);</span><br><span class="line">        <span class="keyword">else</span> ret[i] = -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>ѭ����������һ���ȵ�ǰԪ�ش����</strong></p><p><a href="https://leetcode.com/problems/next-greater-element-ii/description/" target="_blank" rel="noopener">Leetcode : 503. Next Greater Element II (Medium)</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">int</span>[] nextGreaterElements(<span class="keyword">int</span>[] nums) &#123;</span><br><span class="line">    <span class="keyword">int</span> n = nums.length, next[] = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">    Arrays.fill(next, -<span class="number">1</span>);</span><br><span class="line">    Stack&lt;Integer&gt; stack = <span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n * <span class="number">2</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> num = nums[i % n];</span><br><span class="line">        <span class="keyword">while</span> (!stack.isEmpty() &amp;&amp; nums[stack.peek()] &lt; num)</span><br><span class="line">            next[stack.pop()] = num;</span><br><span class="line">        <span class="keyword">if</span> (i &lt; n) stack.push(i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> next;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="��ϣ��"><a href="#��ϣ��" class="headerlink" title="��ϣ��"></a>��ϣ��</h2><p>���� Hash Table ���Կ��ٲ���һ��Ԫ���Ƿ���ڵ����⣬������Ҫһ���Ŀռ����洢�������ȿ���ʱ�临�Ӷȵ�����£��������� Hash Table ���ֿռ任ȡʱ���������</p><p>Java �е� <strong>HashSet</strong> ���ڴ洢һ�����ϣ����� O(1) ��ʱ�临�ӶȲ���Ԫ���Ƿ��ڼ����С�</p><p>���Ԫ��������ҷ�Χ������ô������һ�������������洢һ��Ԫ���Ƿ���ڣ��������ֻ��Сд�ַ���Ԫ�أ��Ϳ�����һ������Ϊ 26 �Ĳ����������洢һ���ַ����ϣ�ʹ�ÿռ临�ӶȽ���Ϊ O(1)��</p><p>Java �е� <strong>HashMap</strong> ��Ҫ����ӳ���ϵ���Ӷ�������Ԫ����ϵ������</p><p>�ڶ�һ�����ݽ���ѹ����������ת��ʱ������ HashMap ���԰�ԭʼ���ݺ�ת�����������ϵ������������һ���� url ��ϵͳ�У�<a href="https://leetcode.com/problems/encode-and-decode-tinyurl/description/" target="_blank" rel="noopener">Leetcdoe : 535. Encode and Decode TinyURL (Medium)</a>�������� HashMap �Ϳ��Դ洢������ url ��ԭʼ url ��ӳ�䣬ʹ�ò���������ʾ�򻯵� url��Ҳ���Ը��ݼ򻯵� url �õ�ԭʼ url �Ӷ���λ����ȷ����Դ��</p><p>HashMap Ҳ����������Ԫ�ؽ��м���ͳ�ƣ���ʱ��ΪԪ�أ�ֵΪ�������� HashSet ���ƣ����Ԫ������ҷ�Χ���󣬿�������������������ͳ�ơ�</p><p><strong>�����е���������Ϊ����ֵ</strong></p><p><a href="https://leetcode.com/problems/two-sum/description/" target="_blank" rel="noopener">Leetcode : 1. Two Sum (Easy)</a></p><p>�����ȶ������������Ȼ��ʹ��˫ָ�뷽�����߶��ֲ��ҷ�������������ʱ�临�Ӷ�Ϊ O(nlg<sub>n</sub>)���ռ临�Ӷ�Ϊ O(1)��</p><p>�� HashMap �洢����Ԫ�غ�������ӳ�䣬�ڷ��ʵ� nums[i] ʱ���ж� HashMap ���Ƿ���� target - nums[i] ���������˵�� target - nums[i] ���ڵ������� i ����Ҫ�ҵ����������÷�����ʱ�临�Ӷ�Ϊ O(n)���ռ临�Ӷ�Ϊ O(n)��ʹ�ÿռ�����ȡʱ�䡣</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">int</span>[] twoSum(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> target) &#123;</span><br><span class="line">    HashMap&lt;Integer, Integer&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums.length; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(map.containsKey(target - nums[i])) <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;map.get(target - nums[i]), i&#125;;</span><br><span class="line">        <span class="keyword">else</span> map.put(nums[i], i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>���г����</strong></p><p>��г���������������С��ֻ������Ϊ 1</p><p><a href="https://leetcode.com/problems/longest-harmonious-subsequence/description/" target="_blank" rel="noopener">Leetcode : 594. Longest Harmonious Subsequence (Easy)</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findLHS</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">    Map&lt;Long, Integer&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">long</span> num : nums) &#123;</span><br><span class="line">        map.put(num, map.getOrDefault(num, <span class="number">0</span>) + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> result = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">long</span> key : map.keySet()) &#123;</span><br><span class="line">        <span class="keyword">if</span> (map.containsKey(key + <span class="number">1</span>)) &#123;</span><br><span class="line">            result = Math.max(result, map.get(key + <span class="number">1</span>) + map.get(key));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="�ַ���"><a href="#�ַ���" class="headerlink" title="�ַ���"></a>�ַ���</h2><p><strong>�����ַ����İ������ַ��Ƿ���ȫ��ͬ</strong></p><p><a href="https://leetcode.com/problems/valid-anagram/description/" target="_blank" rel="noopener">Leetcode : 242. Valid Anagram (Easy)</a></p><p>�ַ���ֻ����Сд�ַ����ܹ��� 26 ��Сд�ַ��������� Hash Table ��ӳ���ַ�����ִ�������Ϊ��ֵ��Χ��С����˿���������������ӳ�䡣</p><p>ʹ�ó���Ϊ 26 ������������ַ������ֵ��ַ�����ͳ�ƣ��Ƚ������ַ������ֵ��ַ������Ƿ���ͬ��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isAnagram</span><span class="params">(String s, String t)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span>[] cnts = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">26</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i  = <span class="number">0</span>; i &lt; s.length(); i++) cnts[s.charAt(i) - <span class="string">'a'</span>] ++;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i  = <span class="number">0</span>; i &lt; t.length(); i++) cnts[t.charAt(i) - <span class="string">'a'</span>] --;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i  = <span class="number">0</span>; i &lt; <span class="number">26</span>; i++) <span class="keyword">if</span>(cnts[i] != <span class="number">0</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>�ַ���ͬ��</strong></p><p><a href="https://leetcode.com/problems/isomorphic-strings/description/" target="_blank" rel="noopener">Leetcode : 205. Isomorphic Strings (Easy)</a></p><p>���� “egg” �� “add” ������ͬ���ַ�����</p><p>��¼һ���ַ��ϴγ��ֵ�λ�ã���������ַ�����ĳ���ַ��ϴγ��ֵ�λ��һ������ô������ͬ����</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isIsomorphic</span><span class="params">(String s, String t)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span>[] m1 = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">256</span>];</span><br><span class="line">    <span class="keyword">int</span>[] m2 = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">256</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s.length(); i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(m1[s.charAt(i)] != m2[t.charAt(i)]) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        m1[s.charAt(i)] = i + <span class="number">1</span>;</span><br><span class="line">        m2[t.charAt(i)] = i + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>����һ���ַ����Ͽ�����ɵĻ����ַ�������󳤶�</strong></p><p><a href="https://leetcode.com/problems/longest-palindrome/description/" target="_blank" rel="noopener">Leetcode : 409. Longest Palindrome</a></p><p>ʹ�ó���Ϊ 128 ������������ͳ��ÿ���ַ����ֵĸ�����ÿ���ַ���ż���������������ɻ����ַ�������Ϊ�����ַ������м���Ǹ��ַ����Ե������֣���������е������ַ��Ͱ����ŵ����м䡣</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">longestPalindrome</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span>[] cnts = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">128</span>]; <span class="comment">// ascii ���ܹ� 128 ��</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">char</span> c : s.toCharArray()) cnts[c]++;</span><br><span class="line">    <span class="keyword">int</span> ret = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> cnt : cnts)  ret += (cnt / <span class="number">2</span>) * <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span>(ret &lt; s.length()) ret ++; <span class="comment">// ��������� s ��һ���е���δʹ�õ��ַ����ڣ����԰�����ַ��ŵ����ĵ����м�</span></span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>�ж�һ�������Ƿ��ǻ�����</strong></p><p><a href="https://leetcode.com/problems/palindrome-number/description/" target="_blank" rel="noopener">Leetcode : 9. Palindrome Number (Easy)</a></p><p>Ҫ����ʹ�ö���ռ䣬Ҳ�Ͳ��ܽ�����ת��Ϊ�ַ��������жϡ�</p><p>�������ֳ����������֣��ұ��ǲ�����Ҫת�ã�Ȼ���ж����������Ƿ���ȡ�</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isPalindrome</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x == <span class="number">0</span>) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">if</span>(x &lt; <span class="number">0</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">if</span>(x % <span class="number">10</span> == <span class="number">0</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">int</span> right = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(x &gt; right)&#123;</span><br><span class="line">        right = right * <span class="number">10</span> + x % <span class="number">10</span>;</span><br><span class="line">        x /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> x == right || x == right / <span class="number">10</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>�������ַ���</strong></p><p><a href="https://leetcode.com/problems/palindromic-substrings/description/" target="_blank" rel="noopener">Leetcode : 647. Palindromic Substrings (Medium)</a></p><p>��������Ǵ��ַ�����ĳһλ��ʼ��������ȥ��չ���ַ�����</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">countSubstrings</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s.length(); i++) &#123;</span><br><span class="line">        extendSubstrings(s, i, i);    <span class="comment">// ��������</span></span><br><span class="line">        extendSubstrings(s, i, i + <span class="number">1</span>); <span class="comment">// ż������</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> cnt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">extendSubstrings</span><span class="params">(String s, <span class="keyword">int</span> start, <span class="keyword">int</span> end)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(start &gt;= <span class="number">0</span> &amp;&amp; end &lt; s.length() &amp;&amp; s.charAt(start) == s.charAt(end)) &#123;</span><br><span class="line">        start--;</span><br><span class="line">        end++;</span><br><span class="line">        cnt++;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>ͳ�ƶ������ַ��������� 1 �� ���� 0 ������ͬ�����ַ�������</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Input: "00110011"</span><br><span class="line">Output: 6</span><br><span class="line">Explanation: There are 6 substrings that have equal number of consecutive 1's and 0's: "0011", "01", "1100", "10", "0011", and "01".</span><br></pre></td></tr></table></figure><p><a href="https://leetcode.com/problems/count-binary-substrings/description/" target="_blank" rel="noopener">Leetcode : 696. Count Binary Substrings (Easy)</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">countBinarySubstrings</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> preLen = <span class="number">0</span>, curLen = <span class="number">1</span>, ret = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; s.length(); i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(s.charAt(i) == s.charAt(i-<span class="number">1</span>)) curLen++;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            preLen = curLen;</span><br><span class="line">            curLen = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(preLen &gt;= curLen) ret++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>�ַ���ѭ����λ����</strong></p><p><a href="#"> ���֮����3.1</a></p><p>���������ַ��� s1 �� s2 ��Ҫ���ж� s2 �Ƿ��ܹ��� s1 ��ѭ����λ�õ����ַ���������</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">s1 = AABCD, s2 = CDAA</span><br><span class="line">Return : true</span><br></pre></td></tr></table></figure><p>s1 ����ѭ����λ�Ľ���� s1s1 �����ַ��������ֻҪ�ж� s2 �Ƿ��� s1s1 �����ַ������ɡ�</p><p><strong>�ַ���ѭ����λ</strong></p><p><a href="#"> ���֮����2.17</a></p><p>���ַ�������ѭ���ƶ� k λ��</p><p>���� abcd123 �����ƶ� 3 λ �õ� 123abcd</p><p>�� abcd123 �е� abcd �� 123 �������򣬵õ� dcba321��Ȼ��������ַ����������򣬵õ�123abcd��</p><p><strong>�ַ����е��ʵķ�ת</strong></p><p><a href="#">����Ա��������ָ��</a></p><p>���罫 “I am a student” ��ת�� “student a am I”</p><p>��ÿ����������Ȼ�������ַ�������</p><h2 id="���������"><a href="#���������" class="headerlink" title="���������"></a>���������</h2><p><strong>�������е� 0 �Ƶ�ĩβ</strong></p><p><a href="https://leetcode.com/problems/move-zeroes/description/" target="_blank" rel="noopener">Leetcode : 283. Move Zeroes (Easy)</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">moveZeroes</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = nums.length;</span><br><span class="line">    <span class="keyword">int</span> idx = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(nums[i] != <span class="number">0</span>) nums[idx++] = nums[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(idx &lt; n)&#123;</span><br><span class="line">        nums[idx++] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>һ������Ԫ���� [1, n] ֮�䣬����һ�������滻Ϊ��һ�������ҳ���ʧ�������ظ�����</strong></p><p><a href="https://leetcode.com/problems/set-mismatch/description/" target="_blank" rel="noopener">Leetcode : 645. Set Mismatch (Easy)</a></p><p>��ֱ�ӵķ������ȶ���������������ַ���ʱ�临�Ӷ�Ϊ O(nlog<sub>n</sub>)����������� O(n) ��ʱ�临�Ӷȡ�O(1) �ռ临�Ӷ�����⡣</p><p>��Ҫ˼������ͨ����������Ԫ�أ�ʹ�������ϵ�Ԫ������ȷ��λ���ϡ�</p><p>�������飬����� i λ�ϵ�Ԫ�ز��� i + 1 ����ô�ͽ����� i λ �� nums[i] - 1 λ�ϵ�Ԫ�أ�ʹ�� num[i] - 1 ��Ԫ��Ϊ nums[i] ��Ҳ���Ǹ�λ��Ԫ������ȷ�ġ�����������Ҫѭ�����У���Ϊһ�ν���û�취ʹ�õ� i λ�ϵ�Ԫ������ȷ�ġ�����Ҫ����������Ԫ�ؿ��ܾ����ظ�Ԫ�أ���ôѭ���Ϳ�����Զ������ȥ����ֹѭ���ķ����Ǽ��� nums[i] != nums[nums[i] - 1 ������</p><p>������Ŀ��</p><ul><li><a href="https://leetcode.com/problems/find-all-numbers-disappeared-in-an-array/description/" target="_blank" rel="noopener">Leetcode :448. Find All Numbers Disappeared in an Array (Easy)</a>��Ѱ�����ж�ʧ��Ԫ��</li><li><a href="https://leetcode.com/problems/find-all-duplicates-in-an-array/description/" target="_blank" rel="noopener">Leetcode : 442. Find All Duplicates in an Array (Medium)</a>��Ѱ�������ظ���Ԫ�ء�</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">int</span>[] findErrorNums(<span class="keyword">int</span>[] nums) &#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums.length; i++)&#123;</span><br><span class="line">        <span class="keyword">while</span>(nums[i] != i + <span class="number">1</span> &amp;&amp; nums[i] != nums[nums[i] - <span class="number">1</span>]) swap(nums, i, nums[i] - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums.length; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(i + <span class="number">1</span> != nums[i]) <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;nums[i], i + <span class="number">1</span>&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> i, <span class="keyword">int</span> j)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> tmp = nums[i];</span><br><span class="line">    nums[i] = nums[j];</span><br><span class="line">    nums[j] = tmp;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>�ҳ��������ظ�����������ֵ�� [0, n-1] ֮��</strong></p><p><a href="https://leetcode.com/problems/find-the-duplicate-number/description/" target="_blank" rel="noopener">Leetcode : 287. Find the Duplicate Number (Medium)</a></p><p>���ֲ��ҽⷨ��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findDuplicate</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">     <span class="keyword">int</span> l = <span class="number">1</span>, h = nums.length - <span class="number">1</span>;</span><br><span class="line">     <span class="keyword">while</span> (l &lt;= h) &#123;</span><br><span class="line">         <span class="keyword">int</span> mid = l + (h - l) / <span class="number">2</span>;</span><br><span class="line">         <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">         <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">             <span class="keyword">if</span> (nums[i] &lt;= mid) cnt++;</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">if</span> (cnt &gt; mid) h = mid - <span class="number">1</span>;</span><br><span class="line">         <span class="keyword">else</span> l = mid + <span class="number">1</span>;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">return</span> l;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>˫ָ��ⷨ���������л��������ҳ�������ڣ�</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findDuplicate</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">      <span class="keyword">int</span> slow = nums[<span class="number">0</span>], fast = nums[nums[<span class="number">0</span>]];</span><br><span class="line">      <span class="keyword">while</span> (slow != fast) &#123;</span><br><span class="line">          slow = nums[slow];</span><br><span class="line">          fast = nums[nums[fast]];</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      fast = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">while</span> (slow != fast) &#123;</span><br><span class="line">          slow = nums[slow];</span><br><span class="line">          fast = nums[fast];</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> slow;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="�������"><a href="#�������" class="headerlink" title="�������"></a>�������</h3><p>�������ָ�����к��зֱ�����ľ���</p><p>һ���������������ʹ�ö��ֲ��ҷ�����</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">   [ 1,  5,  9],</span><br><span class="line">   [10, 11, 13],</span><br><span class="line">   [12, 13, 15]</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p><strong>����������</strong></p><p><a href="https://leetcode.com/problems/search-a-2d-matrix-ii/description/" target="_blank" rel="noopener">Leetocde : 240. Search a 2D Matrix II (Medium)</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">searchMatrix</span><span class="params">(<span class="keyword">int</span>[][] matrix, <span class="keyword">int</span> target)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (matrix == <span class="keyword">null</span> || matrix.length == <span class="number">0</span> || matrix[<span class="number">0</span>].length == <span class="number">0</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">int</span> m = matrix.length, n = matrix[<span class="number">0</span>].length;</span><br><span class="line">    <span class="keyword">int</span> row = <span class="number">0</span>, col = n - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (row &lt; m &amp;&amp; col &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (target == matrix[row][col]) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (target &lt; matrix[row][col]) col--;</span><br><span class="line">        <span class="keyword">else</span> row++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>�������� Kth Element</strong></p><p><a href="https://leetcode.com/problems/kth-smallest-element-in-a-sorted-matrix/description/" target="_blank" rel="noopener">Leetcode : 378. Kth Smallest Element in a Sorted Matrix ((Medium))</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">matrix = [</span><br><span class="line">  [ 1,  5,  9],</span><br><span class="line">  [10, 11, 13],</span><br><span class="line">  [12, 13, 15]</span><br><span class="line">],</span><br><span class="line">k = 8,</span><br><span class="line"></span><br><span class="line">return 13.</span><br></pre></td></tr></table></figure><p>����ο���<a href="https://leetcode.com/problems/kth-smallest-element-in-a-sorted-matrix/discuss/85173" target="_blank" rel="noopener">Share my thoughts and Clean Java Code</a></p><p>���ֲ��ҽⷨ��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">kthSmallest</span><span class="params">(<span class="keyword">int</span>[][] matrix, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> m = matrix.length, n = matrix[<span class="number">0</span>].length;</span><br><span class="line">    <span class="keyword">int</span> lo = matrix[<span class="number">0</span>][<span class="number">0</span>], hi = matrix[m - <span class="number">1</span>][n - <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">while</span>(lo &lt;= hi) &#123;</span><br><span class="line">        <span class="keyword">int</span> mid = lo + (hi - lo) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n &amp;&amp; matrix[i][j] &lt;= mid; j++) &#123;</span><br><span class="line">                cnt++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(cnt &lt; k) lo = mid + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> hi = mid - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> lo;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>�ѽⷨ��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">kthSmallest</span><span class="params">(<span class="keyword">int</span>[][] matrix, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> m = matrix.length, n = matrix[<span class="number">0</span>].length;</span><br><span class="line">    PriorityQueue&lt;Tuple&gt; pq = <span class="keyword">new</span> PriorityQueue&lt;Tuple&gt;();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++) pq.offer(<span class="keyword">new</span> Tuple(<span class="number">0</span>, j, matrix[<span class="number">0</span>][j]));</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; k - <span class="number">1</span>; i++) &#123; <span class="comment">// С���ѣ�ȥ�� k - 1 ���Ѷ�Ԫ�أ���ʱ�Ѷ�Ԫ�ؾ��ǵ� k ����</span></span><br><span class="line">        Tuple t = pq.poll();</span><br><span class="line">        <span class="keyword">if</span>(t.x == m - <span class="number">1</span>) <span class="keyword">continue</span>;</span><br><span class="line">        pq.offer(<span class="keyword">new</span> Tuple(t.x + <span class="number">1</span>, t.y, matrix[t.x + <span class="number">1</span>][t.y]));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> pq.poll().val;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Tuple</span> <span class="keyword">implements</span> <span class="title">Comparable</span>&lt;<span class="title">Tuple</span>&gt; </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> x, y, val;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Tuple</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> val)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.x = x; <span class="keyword">this</span>.y = y; <span class="keyword">this</span>.val = val;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compareTo</span><span class="params">(Tuple that)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.val - that.val;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="����-5"><a href="#����-5" class="headerlink" title="����"></a>����</h2><p><strong>�ж���������Ľ���</strong></p><p><a href="https://leetcode.com/problems/intersection-of-two-linked-lists/description/" target="_blank" rel="noopener">Leetcode : 160. Intersection of Two Linked Lists</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">A:          a1 �� a2</span><br><span class="line">                  �K</span><br><span class="line">                    c1 �� c2 �� c3</span><br><span class="line">                  �J</span><br><span class="line">B:    b1 �� b2 �� b3</span><br></pre></td></tr></table></figure><p>Ҫ��ʱ�临�Ӷ�Ϊ O(n) �ռ临�Ӷ�Ϊ O(1)</p><p>�� A �ĳ���Ϊ a + c��B �ĳ���Ϊ b + c������ c Ϊβ���������ֳ��ȣ���֪ a + c + b = b + c + a��</p><p>������ A �����ָ����ʵ�����β��ʱ������������ B ��ͷ����ʼ�������� B��ͬ���أ������� B �����ָ����ʵ�����β��ʱ������������ A ��ͷ����ʼ�������� A���������ܿ��Ʒ��� A �� B ���������ָ����ͬʱ���ʵ����㡣</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> ListNode <span class="title">getIntersectionNode</span><span class="params">(ListNode headA, ListNode headB)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(headA == <span class="keyword">null</span> || headB == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    ListNode l1 = headA, l2 = headB;</span><br><span class="line">    <span class="keyword">while</span>(l1 != l2)&#123;</span><br><span class="line">        l1 = (l1 == <span class="keyword">null</span>) ? headB : l1.next;</span><br><span class="line">        l2 = (l2 == <span class="keyword">null</span>) ? headA : l2.next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> l1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>���ֻ���ж��Ƿ���ڽ��㣬��ô������һ�����⣬�� ���֮����3.6 �����⡣�����ֽⷨ���ѵ�һ������Ľ�β���ӵ��ڶ�������Ŀ�ͷ�����ڶ��������Ƿ���ڻ�������ֱ�ӱȽϵ�һ���������һ���ڵ�͵ڶ����������һ���ڵ��Ƿ���ͬ��</p><p><strong>����ת</strong></p><p><a href="https://leetcode.com/problems/reverse-linked-list/description/" target="_blank" rel="noopener">Leetcode : 206. Reverse Linked List</a></p><p>ͷ�巨�ܹ������򹹽�����</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> ListNode <span class="title">reverseList</span><span class="params">(ListNode head)</span> </span>&#123;</span><br><span class="line">    ListNode newHead = <span class="keyword">null</span>; <span class="comment">// ��Ϊ null ����Ϊ������Ľ�β</span></span><br><span class="line">    <span class="keyword">while</span>(head != <span class="keyword">null</span>)&#123;</span><br><span class="line">        ListNode nextNode = head.next;</span><br><span class="line">        head.next = newHead;</span><br><span class="line">        newHead = head;</span><br><span class="line">        head = nextNode;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> newHead;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>�鲢�������������</strong></p><p><a href="https://leetcode.com/problems/merge-two-sorted-lists/description/" target="_blank" rel="noopener">Leetcode : 21. Merge Two Sorted Lists</a></p><p>�������һ���������õݹ鷽ʽ�����壺�����ǿսڵ㣬������һ��ֵ��һ��ָ����һ�������ָ�룬��˺ܶ�������������õݹ�������</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> ListNode <span class="title">mergeTwoLists</span><span class="params">(ListNode l1, ListNode l2)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l1 == <span class="keyword">null</span>) <span class="keyword">return</span> l2;</span><br><span class="line">    <span class="keyword">if</span>(l2 == <span class="keyword">null</span>) <span class="keyword">return</span> l1;</span><br><span class="line">    ListNode newHead = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">if</span>(l1.val &lt; l2.val)&#123;</span><br><span class="line">        newHead = l1;</span><br><span class="line">        newHead.next = mergeTwoLists(l1.next, l2);</span><br><span class="line">    &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">        newHead = l2;</span><br><span class="line">        newHead.next = mergeTwoLists(l1, l2.next);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> newHead;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>������������ɾ���ظ��ڵ�</strong></p><p><a href="https://leetcode.com/problems/remove-duplicates-from-sorted-list/description/" target="_blank" rel="noopener">Leetcode : 83. Remove Duplicates from Sorted List (Easy)</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> ListNode <span class="title">deleteDuplicates</span><span class="params">(ListNode head)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(head == <span class="keyword">null</span> || head.next == <span class="keyword">null</span>) <span class="keyword">return</span> head;</span><br><span class="line">    head.next = deleteDuplicates(head.next);</span><br><span class="line">    <span class="keyword">return</span> head.next != <span class="keyword">null</span> &amp;&amp; head.val == head.next.val ? head.next : head;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>��������</strong></p><p><a href="https://leetcode.com/problems/palindrome-linked-list/description/" target="_blank" rel="noopener">Leetcode : 234. Palindrome Linked List (Easy)</a></p><p>�г����룬�Ѻ��η�ת��Ȼ��Ƚ������Ƿ���ȡ�</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isPalindrome</span><span class="params">(ListNode head)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(head == <span class="keyword">null</span> || head.next == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    ListNode slow = head, fast = head.next;</span><br><span class="line">    <span class="keyword">while</span>(fast != <span class="keyword">null</span> &amp;&amp; fast.next != <span class="keyword">null</span>)&#123;</span><br><span class="line">        slow = slow.next;</span><br><span class="line">        fast = fast.next.next;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(fast != <span class="keyword">null</span>)&#123;  <span class="comment">// ż���ڵ㣬�� slow ָ����һ���ڵ�</span></span><br><span class="line">        slow = slow.next;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    cut(head, slow); <span class="comment">// �г���������</span></span><br><span class="line">    ListNode l1 = head, l2 = slow;</span><br><span class="line">    l2 = reverse(l2);</span><br><span class="line">    <span class="keyword">return</span> isEqual(l1, l2);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">cut</span><span class="params">(ListNode head, ListNode cutNode)</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>( head.next != cutNode ) head = head.next;</span><br><span class="line">    head.next = <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> ListNode <span class="title">reverse</span><span class="params">(ListNode head)</span></span>&#123;</span><br><span class="line">    ListNode newHead = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">while</span>(head != <span class="keyword">null</span>)&#123;</span><br><span class="line">        ListNode nextNode = head.next;</span><br><span class="line">        head.next = newHead;</span><br><span class="line">        newHead = head;</span><br><span class="line">        head = nextNode;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> newHead;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">isEqual</span><span class="params">(ListNode l1, ListNode l2)</span></span>&#123;</span><br><span class="line">    <span class="keyword">while</span>(l1 != <span class="keyword">null</span> &amp;&amp; l2 != <span class="keyword">null</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(l1.val != l2.val) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        l1 = l1.next;</span><br><span class="line">        l2 = l2.next;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>��������ɾ���ڵ�</strong></p><p><a href="">���֮����3.4</a></p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/2c968ec5-0967-49ce-ac06-f8f5c9ab33bc.jpg" alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">B.val = C.val;</span><br><span class="line">B.next = C.next;</span><br></pre></td></tr></table></figure><p><strong>����Ԫ�ذ���ż�ۼ�</strong></p><p><a href="https://leetcode.com/problems/odd-even-linked-list/description/" target="_blank" rel="noopener">Leetcode : 328. Odd Even Linked List (Medium)</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> ListNode <span class="title">oddEvenList</span><span class="params">(ListNode head)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (head == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> head;</span><br><span class="line">    &#125;</span><br><span class="line">    ListNode odd = head, even = head.next, evenHead = even;</span><br><span class="line">    <span class="keyword">while</span> (even != <span class="keyword">null</span> &amp;&amp; even.next != <span class="keyword">null</span>) &#123;</span><br><span class="line">        odd.next = odd.next.next;</span><br><span class="line">        odd = odd.next;</span><br><span class="line">        even.next = even.next.next;</span><br><span class="line">        even = even.next;</span><br><span class="line">    &#125;</span><br><span class="line">    odd.next = evenHead;</span><br><span class="line">    <span class="keyword">return</span> head;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="��"><a href="#��" class="headerlink" title="��"></a>��</h2><h3 id="�ݹ�"><a href="#�ݹ�" class="headerlink" title="�ݹ�"></a>�ݹ�</h3><p>һ����Ҫô�ǿ�����Ҫô������ָ�룬ÿ��ָ��ָ��һ����������һ�ֵݹ�ṹ���ܶ������������ʹ�õݹ�������</p><p><strong>���ĸ߶�</strong></p><p><a href="https://leetcode.com/problems/maximum-depth-of-binary-tree/description/" target="_blank" rel="noopener">Leetcode : 104. Maximum Depth of Binary Tree (Easy)</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxDepth</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(root == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> Math.max(maxDepth(root.left), maxDepth(root.right)) + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>��ת��</strong></p><p><a href="https://leetcode.com/problems/invert-binary-tree/description/" target="_blank" rel="noopener">Leetcode : 226. Invert Binary Tree (Easy)</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> TreeNode <span class="title">invertTree</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(root == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    TreeNode left = root.left; <span class="comment">// ����Ĳ�����ı� left ָ�룬����ȱ�������</span></span><br><span class="line">    root.left = invertTree(root.right);</span><br><span class="line">    root.right = invertTree(left);</span><br><span class="line">    <span class="keyword">return</span> root;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>�鲢������</strong></p><p><a href="https://leetcode.com/problems/merge-two-binary-trees/description/" target="_blank" rel="noopener">Leetcode : 617. Merge Two Binary Trees (Easy)</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> TreeNode <span class="title">mergeTrees</span><span class="params">(TreeNode t1, TreeNode t2)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(t1 == <span class="keyword">null</span> &amp;&amp; t2 == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">if</span>(t1 == <span class="keyword">null</span>) <span class="keyword">return</span> t2;</span><br><span class="line">    <span class="keyword">if</span>(t2 == <span class="keyword">null</span>) <span class="keyword">return</span> t1;</span><br><span class="line">    TreeNode root = <span class="keyword">new</span> TreeNode(t1.val + t2.val);</span><br><span class="line">    root.left = mergeTrees(t1.left, t2.left);</span><br><span class="line">    root.right = mergeTrees(t1.right, t2.right);</span><br><span class="line">    <span class="keyword">return</span> root;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>�ж�·�����Ƿ����һ����</strong></p><p><a href="https://leetcode.com/problems/path-sum/description/" target="_blank" rel="noopener">Leetcdoe : 112. Path Sum (Easy)</a></p><p>��Ŀ������·���Ͷ���Ϊ�� root �� leaf �����нڵ�ĺ�</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hasPathSum</span><span class="params">(TreeNode root, <span class="keyword">int</span> sum)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(root == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">if</span>(root.left == <span class="keyword">null</span> &amp;&amp; root.right == <span class="keyword">null</span> &amp;&amp; root.val == sum) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">return</span> hasPathSum(root.left, sum - root.val) || hasPathSum(root.right, sum - root.val);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>ͳ��·���͵���һ������·������</strong></p><p><a href="https://leetcode.com/problems/path-sum-iii/description/" target="_blank" rel="noopener">Leetcode : 437. Path Sum III (Easy)</a></p><p>��Ŀ������·����һ���� root ��ͷ���� leaf ��β�����Ǳ�������</p><p>pathSumStartWithRoot() ����ͳ����ĳ���ڵ㿪ͷ��·��������</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">pathSum</span><span class="params">(TreeNode root, <span class="keyword">int</span> sum)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(root == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> ret = pathSumStartWithRoot(root, sum) + pathSum(root.left, sum) + pathSum(root.right, sum);</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">pathSumStartWithRoot</span><span class="params">(TreeNode root, <span class="keyword">int</span> sum)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(root == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> ret = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(root.val == sum) ret++;</span><br><span class="line">    ret += pathSumStartWithRoot(root.left, sum - root.val) + pathSumStartWithRoot(root.right, sum - root.val);</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>���ĶԳ�</strong></p><p><a href="https://leetcode.com/problems/symmetric-tree/description/" target="_blank" rel="noopener">Leetcode : 101. Symmetric Tree (Easy)</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isSymmetric</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(root == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">return</span> isSymmetric(root.left, root.right);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">isSymmetric</span><span class="params">(TreeNode t1, TreeNode t2)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(t1 == <span class="keyword">null</span> &amp;&amp; t2 == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">if</span>(t1 == <span class="keyword">null</span> || t2 == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">if</span>(t1.val != t2.val) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">return</span> isSymmetric(t1.left, t2.right) &amp;&amp; isSymmetric(t1.right, t2.left);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>ƽ����</strong></p><p><a href="https://leetcode.com/problems/balanced-binary-tree/description/" target="_blank" rel="noopener">Leetcode : 110. Balanced Binary Tree (Easy)</a></p><p>��Ŀ���������������߶Ȳ��Ƿ�С�ڵ��� 1</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">boolean</span> result = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isBalanced</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">    maxDepth(root);</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxDepth</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (root == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> l = maxDepth(root.left);</span><br><span class="line">    <span class="keyword">int</span> r = maxDepth(root.right);</span><br><span class="line">    <span class="keyword">if</span> (Math.abs(l - r) &gt; <span class="number">1</span>) result = <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span> + Math.max(l, r);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>��С·��</strong></p><p><a href="https://leetcode.com/problems/minimum-depth-of-binary-tree/description/" target="_blank" rel="noopener">Leetcode : 111. Minimum Depth of Binary Tree (Easy)</a></p><p>��Ŀ���������ĸ��ڵ㵽Ҷ�ӽڵ����С����</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">minDepth</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(root == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> left = minDepth(root.left);</span><br><span class="line">    <span class="keyword">int</span> right = minDepth(root.right);</span><br><span class="line">    <span class="keyword">if</span>(left == <span class="number">0</span> || right == <span class="number">0</span>) <span class="keyword">return</span> left + right + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> Math.min(left, right) + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>ͳ����Ҷ�ӽڵ�ĺ�</strong></p><p><a href="https://leetcode.com/problems/sum-of-left-leaves/description/" target="_blank" rel="noopener">Leetcode : 404. Sum of Left Leaves (Easy)</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">sumOfLeftLeaves</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(root == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span>(isLeaf(root.left)) <span class="keyword">return</span> root.left.val +  sumOfLeftLeaves(root.right);</span><br><span class="line">    <span class="keyword">return</span> sumOfLeftLeaves(root.left) + sumOfLeftLeaves(root.right);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">isLeaf</span><span class="params">(TreeNode node)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(node == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">return</span> node.left == <span class="keyword">null</span> &amp;&amp; node.right == <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>�޼�һ����</strong></p><p><a href="https://leetcode.com/problems/trim-a-binary-search-tree/description/" target="_blank" rel="noopener">Leetcode : 669. Trim a Binary Search Tree (Easy)</a></p><p>��Ŀ������ֻ����ֵ�� L ~ R ֮��Ľڵ�</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> TreeNode <span class="title">trimBST</span><span class="params">(TreeNode root, <span class="keyword">int</span> L, <span class="keyword">int</span> R)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(root == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">if</span>(root.val &gt; R) <span class="keyword">return</span> trimBST(root.left, L, R);</span><br><span class="line">    <span class="keyword">if</span>(root.val &lt; L) <span class="keyword">return</span> trimBST(root.right, L, R);</span><br><span class="line">    root.left = trimBST(root.left, L, R);</span><br><span class="line">    root.right = trimBST(root.right, L, R);</span><br><span class="line">    <span class="keyword">return</span> root;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>����</strong></p><p><a href="https://leetcode.com/problems/subtree-of-another-tree/description/" target="_blank" rel="noopener">Leetcode : 572. Subtree of Another Tree (Easy)</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isSubtree</span><span class="params">(TreeNode s, TreeNode t)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(s == <span class="keyword">null</span> &amp;&amp; t == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">if</span>(s == <span class="keyword">null</span> || t == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">if</span>(s.val == t.val &amp;&amp; isSame(s, t)) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">return</span> isSubtree(s.left, t) || isSubtree(s.right, t);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">isSame</span><span class="params">(TreeNode s, TreeNode t)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(s == <span class="keyword">null</span> &amp;&amp; t == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">if</span>(s == <span class="keyword">null</span> || t == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">if</span>(s.val != t.val) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">return</span> isSame(s.left, t.left) &amp;&amp; isSame(s.right, t.right);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>�����������й�����������</strong></p><p><a href="https://leetcode.com/problems/convert-sorted-array-to-binary-search-tree/description/" target="_blank" rel="noopener">Leetcode : 108. Convert Sorted Array to Binary Search Tree (Easy)</a></p><p>�����������BST�������ڵ���ڵ������������нڵ㣬С�ڵ������������нڵ㡣</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> TreeNode <span class="title">sortedArrayToBST</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> toBST(nums, <span class="number">0</span>, nums.length - <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> TreeNode <span class="title">toBST</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> sIdx, <span class="keyword">int</span> eIdx)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(sIdx &gt; eIdx) <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">int</span> mIdx = (sIdx + eIdx) / <span class="number">2</span>;</span><br><span class="line">    TreeNode root = <span class="keyword">new</span> TreeNode(nums[mIdx]);</span><br><span class="line">    root.left =  toBST(nums, sIdx, mIdx - <span class="number">1</span>);</span><br><span class="line">    root.right = toBST(nums, mIdx + <span class="number">1</span>, eIdx);</span><br><span class="line">    <span class="keyword">return</span> root;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>���ڵ���·��</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">          1</span><br><span class="line">        / \</span><br><span class="line">        2  3</span><br><span class="line">      / \</span><br><span class="line">      4  5</span><br><span class="line"></span><br><span class="line">Return 3, which is the length of the path [4,2,1,3] or [5,2,1,3].</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> max = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">diameterOfBinaryTree</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">    depth(root);</span><br><span class="line">    <span class="keyword">return</span> max;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">depth</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (root == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> leftDepth = depth(root.left);</span><br><span class="line">    <span class="keyword">int</span> rightDepth = depth(root.right);</span><br><span class="line">    max = Math.max(max, leftDepth + rightDepth);</span><br><span class="line">    <span class="keyword">return</span> Math.max(leftDepth, rightDepth) + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>�ҳ��������еڶ�С�Ľڵ�</strong></p><p><a href="https://leetcode.com/problems/second-minimum-node-in-a-binary-tree/description/" target="_blank" rel="noopener">Leetcode : 671. Second Minimum Node In a Binary Tree (Easy)</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Input:</span><br><span class="line">    2</span><br><span class="line">  / \</span><br><span class="line">  2  5</span><br><span class="line">    / \</span><br><span class="line">    5  7</span><br><span class="line"></span><br><span class="line">Output: 5</span><br></pre></td></tr></table></figure><p>һ���ڵ�Ҫô���� 0 ���� 2 ���ӽڵ㣬������ӽڵ㣬��ô���ڵ�����С�Ľڵ㡣</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findSecondMinimumValue</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(root == <span class="keyword">null</span>) <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span>(root.left == <span class="keyword">null</span> &amp;&amp; root.right == <span class="keyword">null</span>) <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> leftVal = root.left.val;</span><br><span class="line">    <span class="keyword">int</span> rightVal = root.right.val;</span><br><span class="line">    <span class="keyword">if</span>(leftVal == root.val) leftVal = findSecondMinimumValue(root.left);</span><br><span class="line">    <span class="keyword">if</span>(rightVal == root.val) rightVal = findSecondMinimumValue(root.right);</span><br><span class="line">    <span class="keyword">if</span>(leftVal != -<span class="number">1</span> &amp;&amp; rightVal != -<span class="number">1</span>) <span class="keyword">return</span> Math.min(leftVal, rightVal);</span><br><span class="line">    <span class="keyword">if</span>(leftVal != -<span class="number">1</span>) <span class="keyword">return</span> leftVal;</span><br><span class="line">    <span class="keyword">return</span> rightVal;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Ѱ�������ڵ�������������</strong></p><p><a href="https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-search-tree/description/" target="_blank" rel="noopener">Leetcode : 235. Lowest Common Ancestor of a Binary Search Tree (Easy)</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> TreeNode <span class="title">lowestCommonAncestor</span><span class="params">(TreeNode root, TreeNode p, TreeNode q)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(root.val &gt; p.val &amp;&amp; root.val &gt; q.val) <span class="keyword">return</span> lowestCommonAncestor(root.left, p, q);</span><br><span class="line">    <span class="keyword">if</span>(root.val &lt; p.val &amp;&amp; root.val &lt; q.val) <span class="keyword">return</span> lowestCommonAncestor(root.right, p, q);</span><br><span class="line">    <span class="keyword">return</span> root;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>�����������</strong></p><p><a href="https://leetcode.com/problems/lowest-common-ancestor-of-a-binary-tree/description/" target="_blank" rel="noopener">Leetcode : 236. Lowest Common Ancestor of a Binary Tree (Medium) </a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> TreeNode <span class="title">lowestCommonAncestor</span><span class="params">(TreeNode root, TreeNode p, TreeNode q)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (root == <span class="keyword">null</span> || root == p || root == q) <span class="keyword">return</span> root;</span><br><span class="line">    TreeNode left = lowestCommonAncestor(root.left, p, q);</span><br><span class="line">    TreeNode right = lowestCommonAncestor(root.right, p, q);</span><br><span class="line">    <span class="keyword">return</span> left == <span class="keyword">null</span> ? right : right == <span class="keyword">null</span> ? left : root;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>�����ͬ�ڵ�ֵ��·������</strong></p><p><a href="https://pomotodo.com/app/" target="_blank" rel="noopener">Leetcode : 687. Longest Univalue Path (Easy)</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">              1</span><br><span class="line">            / \</span><br><span class="line">            4  5</span><br><span class="line">          / \  \</span><br><span class="line">          4  4  5</span><br><span class="line"></span><br><span class="line">Output : 2</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> path = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">longestUnivaluePath</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">    dfs(root);</span><br><span class="line">    <span class="keyword">return</span> path;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">dfs</span><span class="params">(TreeNode root)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(root == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> left = dfs(root.left);</span><br><span class="line">    <span class="keyword">int</span> right = dfs(root.right);</span><br><span class="line">    <span class="keyword">int</span> leftPath = root.left != <span class="keyword">null</span> &amp;&amp; root.left.val == root.val ? left + <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> rightPath = root.right != <span class="keyword">null</span> &amp;&amp; root.right.val == root.val ? right + <span class="number">1</span> : <span class="number">0</span>;</span><br><span class="line">    path = Math.max(path, leftPath + rightPath);</span><br><span class="line">    <span class="keyword">return</span> Math.max(leftPath, rightPath);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>������</strong></p><p><a href="https://leetcode.com/problems/house-robber-iii/description/" target="_blank" rel="noopener">Leetcode : 337. House Robber III (Medium)</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">rob</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (root == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> val1 = root.val;</span><br><span class="line">    <span class="keyword">if</span> (root.left != <span class="keyword">null</span>) &#123;</span><br><span class="line">        val1 += rob(root.left.left) + rob(root.left.right);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (root.right != <span class="keyword">null</span>) &#123;</span><br><span class="line">        val1 += rob(root.right.left) + rob(root.right.right);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> val2 = rob(root.left) + rob(root.right);</span><br><span class="line">    <span class="keyword">return</span> Math.max(val1, val2);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="��α���"><a href="#��α���" class="headerlink" title="��α���"></a>��α���</h3><p>ʹ�� BFS������Ҫʹ�������������ֱ�洢��ǰ��Ľڵ����һ��Ľڵ㣬 ��Ϊ�ڿ�ʼ����һ��Ľڵ�ʱ����ǰ�����еĽڵ������ǵ�ǰ��Ľڵ�����ֻҪ���Ʊ�����ô��ڵ��������ܱ�֤��α����Ķ��ǵ�ǰ��Ľڵ㡣</p><p><strong>����һ����ÿ��ڵ��ƽ����</strong></p><p><a href="https://leetcode.com/problems/average-of-levels-in-binary-tree/description/" target="_blank" rel="noopener">637. Average of Levels in Binary Tree (Easy)</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Double&gt; <span class="title">averageOfLevels</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">    List&lt;Double&gt; ret = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="keyword">if</span>(root == <span class="keyword">null</span>) <span class="keyword">return</span> ret;</span><br><span class="line">    Queue&lt;TreeNode&gt; queue = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">    queue.add(root);</span><br><span class="line">    <span class="keyword">while</span>(!queue.isEmpty())&#123;</span><br><span class="line">        <span class="keyword">int</span> cnt = queue.size();</span><br><span class="line">        <span class="keyword">double</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; cnt; i++)&#123;</span><br><span class="line">            TreeNode node = queue.poll();</span><br><span class="line">            sum += node.val;</span><br><span class="line">            <span class="keyword">if</span>(node.left != <span class="keyword">null</span>) queue.add(node.left);</span><br><span class="line">            <span class="keyword">if</span>(node.right != <span class="keyword">null</span>) queue.add(node.right);</span><br><span class="line">        &#125;</span><br><span class="line">        ret.add(sum / cnt);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>�õ����½ǵĽڵ�</strong></p><p><a href="https://leetcode.com/problems/find-bottom-left-tree-value/description/" target="_blank" rel="noopener">Leetcode : 513. Find Bottom Left Tree Value (Easy)</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findBottomLeftValue</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">    Queue&lt;TreeNode&gt; queue = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">    queue.add(root);</span><br><span class="line">    <span class="keyword">while</span>(!queue.isEmpty())&#123;</span><br><span class="line">        root = queue.poll();</span><br><span class="line">        <span class="keyword">if</span>(root.right != <span class="keyword">null</span>) queue.add(root.right);</span><br><span class="line">        <span class="keyword">if</span>(root.left != <span class="keyword">null</span>) queue.add(root.left);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> root.val;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="j�к������"><a href="#j�к������" class="headerlink" title="ǰ�к������"></a>ǰ�к������</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">   1</span><br><span class="line">  / \</span><br><span class="line">  2  3</span><br><span class="line"> / \  \</span><br><span class="line">4  5  6</span><br></pre></td></tr></table></figure><p>��α���˳��[1 2 3 4 5 6]<br>ǰ�����˳��[1 2 4 5 3 6]<br>�������˳��[4 2 5 1 3 6]<br>�������˳��[4 5 2 6 3 1]</p><p>��α���ʹ�� BFS ʵ�֣����õľ��� BFS һ��һ����������ԣ���ǰ�����򡢺������������ DFS ʵ�֡�</p><p>ǰ�����򡢺����ֻ���ڶԽڵ���ʵ�˳����һ�㲻ͬ����������ͬ��</p><p>�� ǰ��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(TreeNode root)</span></span>&#123;</span><br><span class="line">    visit(root);</span><br><span class="line">    dfs(root.left);</span><br><span class="line">    dfs(root.right);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>�� ����</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(TreeNode root)</span></span>&#123;</span><br><span class="line">    dfs(root.left);</span><br><span class="line">    visit(root);</span><br><span class="line">    dfs(root.right);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>�� ����</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(TreeNode root)</span></span>&#123;</span><br><span class="line">    dfs(root.left);</span><br><span class="line">    dfs(root.right);</span><br><span class="line">    visit(root);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>�ǵݹ�ʵ�ֶ�������ǰ�����</strong></p><p><a href="https://leetcode.com/problems/binary-tree-preorder-traversal/description/" target="_blank" rel="noopener">Leetcode : 144. Binary Tree Preorder Traversal (Medium)</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Integer&gt; <span class="title">preorderTraversal</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">    List&lt;Integer&gt; ret = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="keyword">if</span> (root == <span class="keyword">null</span>) <span class="keyword">return</span> ret;</span><br><span class="line">    Stack&lt;TreeNode&gt; stack = <span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line">    stack.push(root);</span><br><span class="line">    <span class="keyword">while</span> (!stack.isEmpty()) &#123;</span><br><span class="line">        TreeNode node = stack.pop();</span><br><span class="line">        ret.add(node.val);</span><br><span class="line">        <span class="keyword">if</span> (node.right != <span class="keyword">null</span>) stack.push(node.right);</span><br><span class="line">        <span class="keyword">if</span> (node.left != <span class="keyword">null</span>) stack.push(node.left); <span class="comment">// ������������������������������Ϊ������������ջ��</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>�ǵݹ�ʵ�ֶ������ĺ�������</strong></p><p><a href="https://leetcode.com/problems/binary-tree-postorder-traversal/description/" target="_blank" rel="noopener">Leetcode : ### 145. Binary Tree Postorder Traversal (Medium)</a></p><p>ǰ�����Ϊ root -&gt; left -&gt; right���������Ϊ left -&gt; right -&gt; root�������޸�ǰ�������Ϊ root -&gt; right -&gt; left����ô���˳��ͺͺ�����������෴��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Integer&gt; <span class="title">postorderTraversal</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">    List&lt;Integer&gt; ret = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="keyword">if</span> (root == <span class="keyword">null</span>) <span class="keyword">return</span> ret;</span><br><span class="line">    Stack&lt;TreeNode&gt; stack = <span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line">    stack.push(root);</span><br><span class="line">    <span class="keyword">while</span> (!stack.isEmpty()) &#123;</span><br><span class="line">        TreeNode node = stack.pop();</span><br><span class="line">        ret.add(node.val);</span><br><span class="line">        <span class="keyword">if</span> (node.left != <span class="keyword">null</span>) stack.push(node.left);</span><br><span class="line">        <span class="keyword">if</span> (node.right != <span class="keyword">null</span>) stack.push(node.right);</span><br><span class="line">    &#125;</span><br><span class="line">    Collections.reverse(ret);</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>�ǵݹ�ʵ�ֶ��������������</strong></p><p><a href="https://leetcode.com/problems/binary-tree-inorder-traversal/description/" target="_blank" rel="noopener">Leetcode : 94. Binary Tree Inorder Traversal (Medium)</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> List&lt;Integer&gt; <span class="title">inorderTraversal</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">    List&lt;Integer&gt; ret = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    Stack&lt;TreeNode&gt; stack = <span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line">    TreeNode cur = root;</span><br><span class="line">    <span class="keyword">while</span>(cur != <span class="keyword">null</span> || !stack.isEmpty()) &#123;</span><br><span class="line">        <span class="keyword">while</span>(cur != <span class="keyword">null</span>) &#123; <span class="comment">// ģ��ݹ�ջ�Ĳ�������</span></span><br><span class="line">            stack.add(cur);</span><br><span class="line">            cur = cur.left;</span><br><span class="line">        &#125;</span><br><span class="line">        TreeNode node = stack.pop();</span><br><span class="line">        ret.add(node.val);</span><br><span class="line">        cur = node.right;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>ʹ�����������ǰ����������ؽ�������</strong> //TODO</p><h3 id="BST"><a href="#BST" class="headerlink" title="BST"></a>BST</h3><p>��Ҫ���� BST �������������ص㡣</p><p><strong>�� BST ��Ѱ�������ڵ㣬ʹ���ǵĺ�Ϊһ������ֵ��</strong></p><p><a href="https://leetcode.com/problems/two-sum-iv-input-is-a-bst/description/" target="_blank" rel="noopener">653. Two Sum IV - Input is a BST</a></p><p>ʹ����������õ���������֮��������˫ָ���������в��ҡ�</p><p>Ӧ��ע�⵽����һ�ⲻ���÷ֱ���������������������������˼�룬��Ϊ��������Ľڵ���ֱܷ������������С�</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">findTarget</span><span class="params">(TreeNode root, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">    List&lt;Integer&gt; nums = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    inOrder(root, nums);</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>, j = nums.size() - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &lt; j)&#123;</span><br><span class="line">        <span class="keyword">int</span> sum = nums.get(i) + nums.get(j);</span><br><span class="line">        <span class="keyword">if</span>(sum == k) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">if</span>(sum &lt; k) i++;</span><br><span class="line">        <span class="keyword">else</span> j--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">inOrder</span><span class="params">(TreeNode root, List&lt;Integer&gt; nums)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(root == <span class="keyword">null</span>) <span class="keyword">return</span>;</span><br><span class="line">    inOrder(root.left, nums);</span><br><span class="line">    nums.add(root.val);</span><br><span class="line">    inOrder(root.right, nums);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>�� BST �в�����С�������ڵ�֮��ľ���ֵ</strong></p><p><a href="https://leetcode.com/problems/minimum-absolute-difference-in-bst/description/" target="_blank" rel="noopener">Leetcode : 530. Minimum Absolute Difference in BST (Easy)</a></p><p>���� BST ���������Ϊ��������ʣ���������������ٽ��������ڵ�֮��ľ���ֵ��ȡ��Сֵ��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> minDiff = Integer.MAX_VALUE;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> preVal = -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getMinimumDifference</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">    inorder(root);</span><br><span class="line">    <span class="keyword">return</span> minDiff;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">inorder</span><span class="params">(TreeNode node)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(node == <span class="keyword">null</span>) <span class="keyword">return</span>;</span><br><span class="line">    inorder(node.left);</span><br><span class="line">    <span class="keyword">if</span>(preVal != -<span class="number">1</span>) minDiff = Math.min(minDiff, Math.abs(node.val - preVal));</span><br><span class="line">    preVal = node.val;</span><br><span class="line">    inorder(node.right);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>�� BST ÿ���ڵ��ֵ�����ϱ�����Ľڵ��ֵ</strong></p><p><a href="https://leetcode.com/problems/convert-bst-to-greater-tree/description/" target="_blank" rel="noopener">Leetcode : Convert BST to Greater Tree (Easy)</a></p><p>�ȱ�����������</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> TreeNode <span class="title">convertBST</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">    traver(root);</span><br><span class="line">    <span class="keyword">return</span> root;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">traver</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (root == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (root.right != <span class="keyword">null</span>) &#123;</span><br><span class="line">        traver(root.right);</span><br><span class="line">    &#125;</span><br><span class="line">    sum += root.val;</span><br><span class="line">    root.val = sum;</span><br><span class="line">    <span class="keyword">if</span> (root.left != <span class="keyword">null</span>) &#123;</span><br><span class="line">        traver(root.left);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Ѱ�� BST �г��ִ������Ľڵ�</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> cnt = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> maxCnt = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">private</span> TreeNode preNode = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">private</span> List&lt;Integer&gt; list;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">int</span>[] findMode(TreeNode root) &#123;</span><br><span class="line">    list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    inorder(root);</span><br><span class="line">    <span class="keyword">int</span>[] ret = <span class="keyword">new</span> <span class="keyword">int</span>[list.size()];</span><br><span class="line">    <span class="keyword">int</span> idx = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> num : list)&#123;</span><br><span class="line">        ret[idx++] = num;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">inorder</span><span class="params">(TreeNode node)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(node == <span class="keyword">null</span>) <span class="keyword">return</span>;</span><br><span class="line">    inorder(node.left);</span><br><span class="line">    <span class="keyword">if</span>(preNode != <span class="keyword">null</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(preNode.val == node.val) cnt++;</span><br><span class="line">        <span class="keyword">else</span> cnt = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(cnt &gt; maxCnt)&#123;</span><br><span class="line">        maxCnt = cnt;</span><br><span class="line">        list.clear();</span><br><span class="line">        list.add(node.val);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span>(cnt == maxCnt)&#123;</span><br><span class="line">        list.add(node.val);</span><br><span class="line">    &#125;</span><br><span class="line">    preNode = node;</span><br><span class="line">    inorder(node.right);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>Ѱ�� BST �ĵ� k ��Ԫ��</strong></p><p><a href="https://leetcode.com/problems/kth-smallest-element-in-a-bst/description/" target="_blank" rel="noopener">Leetcode : 230. Kth Smallest Element in a BST (Medium)</a></p><p>�ݹ�ⷨ��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">kthSmallest</span><span class="params">(TreeNode root, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> leftCnt = count(root.left);</span><br><span class="line">    <span class="keyword">if</span>(leftCnt == k - <span class="number">1</span>) <span class="keyword">return</span> root.val;</span><br><span class="line">    <span class="keyword">if</span>(leftCnt &gt; k - <span class="number">1</span>) <span class="keyword">return</span> kthSmallest(root.left, k);</span><br><span class="line">    <span class="keyword">return</span> kthSmallest(root.right, k - leftCnt - <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">count</span><span class="params">(TreeNode node)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(node == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span> + count(node.left) + count(node.right);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>��������ⷨ��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">int</span> val;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">kthSmallest</span><span class="params">(TreeNode root, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">    inorder(root, k);</span><br><span class="line">    <span class="keyword">return</span> val;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">inorder</span><span class="params">(TreeNode node, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(node == <span class="keyword">null</span>) <span class="keyword">return</span>;</span><br><span class="line">    inorder(node.left, k);</span><br><span class="line">    cnt++;</span><br><span class="line">    <span class="keyword">if</span>(cnt == k) &#123;</span><br><span class="line">        val = node.val;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    inorder(node.right, k);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Trie"><a href="#Trie" class="headerlink" title="Trie"></a>Trie</h3><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/5c638d59-d4ae-4ba4-ad44-80bdc30f38dd.jpg" alt=""></p><p>Trie���ֳ�ǰ׺�����ֵ����������ж��ַ����Ƿ���ڻ����Ƿ����ĳ���ַ���ǰ׺��</p><p><strong>ʵ��һ�� Trie</strong></p><p><a href="https://leetcode.com/problems/implement-trie-prefix-tree/description/" target="_blank" rel="noopener">Leetcode : 208. Implement Trie (Prefix Tree) (Medium)</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Trie</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">Node</span></span>&#123;</span><br><span class="line">        Node[] childs = <span class="keyword">new</span> Node[<span class="number">26</span>];</span><br><span class="line">        <span class="keyword">boolean</span> isLeaf;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> Node root = <span class="keyword">new</span> Node();</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/** Initialize your data structure here. */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Trie</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/** Inserts a word into the trie. */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insert</span><span class="params">(String word)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> idx = word.charAt(<span class="number">0</span>) - <span class="string">'a'</span>;</span><br><span class="line">        insert(word, root);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">insert</span><span class="params">(String word, Node node)</span></span>&#123;</span><br><span class="line">        <span class="keyword">int</span> idx = word.charAt(<span class="number">0</span>) - <span class="string">'a'</span>;</span><br><span class="line">        <span class="keyword">if</span>(node.childs[idx] == <span class="keyword">null</span>)&#123;</span><br><span class="line">            node.childs[idx] = <span class="keyword">new</span> Node();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(word.length() == <span class="number">1</span>) node.childs[idx].isLeaf = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">else</span> insert(word.substring(<span class="number">1</span>), node.childs[idx]);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/** Returns if the word is in the trie. */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">search</span><span class="params">(String word)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> search(word, root); </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">search</span><span class="params">(String word, Node node)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(node == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">int</span> idx = word.charAt(<span class="number">0</span>) - <span class="string">'a'</span>;</span><br><span class="line">        <span class="keyword">if</span>(node.childs[idx] == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">if</span>(word.length() == <span class="number">1</span>) <span class="keyword">return</span> node.childs[idx].isLeaf;</span><br><span class="line">        <span class="keyword">return</span> search(word.substring(<span class="number">1</span>), node.childs[idx]);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">/** Returns if there is any word in the trie that starts with the given prefix. */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">startsWith</span><span class="params">(String prefix)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> startWith(prefix, root);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">startWith</span><span class="params">(String prefix, Node node)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(node == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">if</span>(prefix.length() == <span class="number">0</span>) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">int</span> idx = prefix.charAt(<span class="number">0</span>) - <span class="string">'a'</span>;</span><br><span class="line">        <span class="keyword">return</span> startWith(prefix.substring(<span class="number">1</span>), node.childs[idx]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>ʵ��һ�� Trie��������ǰ׺��</strong></p><p><a href="https://leetcode.com/problems/map-sum-pairs/description/" target="_blank" rel="noopener">Leetcode : 677. Map Sum Pairs (Medium)</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MapSum</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">Trie</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> val;</span><br><span class="line">        Map&lt;Character, Trie&gt; childs;</span><br><span class="line">        <span class="keyword">boolean</span> isWord;</span><br><span class="line">        </span><br><span class="line">        Trie() &#123;</span><br><span class="line">            childs = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">private</span> Trie root;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MapSum</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        root = <span class="keyword">new</span> Trie();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">insert</span><span class="params">(String key, <span class="keyword">int</span> val)</span> </span>&#123;</span><br><span class="line">        Trie cur = root;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> c : key.toCharArray()) &#123;</span><br><span class="line">            <span class="keyword">if</span>(!cur.childs.containsKey(c)) &#123;</span><br><span class="line">                Trie next = <span class="keyword">new</span> Trie();</span><br><span class="line">                cur.childs.put(c, next);</span><br><span class="line">            &#125;</span><br><span class="line">            cur = cur.childs.get(c);</span><br><span class="line">        &#125;</span><br><span class="line">        cur.val = val;</span><br><span class="line">        cur.isWord = <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">sum</span><span class="params">(String prefix)</span> </span>&#123;</span><br><span class="line">        Trie cur = root;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">char</span> c : prefix.toCharArray()) &#123;</span><br><span class="line">            <span class="keyword">if</span>(!cur.childs.containsKey(c)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            cur = cur.childs.get(c);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dfs(cur);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">dfs</span><span class="params">(Trie cur)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span>(cur.isWord) &#123;</span><br><span class="line">            sum += cur.val;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(Trie next : cur.childs.values()) &#123;</span><br><span class="line">            sum += dfs(next);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="ͼ"><a href="#ͼ" class="headerlink" title="ͼ"></a>ͼ</h2><h2 id="λ����"><a href="#λ����" class="headerlink" title="λ����"></a>λ����</h2><p><strong>1. ����ԭ��</strong></p><p>0s ��ʾ һ�� 0 ��1s ��ʾһ�� 1��</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">x ^ 0s = x      x &amp; 0s = 0      x | 0s = x</span><br><span class="line">x ^ 1s = \~x     x &amp; 1s = x      x | 1s = 1s</span><br><span class="line">x ^ x = 0       x &amp; x = x       x | x = x</span><br></pre></td></tr></table></figure><p>�� ���� x ^ 1s = ~x ���ص㣬���Խ�λ����ʾ��ת������ x ^ x = 0 ���ص㣬���Խ����������ظ���������ȥ����ֻ������һ������<br>�� ���� x &amp; 0s = 0 �� x &amp; 1s = x ���ص㣬����ʵ�����������һ���� num �� mask ��00111100 ����λ�������ֻ���� num ���� mask �� 1 �������Ӧ��λ��<br>�� ���� x | 0s = x �� x | 1s = 1s ���ص㣬����ʵ�����ò�����һ���� num �� mask��00111100 ����λ��������� num ���� mask �� 1 �������Ӧ��λ������Ϊ 1 ��</p><p>>> n Ϊ�������ƣ��൱�ڳ��� 2<sup>n</sup>��<br>>>> n Ϊ�޷������ƣ���߻Ჹ�� 0��<br>&lt;&lt; n Ϊ�������ƣ��൱�ڳ��� 2<sup>n</sup>��</p><p>n&amp;(n-1) ��λ������ȥ�� n ��λ����ʾ����͵���һλ��������ڶ����Ʊ�ʾ 10110<strong>100</strong>����ȥ 1 �õ� 10110<strong>011</strong>��������������õ� 10110<strong>000</strong>��</p><p>n-n&amp;(~n+1) ��������ȥ�� n ��λ����ʾ����ߵ���һλ��</p><p>n&amp;(-n) ������õ� n ��λ����ʾ����͵���һλ��-n �õ� n �ķ���� 1�����ڶ����Ʊ�ʾ 10110<strong>100</strong>��-n �õ� 01001<strong>100</strong>������õ� 00000<strong>100</strong></p><p><strong>2. mask ����</strong></p><p>Ҫ��ȡ 111111111���� 0 ȡ�����ɣ�~0��</p><p>Ҫ�õ�ֻ�е� i λΪ 1 �� mask���� 1 �����ƶ� i λ���ɣ�1&lt;&lt;i ������ 1&lt;&lt;5 �õ�ֻ�е� 5 λΪ 1 �� mask ��00010000��</p><p>Ҫ�õ� 1 �� i λΪ 1 �� mask��1&lt;&lt;(i+1)-1 ���ɣ����罫 1&lt;&lt;(4+1)-1 = 00010000-1 = 00001111��</p><p>Ҫ�õ� 1 �� i λΪ 0 �� mask��ֻ�轫 1 �� i λΪ 1 �� mask ȡ������ ~(1&lt;&lt;(i+1)-1)��</p><p><strong>3. λ��������</strong></p><p>�� ��ȡ�� i λ</p><p>num &amp; 00010000 != 0</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(num &amp; (<span class="number">1</span> &lt;&lt; i)) != <span class="number">0</span>;</span><br></pre></td></tr></table></figure><p>�� ���� i λ����Ϊ 1</p><p>num | 00010000</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">num | (<span class="number">1</span> &lt;&lt; i);</span><br></pre></td></tr></table></figure><p>�� ���� i λ���Ϊ 0</p><p>num &amp; 11101111</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">num &amp; (\~(<span class="number">1</span> &lt;&lt; i))</span><br></pre></td></tr></table></figure><p>�� �����λ���� i λ���Ϊ 0</p><p>num &amp; 00001111</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">num &amp; ((<span class="number">1</span> &lt;&lt; i) - <span class="number">1</span>);</span><br></pre></td></tr></table></figure><p>�� ���� 0 λ���� i λ���Ϊ 0</p><p>num &amp; 11110000</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">num &amp; (\~((<span class="number">1</span> &lt;&lt; (i+<span class="number">1</span>)) - <span class="number">1</span>));</span><br></pre></td></tr></table></figure><p>�� ���� i λ����Ϊ 0 ���� 1</p><p>�Ƚ��� i λ���㣬Ȼ�� v ���� i λ��ִ�С�λ�����㡣</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">(num &amp; (<span class="number">1</span> &lt;&lt; i)) | (v &lt;&lt; i);</span><br></pre></td></tr></table></figure><p><strong>4. Java �е�λ����</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">static int Integer.bitCount()            // ͳ�� 1 ������</span><br><span class="line">static int Integer.highestOneBit()       // ������λ</span><br><span class="line">static String toBinaryString(int i)      // ת��λ�����Ʊ�ʾ���ַ���</span><br></pre></td></tr></table></figure><p><strong>ͳ���������Ķ����Ʊ�ʾ�ж���λ��ͬ</strong></p><p><a href="https://leetcode.com/problems/hamming-distance/" target="_blank" rel="noopener">Leetcode : 461. Hamming Distance (Easy)</a></p><p>����������������������ͬ����һλ���Ϊ 1 ��ͳ���ж��ٸ� 1 ���ɡ�</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">hammingDistance</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> z = x ^ y;</span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(z != <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>((z &amp; <span class="number">1</span>) == <span class="number">1</span>) cnt++;</span><br><span class="line">        z = z &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> cnt;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>����ʹ�� Integer.bitcount() ��ͳ�� 1 ���ĸ�����</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">hammingDistance</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> Integer.bitCount(x ^ y);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>��תһ�����ı���λ</strong></p><p><a href="https://leetcode.com/problems/reverse-bits/description/" target="_blank" rel="noopener">Leetcode : 190. Reverse Bits (Easy)</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">reverseBits</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ret = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">32</span>; i++)&#123;</span><br><span class="line">        ret &lt;&lt;= <span class="number">1</span>;</span><br><span class="line">        ret |= (n &amp; <span class="number">1</span>);</span><br><span class="line">        n &gt;&gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>���ö������������������</strong></p><p><a href="#">����Ա��������ָ�� ��P317</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = a ^ b;</span><br><span class="line">b = a ^ b;</span><br><span class="line">a = a ^ b;</span><br></pre></td></tr></table></figure><p>�� c = a ^ b����ô b ^ c = b ^ b ^ a = a��a ^ c = a ^ a ^ b = b��</p><p><strong>�ж�һ�����ǲ��� 4 �� n �η�</strong></p><p><a href="https://leetcode.com/problems/power-of-four/" target="_blank" rel="noopener">Leetcode : 342. Power of Four (Easy)</a></p><p>���������Ʊ�ʾ����ֻ��һ������λΪ 1 ������Ķ�Ϊ 0 ������ 16 �� 10000������ÿ�ΰ� 1 �����ƶ� 2 λ�����ܹ�����������֣�Ȼ��ȽϹ������������Ҫ�жϵ����Ƿ���ͬ��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isPowerOfFour</span><span class="params">(<span class="keyword">int</span> num)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &gt; <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(i == num) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        i = i &lt;&lt; <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Ҳ������ Java �� Integer.toString() ����������ת��Ϊ 4 ������ʽ���ַ�����Ȼ���ж��ַ����Ƿ��� 1 ��ͷ��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isPowerOfFour</span><span class="params">(<span class="keyword">int</span> num)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> Integer.toString(num, <span class="number">4</span>).matches(<span class="string">"10*"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>�ж�һ�����ǲ��� 2 �� n �η�</strong></p><p><a href="https://leetcode.com/problems/power-of-two/description/" target="_blank" rel="noopener">Leetcode : 231. Power of Two (Easy)</a></p><p>ͬ�������� Power of Four �ķ��������� 2 �� n �η������⣬���Ķ����Ʊ�ʾֻ��һ�� 1 ���ڡ�</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isPowerOfTwo</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> n &gt; <span class="number">0</span> &amp;&amp; Integer.bitCount(n) == <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>���� 1000 &amp; 0111 == 0 �������ʣ��õ����½ⷨ��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isPowerOfTwo</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> n &gt; <span class="number">0</span> &amp;&amp; (n &amp; (n - <span class="number">1</span>)) == <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>������Ψһһ�����ظ���Ԫ��</strong></p><p><a href="https://leetcode.com/problems/single-number/description/" target="_blank" rel="noopener">Leetcode : 136. Single Number (Easy)</a></p><p>������ͬ�������Ľ��Ϊ 0�������������������������Ľ�����ǵ������ֵ��Ǹ�����</p><p>���Ƶ��У�<a href="https://leetcode.com/problems/find-the-difference/description/" target="_blank" rel="noopener">Leetcode : 389. Find the Difference (Easy)</a>�������ַ�������һ���ַ�����ͬ��ʹ�������������� O(1) �Ŀռ临�Ӷ�����⣬������Ҫʹ�� HashSet��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">singleNumber</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> ret = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> n : nums) ret = ret ^ n;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>�����в��ظ�������Ԫ��</strong></p><p><a href="https://leetcode.com/problems/single-number-iii/description/" target="_blank" rel="noopener">Leetcode : 260. Single Number III (Medium)</a></p><p>��������ȵ�Ԫ����λ����ʾ�ϱض�����һλ���ڲ�ͬ��</p><p>�����������Ԫ�����õ��Ľ��Ϊ�������ظ�������Ԫ�����Ľ����</p><p>diff &amp;= -diff �õ��� diff ���Ҳ಻Ϊ 0 ��λ��Ҳ���ǲ������ظ�������Ԫ����λ����ʾ�����Ҳ಻ͬ����һλ��������һλ�Ϳ��Խ�����Ԫ�����ֿ�����</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">int</span>[] singleNumber(<span class="keyword">int</span>[] nums) &#123;</span><br><span class="line">    <span class="keyword">int</span> diff = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> num : nums) diff ^= num;</span><br><span class="line">    <span class="comment">// �õ�����һλ</span></span><br><span class="line">    diff &amp;= -diff;</span><br><span class="line">    <span class="keyword">int</span>[] ret = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">2</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> num : nums) &#123;</span><br><span class="line">        <span class="keyword">if</span>((num &amp; diff) == <span class="number">0</span>) ret[<span class="number">0</span>] ^= num;</span><br><span class="line">        <span class="keyword">else</span> ret[<span class="number">1</span>] ^= num;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>�ж�һ������λ����ʾ�Ƿ񲻻���������� 0 �� 1</strong></p><p><a href="https://leetcode.com/problems/binary-number-with-alternating-bits/description/" target="_blank" rel="noopener">Leetcode : 693. Binary Number with Alternating Bits (Easy)</a></p><p>���� 10101 ����λ����ʾ���������������ƶ� 1 λ�õ� 1010 ����������ÿ��λ����ͬ��������õ��Ľ��Ϊ 11111��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">hasAlternatingBits</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a = (n ^ (n &gt;&gt; <span class="number">1</span>));</span><br><span class="line">    <span class="keyword">return</span> (a &amp; (a + <span class="number">1</span>)) == <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>��һ�����Ĳ���</strong></p><p><a href="https://leetcode.com/problems/number-complement/description/" target="_blank" rel="noopener">Leetcode : 476. Number Complement (Easy)</a></p><p>�����Ƕ����Ʊ�ʾ�е��� 0 ����</p><p>���� 00000101��Ҫ������Խ����� 00000111 ��������������ô�����ת��Ϊ������ 00000111��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findComplement</span><span class="params">(<span class="keyword">int</span> num)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(num == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> mask = <span class="number">1</span> &lt;&lt; <span class="number">30</span>;</span><br><span class="line">    <span class="keyword">while</span>((num &amp; mask) == <span class="number">0</span>) mask &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    mask = (mask &lt;&lt; <span class="number">1</span>) - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> num ^ mask;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>�������� Java �� Integer.highestOneBit() ��������ú����� 1 ������</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findComplement</span><span class="params">(<span class="keyword">int</span> num)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(num == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> mask = Integer.highestOneBit(num);</span><br><span class="line">    mask = (mask &lt;&lt; <span class="number">1</span>) - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">return</span> num ^ mask;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>���� 10000000 ��������Ҫ��չ�� 11111111�������������·�����</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mask |= mask &gt;&gt; 1    11000000</span><br><span class="line">mask |= mask &gt;&gt; 2    11110000</span><br><span class="line">mask |= mask &gt;&gt; 4    11111111</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">findComplement</span><span class="params">(<span class="keyword">int</span> num)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> mask = num;</span><br><span class="line">    mask |= mask &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    mask |= mask &gt;&gt; <span class="number">2</span>;</span><br><span class="line">    mask |= mask &gt;&gt; <span class="number">4</span>;</span><br><span class="line">    mask |= mask &gt;&gt; <span class="number">8</span>;</span><br><span class="line">    mask |= mask &gt;&gt; <span class="number">16</span>;</span><br><span class="line">    <span class="keyword">return</span> (mask ^ num);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>ʵ�������ļӷ�</strong></p><p><a href="https://leetcode.com/problems/sum-of-two-integers/description/" target="_blank" rel="noopener">Leetcode : 371. Sum of Two Integers (Easy)</a></p><p>a ^ b ��ʾû�п��ǽ�λ������������ĺͣ�(a &amp; b) &lt;&lt; 1 ���ǽ�λ���ݹ����ֹ��ԭ���� (a &amp; b) &lt;&lt; 1 ���ұ߻��һ�� 0����ô�����ݹ飬��λ���ұߵ� 0 ���������࣬����λ���Ϊ 0���ݹ���ֹ��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getSum</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> b == <span class="number">0</span> ? a : getSum((a ^ b), (a &amp; b) &lt;&lt; <span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>�ַ����������˻�</strong></p><p><a href="https://leetcode.com/problems/maximum-product-of-word-lengths/description/" target="_blank" rel="noopener">Leetcode : 318. Maximum Product of Word Lengths (Medium)</a></p><p>��Ŀ�������ַ���������ַ���ֻ����Сд�ַ�������ַ��������������ַ������ȵ����˻���Ҫ���������ַ������ܺ�����ͬ�ַ���</p><p>����˼·��������Ҫ�������ж������ַ����Ƿ���ͬ�ַ��������ַ���ֻ����Сд�ַ����ܹ� 26 λ����˿�����һ�� 32 λ���������洢ÿ���ַ��Ƿ���ֹ���</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">maxProduct</span><span class="params">(String[] words)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = words.length;</span><br><span class="line">    <span class="keyword">if</span> (n == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span>[] val = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">char</span> c : words[i].toCharArray()) &#123;</span><br><span class="line">            val[i] |= <span class="number">1</span> &lt;&lt; (c - <span class="string">'a'</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> ret = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; n; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> ((val[i] &amp; val[j]) == <span class="number">0</span>) &#123;</span><br><span class="line">                ret = Math.max(ret, words[i].length() * words[j].length());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="�ο�����"><a href="#�ο�����" class="headerlink" title="�ο�����"></a>�ο�����</h1><ul><li><a href="https://leetcode.com/problemset/algorithms/?status=Todo" target="_blank" rel="noopener">Leetcode</a></li><li>���ݽṹ���㷨����</li><li>�㷨</li><li>��ָ Offer</li><li>���֮��</li><li>����Ա��������ָ��</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- GFM-TOC --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#�㷨˼��&quot;&gt;�㷨˼��&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#���ֲ���&quot;&gt;���ֲ���&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#̰��˼��&quot;&gt;̰��˼��&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2018/03/29/programming-basics-master/notes/Java%20%E5%AE%B9%E5%99%A8/"/>
    <id>http://yoursite.com/2018/03/29/programming-basics-master/notes/Java 容器/</id>
    <published>2018-03-29T14:37:48.172Z</published>
    <updated>2018-02-26T04:13:28.000Z</updated>
    
    <content type="html"><![CDATA[<!-- GFM-TOC --><ul><li><a href="#����">����</a><ul><li><a href="#1-list">1. List</a></li><li><a href="#2-set">2. Set</a></li><li><a href="#3-queue">3. Queue</a></li><li><a href="#4-map">4. Map</a></li><li><a href="#5-java-1011-����">5. Java 1.0/1.1 ����</a></li></ul></li><li><a href="#�����е����ģʽ">�����е����ģʽ</a><ul><li><a href="#1-������ģʽ">1. ������ģʽ</a></li><li><a href="#2-������ģʽ">2. ������ģʽ</a></li></ul></li><li><a href="#ɢ��">ɢ��</a></li><li><a href="#Դ�����">Դ�����</a><ul><li><a href="#1-arralist">1. ArraList</a></li><li><a href="#2-vector-��-stack">2. Vector �� Stack</a></li><li><a href="#3-linkedlist">3. LinkedList</a></li><li><a href="#4-treemap">4. TreeMap</a></li><li><a href="#5-hashmap">5. HashMap</a></li><li><a href="#6-linkedhashmap">6. LinkedHashMap</a></li><li><a href="#7-concurrenthashmap">7. ConcurrentHashMap</a></li></ul></li><li><a href="#�ο�����">�ο�����</a><!-- GFM-TOC --></li></ul><h1 id="����"><a href="#����" class="headerlink" title="����"></a>����</h1><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/ebf03f56-f957-4435-9f8f-0f605661484d.jpg" alt=""></p><p>������Ҫ���� Collection �� Map ���֣�Collection �ְ����� List��Set �Լ� Queue��</p><h2 id="1-List"><a href="#1-List" class="headerlink" title="1. List"></a>1. List</h2><ul><li><p>ArrayList�����ڶ�̬����ʵ�֣�֧��������ʣ�</p></li><li><p>LinkedList������˫��ѭ������ʵ�֣�ֻ��˳����ʣ����ǿ��Կ��ٵ��������м�����ɾ��Ԫ�ء�������ˣ�LinkedList ����������ջ�����к�˫�˶��С�</p></li></ul><h2 id="2-Set"><a href="#2-Set" class="headerlink" title="2. Set"></a>2. Set</h2><ul><li><p>HashSet������ Hash ʵ�֣�֧�ֿ��ٲ��ң�����ʧȥ�����ԣ�</p></li><li><p>TreeSet�����ں����ʵ�֣��������򣬵��ǲ���Ч�ʲ��� HashSet��</p></li><li><p>LinkedListHashSet������ HashSet �Ĳ���Ч�ʣ����ڲ�ʹ������ά��Ԫ�صĲ���˳����˾��������ԡ�</p></li></ul><h2 id="3-Queue"><a href="#3-Queue" class="headerlink" title="3. Queue"></a>3. Queue</h2><p>ֻ������ʵ�֣�LinkedList �� PriorityQueue������ LinkedList ֧��˫����У�PriorityQueue �ǻ��ڶѽṹʵ�֡�</p><h2 id="4-Map"><a href="#4-Map" class="headerlink" title="4. Map"></a>4. Map</h2><ul><li><p>HashMap������ Hash ʵ��</p></li><li><p>LinkedHashMap��ʹ��������ά��Ԫ�ص�˳��˳��Ϊ����˳������������ʹ�ã�LRU��˳��</p></li><li><p>TreeMap�����ں����ʵ��</p></li><li><p>ConcurrentHashMap���̰߳�ȫ Map�����漰������ HashTable ��ͬ������</p></li></ul><h2 id="5-Java-1-0-1-1-����"><a href="#5-Java-1-0-1-1-����" class="headerlink" title="5. Java 1.0/1.1 ����"></a>5. Java 1.0/1.1 ����</h2><p>���ھɵ����������Ǿ���Ӧ��ʹ�����ǣ�ֻ��Ҫ�����ǽ����˽⡣</p><ul><li><p>Vector���� ArrayList ���ƣ��������̰߳�ȫ��</p></li><li><p>HashTable���� HashMap ���ƣ��������̰߳�ȫ��</p></li></ul><h1 id="�����е����gʽ"><a href="#�����е����gʽ" class="headerlink" title="�����е����ģʽ"></a>�����е����ģʽ</h1><h2 id="1-������gʽ"><a href="#1-������gʽ" class="headerlink" title="1. ������ģʽ"></a>1. ������ģʽ</h2><p>�Ӹ���ͼ���Կ�����ÿ�������඼��һ�� Iterator ���󣬿���ͨ��������������������������е�Ԫ�ء�</p><p><a href="https://github.com/CyC2018/InterviewNotes/blob/master/notes/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F.md#92-java-%E5%86%85%E7%BD%AE%E7%9A%84%E8%BF%AD%E4%BB%A3%E5%99%A8" target="_blank" rel="noopener">Java �еĵ�����ģʽ </a></p><h2 id="2-������gʽ"><a href="#2-������gʽ" class="headerlink" title="2. ������ģʽ"></a>2. ������ģʽ</h2><p>java.util.Arrays#asList() ���԰���������ת��Ϊ List ���͡�</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">List list = Arrays.asList(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>);</span><br><span class="line"><span class="keyword">int</span>[] arr = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;;</span><br><span class="line">list = Arrays.asList(arr);</span><br></pre></td></tr></table></figure><h1 id="ɢ��"><a href="#ɢ��" class="headerlink" title="ɢ��"></a>ɢ��</h1><p>ʹ�� hasCode() ������ɢ��ֵ��ʹ�õ��Ƕ���ĵ�ַ��</p><p>�� equals() �������ж����������Ƿ���ȵģ���ȵ���������ɢ��ֵһ��Ҫ��ͬ������ɢ��ֵ��ͬ����������һ����ȡ�</p><p>��ȱ�����������������ʣ�</p><ol><li>�Է���</li><li>�Գ���</li><li>������</li><li>һ���ԣ���ε��� x.equals(y)��������䣩</li><li>���κβ��� null �Ķ��� x ���� x.equals(nul) �����Ϊ false</li></ol><h1 id="Դ�����"><a href="#Դ�����" class="headerlink" title="Դ�����"></a>Դ�����</h1><p>�������Ķ� <a href="https://github.com/CyC2018/InterviewNotes/blob/master/notes/%E7%AE%97%E6%B3%95.md#%E7%AC%AC%E4%B8%89%E7%AB%A0-%E6%9F%A5%E6%89%BE" target="_blank" rel="noopener"> �㷨 - ���� </a> ���֣��Լ�����Դ�������кܴ������</p><p>Դ�����أ�<a href="http://download.java.net/openjdk/jdk7" target="_blank" rel="noopener">OpenJDK 1.7</a></p><h2 id="1-ArraList"><a href="#1-ArraList" class="headerlink" title="1. ArraList"></a>1. ArraList</h2><p><a href="https://github.com/CyC2018/InterviewNotes/blob/master/notes/src/ArrayList.java" target="_blank" rel="noopener">ArraList.java</a></p><p>ʵ���� RandomAccess �ӿڣ����֧��������ʣ�����������Ȼ�ģ���Ϊ ArrayList �ǻ�������ʵ�ֵġ�</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ArrayList</span>&lt;<span class="title">E</span>&gt; <span class="keyword">extends</span> <span class="title">AbstractList</span>&lt;<span class="title">E</span>&gt;</span></span><br><span class="line"><span class="class">    <span class="keyword">implements</span> <span class="title">List</span>&lt;<span class="title">E</span>&gt;, <span class="title">RandomAccess</span>, <span class="title">Cloneable</span>, <span class="title">java</span>.<span class="title">io</span>.<span class="title">Serializable</span></span></span><br></pre></td></tr></table></figure><p>��������ʵ�֣�����Ԫ�ص�����ʹ�� transient ���Σ�������Ϊ�����鲻һ������λ�ö�ռ��Ԫ�أ����Ҳ��û��Ҫȫ�����������л�����Ҫ��д writeObject() �� readObject()��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">transient</span> Object[] elementData;</span><br></pre></td></tr></table></figure><p>�����Ĭ�ϴ�СΪ 10</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">ArrayList</span><span class="params">(<span class="keyword">int</span> initialCapacity)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>();</span><br><span class="line">    <span class="keyword">if</span> (initialCapacity &lt; <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"Illegal Capacity: "</span>+ initialCapacity);</span><br><span class="line">    <span class="keyword">this</span>.elementData = <span class="keyword">new</span> Object[initialCapacity];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">ArrayList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>(<span class="number">10</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>ɾ��Ԫ��ʱ���� System.arraycopy() ��Ԫ�ؽ��и��ƣ����ɾ�������ɱ��ܸߣ�����ڴ���ʱ��ָ����ŵ�������С�����ٸ��Ʋ�����ִ�д�����</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> E <span class="title">remove</span><span class="params">(<span class="keyword">int</span> index)</span> </span>&#123;</span><br><span class="line">    rangeCheck(index);</span><br><span class="line"></span><br><span class="line">    modCount++;</span><br><span class="line">    E oldValue = elementData(index);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> numMoved = size - index - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (numMoved &gt; <span class="number">0</span>)</span><br><span class="line">        System.arraycopy(elementData, index+<span class="number">1</span>, elementData, index, numMoved);</span><br><span class="line">    elementData[--size] = <span class="keyword">null</span>; <span class="comment">// Let gc do its work</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> oldValue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>���Ԫ��ʱʹ�� ensureCapacity() ��������֤�����㹻���������ʱ����Ҫ�������ݣ�ʹ��������Ϊ�������� 1.5 ����</p><p>modCount ������¼ ArrayList �����仯�Ĵ�������Ϊÿ���ڽ��� add() �� addAll() ʱ����Ҫ���� ensureCapacity()�����ֱ���� ensureCapacity() �ж� modCount �����޸ġ�</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ensureCapacity</span><span class="params">(<span class="keyword">int</span> minCapacity)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (minCapacity &gt; <span class="number">0</span>)</span><br><span class="line">        ensureCapacityInternal(minCapacity);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ensureCapacityInternal</span><span class="params">(<span class="keyword">int</span> minCapacity)</span> </span>&#123;</span><br><span class="line">    modCount++;</span><br><span class="line">    <span class="comment">// overflow-conscious code</span></span><br><span class="line">    <span class="keyword">if</span> (minCapacity - elementData.length &gt; <span class="number">0</span>)</span><br><span class="line">        grow(minCapacity);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> MAX_ARRAY_SIZE = Integer.MAX_VALUE - <span class="number">8</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">grow</span><span class="params">(<span class="keyword">int</span> minCapacity)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// overflow-conscious code</span></span><br><span class="line">    <span class="keyword">int</span> oldCapacity = elementData.length;</span><br><span class="line">    <span class="keyword">int</span> newCapacity = oldCapacity + (oldCapacity &gt;&gt; <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span> (newCapacity - minCapacity &lt; <span class="number">0</span>)</span><br><span class="line">        newCapacity = minCapacity;</span><br><span class="line">    <span class="keyword">if</span> (newCapacity - MAX_ARRAY_SIZE &gt; <span class="number">0</span>)</span><br><span class="line">        newCapacity = hugeCapacity(minCapacity);</span><br><span class="line">    <span class="comment">// minCapacity is usually close to size, so this is a win:</span></span><br><span class="line">    elementData = Arrays.copyOf(elementData, newCapacity);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">hugeCapacity</span><span class="params">(<span class="keyword">int</span> minCapacity)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (minCapacity &lt; <span class="number">0</span>) <span class="comment">// overflow</span></span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> OutOfMemoryError();</span><br><span class="line">    <span class="keyword">return</span> (minCapacity &gt; MAX_ARRAY_SIZE) ?</span><br><span class="line">        Integer.MAX_VALUE :</span><br><span class="line">        MAX_ARRAY_SIZE;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>�ڽ������л����ߵ����Ȳ���ʱ����Ҫ�Ƚϲ���ǰ�� modCount �Ƿ�ı䣬����ı�����Ҫ�׳� ConcurrentModificationException��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">writeObject</span><span class="params">(java.io.ObjectOutputStream s)</span></span></span><br><span class="line"><span class="function">    <span class="keyword">throws</span> java.io.IOException</span>&#123;</span><br><span class="line">    <span class="comment">// Write out element count, and any hidden stuff</span></span><br><span class="line">    <span class="keyword">int</span> expectedModCount = modCount;</span><br><span class="line">    s.defaultWriteObject();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Write out array length</span></span><br><span class="line">    s.writeInt(elementData.length);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Write out all elements in the proper order.</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;size; i++)</span><br><span class="line">        s.writeObject(elementData[i]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (modCount != expectedModCount) &#123;</span><br><span class="line">        <span class="keyword">throw</span> <span class="keyword">new</span> ConcurrentModificationException();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>�� Vector ������</strong></p><ol><li>Vector �� ArrayList ��������ȫ��ͬ�ģ�Ψһ���������� Vector ��ͬ���ģ���˿����ͱ� ArrayList Ҫ�󣬷���Ҫ�������ʹ�� ArrayList ������ Vector����Ϊͬ����ȫ�����ɳ���Ա�Լ������ƣ�</li><li>Vector ÿ�������������С�� 2 ���ռ䣬�� ArrayList �� 1.5 ����</li></ol><p>Ϊ��ʹ���̰߳�ȫ�� ArrayList������ʹ�� Collections.synchronizedList(new ArrayList&lt;&gt;()); ����һ���̰߳�ȫ�� ArrayList��Ҳ����ʹ�� concurrent �������µ� CopyOnWriteArrayList �ࣻ</p><p><strong>�� LinkedList ������</strong></p><ol><li>ArrayList ���ڶ�̬����ʵ�֣�LinkedList ����˫��ѭ������ʵ�֣�</li><li>ArrayList ֧��������ʣ�LinkedList ��֧�֣�</li><li>LinkedList ������λ�����ɾ��Ԫ�ظ��졣</li></ol><h2 id="2-Vector-��-Stack"><a href="#2-Vector-��-Stack" class="headerlink" title="2. Vector �� Stack"></a>2. Vector �� Stack</h2><p><a href="https://github.com/CyC2018/InterviewNotes/blob/master/notes/src/Vector.java" target="_blank" rel="noopener">Vector.java</a></p><h2 id="3-LinkedList"><a href="#3-LinkedList" class="headerlink" title="3. LinkedList"></a>3. LinkedList</h2><p><a href="https://github.com/CyC2018/InterviewNotes/blob/master/notes/src/LinkedList.java" target="_blank" rel="noopener">LinkedList.java</a></p><h2 id="4-TreeMap"><a href="#4-TreeMap" class="headerlink" title="4. TreeMap"></a>4. TreeMap</h2><p><a href="https://github.com/CyC2018/InterviewNotes/blob/master/notes/src/TreeMap.java" target="_blank" rel="noopener">TreeMap.java</a></p><h2 id="5-HashMap"><a href="#5-HashMap" class="headerlink" title="5. HashMap"></a>5. HashMap</h2><p><a href="https://github.com/CyC2018/InterviewNotes/blob/master/notes/src/HashMap.java" target="_blank" rel="noopener">HashMap.java</a></p><p>ʹ���������������ͻ��</p><p>Ĭ������ capacity Ϊ 16����Ҫע������������뱣֤Ϊ 2 �Ĵη����������� Entry[] table ����ĳ��ȣ�size �������ʵ��ʹ������</p><p>threshold �涨��һ�� size ���ٽ�ֵ��size ����С�� threshold��������ڵ��ڣ��ͱ���������ݲ�����</p><p>threshold = capacity * load_factor������ load_factor Ϊ table �����ܹ�ʹ�õı�����load_factor ����ᵼ�¾۴صĳ��֣��Ӷ�Ӱ���ѯ�Ͳ����Ч�ʣ�����㷨�ʼǡ�</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> DEFAULT_INITIAL_CAPACITY = <span class="number">16</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> MAXIMUM_CAPACITY = <span class="number">1</span> &lt;&lt; <span class="number">30</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">float</span> DEFAULT_LOAD_FACTOR = <span class="number">0.75f</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">transient</span> Entry[] table;</span><br><span class="line"></span><br><span class="line"><span class="keyword">transient</span> <span class="keyword">int</span> size;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> threshold;</span><br><span class="line"></span><br><span class="line"><span class="keyword">final</span> <span class="keyword">float</span> loadFactor;</span><br><span class="line"></span><br><span class="line"><span class="keyword">transient</span> <span class="keyword">int</span> modCount;</span><br></pre></td></tr></table></figure><p>����������Ԫ�ش����п��Կ���������Ҫ����ʱ���� capacity Ϊԭ����������</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">addEntry</span><span class="params">(<span class="keyword">int</span> hash, K key, V value, <span class="keyword">int</span> bucketIndex)</span> </span>&#123;</span><br><span class="line">    Entry&lt;K,V&gt; e = table[bucketIndex];</span><br><span class="line">    table[bucketIndex] = <span class="keyword">new</span> Entry&lt;&gt;(hash, key, value, e);</span><br><span class="line">    <span class="keyword">if</span> (size++ &gt;= threshold)</span><br><span class="line">        resize(<span class="number">2</span> * table.length);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Entry ������ʾһ����ֵ��Ԫ�أ����е� next ָ�������л�ʱ��ʹ�á�</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Entry</span>&lt;<span class="title">K</span>,<span class="title">V</span>&gt; <span class="keyword">implements</span> <span class="title">Map</span>.<span class="title">Entry</span>&lt;<span class="title">K</span>,<span class="title">V</span>&gt; </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> K key;</span><br><span class="line">    V value;</span><br><span class="line">    Entry&lt;K,V&gt; next;</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">int</span> hash;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>get() ������Ҫ�ֳ����������key Ϊ null �� ��Ϊ null�����п��Կ��� HashMap ������� null ��Ϊ����</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> V <span class="title">get</span><span class="params">(Object key)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (key == <span class="keyword">null</span>)</span><br><span class="line">        <span class="keyword">return</span> getForNullKey();</span><br><span class="line">    <span class="keyword">int</span> hash = hash(key.hashCode());</span><br><span class="line">    <span class="keyword">for</span> (Entry&lt;K,V&gt; e = table[indexFor(hash, table.length)]; e != <span class="keyword">null</span>; e = e.next) &#123;</span><br><span class="line">        Object k;</span><br><span class="line">        <span class="keyword">if</span> (e.hash == hash &amp;&amp; ((k = e.key) == key || key.equals(k)))</span><br><span class="line">            <span class="keyword">return</span> e.value;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>put() ����Ҳ��Ҫ���� key �Ƿ�Ϊ null ����ͬ�Ĵ�����Ҫע������������û�� key Ϊ null �ļ�ֵ�ԣ��²���һ�� key Ϊ null �ļ�ֵ��ʱĬ���Ƿ�������� 0 λ�ã�������Ϊ null ���ܼ��� hash ֵ��Ҳ���޷�֪��Ӧ�÷����ĸ������ϡ�</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> V <span class="title">put</span><span class="params">(K key, V value)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (key == <span class="keyword">null</span>)</span><br><span class="line">        <span class="keyword">return</span> putForNullKey(value);</span><br><span class="line">    <span class="keyword">int</span> hash = hash(key.hashCode());</span><br><span class="line">    <span class="keyword">int</span> i = indexFor(hash, table.length);</span><br><span class="line">    <span class="keyword">for</span> (Entry&lt;K,V&gt; e = table[i]; e != <span class="keyword">null</span>; e = e.next) &#123;</span><br><span class="line">        Object k;</span><br><span class="line">        <span class="keyword">if</span> (e.hash == hash &amp;&amp; ((k = e.key) == key || key.equals(k))) &#123;</span><br><span class="line">            V oldValue = e.value;</span><br><span class="line">            e.value = value;</span><br><span class="line">            e.recordAccess(<span class="keyword">this</span>);</span><br><span class="line">            <span class="keyword">return</span> oldValue;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    modCount++;</span><br><span class="line">    addEntry(hash, key, value, i);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> V <span class="title">putForNullKey</span><span class="params">(V value)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (Entry&lt;K,V&gt; e = table[<span class="number">0</span>]; e != <span class="keyword">null</span>; e = e.next) &#123;</span><br><span class="line">        <span class="keyword">if</span> (e.key == <span class="keyword">null</span>) &#123;</span><br><span class="line">            V oldValue = e.value;</span><br><span class="line">            e.value = value;</span><br><span class="line">            e.recordAccess(<span class="keyword">this</span>);</span><br><span class="line">            <span class="keyword">return</span> oldValue;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    modCount++;</span><br><span class="line">    addEntry(<span class="number">0</span>, <span class="keyword">null</span>, value, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-LinkedHashMap"><a href="#6-LinkedHashMap" class="headerlink" title="6. LinkedHashMap"></a>6. LinkedHashMap</h2><p><a href="https://github.com/CyC2018/InterviewNotes/blob/master/notes/src/HashMap.java" target="_blank" rel="noopener">LinkedHashMap.java</a></p><h2 id="7-ConcurrentHashMap"><a href="#7-ConcurrentHashMap" class="headerlink" title="7. ConcurrentHashMap"></a>7. ConcurrentHashMap</h2><p><a href="https://github.com/CyC2018/InterviewNotes/blob/master/notes/src/HashMap.java" target="_blank" rel="noopener">ConcurrentHashMap.java</a></p><p><a href="https://www.ibm.com/developerworks/cn/java/java-lo-concurrenthashmap/" target="_blank" rel="noopener"> ̽�� ConcurrentHashMap �߲����Ե�ʵ�ֻ��� </a></p><h1 id="�ο�����"><a href="#�ο�����" class="headerlink" title="�ο�����"></a>�ο�����</h1><ul><li>Java ���˼��</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- GFM-TOC --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#����&quot;&gt;����&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#1-list&quot;&gt;1. List&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#2-set&quot;&gt;2. Set&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a hr
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2018/03/29/programming-basics-master/notes/Java%20IO/"/>
    <id>http://yoursite.com/2018/03/29/programming-basics-master/notes/Java IO/</id>
    <published>2018-03-29T14:37:48.171Z</published>
    <updated>2018-02-26T04:13:28.000Z</updated>
    
    <content type="html"><![CDATA[<!-- GFM-TOC --><ul><li><a href="#����">����</a></li><li><a href="#���̲���">���̲���</a></li><li><a href="#�ֽڲ���">�ֽڲ���</a></li><li><a href="#�ַ�����">�ַ�����</a></li><li><a href="#�������">�������</a></li><li><a href="#�������">�������</a><ul><li><a href="#1-inetaddress">1. InetAddress</a></li><li><a href="#2-url">2. URL</a></li><li><a href="#3-sockets">3. Sockets</a></li><li><a href="#4-datagram">4. Datagram</a></li></ul></li><li><a href="#nio">NIO</a><ul><li><a href="#1-�����">1. �����</a></li><li><a href="#2-ͨ���뻺����">2. ͨ���뻺����</a><ul><li><a href="#21-ͨ��">2.1 ͨ��</a></li><li><a href="#22-������">2.2 ������</a></li></ul></li><li><a href="#3-������״̬����">3. ������״̬����</a></li><li><a href="#4-��д�ļ�ʵ��">4. ��д�ļ�ʵ��</a></li><li><a href="#5-�����������">5. �����������</a><ul><li><a href="#51-����ʽ-io">5.1 ����ʽ I/O</a></li><li><a href="#52-������ʽ-io">5.2 ������ʽ I/O</a></li></ul></li><li><a href="#6-�׽���ʵ��">6. �׽���ʵ��</a><ul><li><a href="#61-serversocketchannel">6.1 ServerSocketChannel</a></li><li><a href="#62-selectors">6.2 Selectors</a></li><li><a href="#63-��ѭ��">6.3 ��ѭ��</a></li><li><a href="#64-����������">6.4 ����������</a></li><li><a href="#65-�����µ�����">6.5 �����µ�����</a></li><li><a href="#66-ɾ���������-selectionkey">6.6 ɾ��������� SelectionKey</a></li><li><a href="#67-�����-io">6.7 ����� I/O</a></li></ul></li></ul></li><li><a href="#�ο�����">�ο�����</a><!-- GFM-TOC --></li></ul><h1 id="����"><a href="#����" class="headerlink" title="����"></a>����</h1><p>Java �� I/O ��ſ��Էֳ����¼���</p><ol><li>���̲�����File</li><li>�ֽڲ�����InputStream �� OutputStream</li><li>�ַ�������Reader �� Writer</li><li>���������Serializable</li><li>���������Socket</li><li>������ʽ IO��NIO</li></ol><h1 id="���̲���"><a href="#���̲���" class="headerlink" title="���̲���"></a>���̲���</h1><p>File ��������ڱ�ʾ�ļ���Ŀ¼��������ֻ���ڱ�ʾ�ļ�����Ϣ��������ʾ�ļ������ݡ�</p><h1 id="�ֽڲ���"><a href="#�ֽڲ���" class="headerlink" title="�ֽڲ���"></a>�ֽڲ���</h1><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/8143787f-12eb-46ea-9bc3-c66d22d35285.jpg" alt=""></p><p>Java I/O ʹ����װ����ģʽ��ʵ�֡��� InputStream Ϊ����InputStream �ǳ��������FileInputStream �� InputStream �����࣬���ھ���������ṩ���ֽ��������������FilterInputStream ���ڳ���װ���ߣ�װ��������װ�������Ϊ����ṩ����Ĺ��ܣ����� BufferedInputStream Ϊ FileInputStream �ṩ����Ĺ��ܡ�ʵ����һ�����л��湦�ܵ��ֽ�������ʱ��ֻ��Ҫ�� FileInputStream ����������һ�� BufferedInputStream ���󼴿ɡ�</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BufferedInputStream bis = <span class="keyword">new</span> BufferedInputStream(<span class="keyword">new</span> FileInputStream(file));</span><br></pre></td></tr></table></figure><p>DataInputStream װ�����ṩ�˶Ը����������ͽ�������Ĳ��������� int��double �Ȼ������͡�</p><p>���������ļ��е����ݵ��ֽ�������</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">byte</span>[] buf = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">20</span>*<span class="number">1024</span>];</span><br><span class="line"><span class="keyword">int</span> bytes = <span class="number">0</span>;</span><br><span class="line"><span class="comment">// ����ȡ buf.length ���ֽڣ����ص���ʵ�ʶ�ȡ�ĸ��������� -1 ��ʱ���ʾ���� eof�����ļ�β</span></span><br><span class="line"><span class="keyword">while</span>((bytes = in.read(buf, <span class="number">0</span> , buf.length)) != -<span class="number">1</span>) &#123;</span><br><span class="line">    <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="�ַ�����"><a href="#�ַ�����" class="headerlink" title="�ַ�����"></a>�ַ�����</h1><p>�����Ǵ��̻������紫�䣬��С�Ĵ洢��Ԫ�����ֽڣ��������ַ������� I/O �����Ķ����ֽڶ������ַ��������ڳ����в���������ͨ�����ַ���ʽ�������Ҫ�ṩ���ַ����в����ķ�����</p><p>InputStreamReader ʵ�ִ��ı��ļ����ֽ���������ַ�����OutputStreamWriter ʵ���ַ��������Ϊ�ı��ļ����ֽ��������Ƕ��̳��� Reader �� Writer��</p><p>������ǰ��ַ�ת��Ϊ�ֽڣ��������ǰ��ֽ�������ϳ��ַ���</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">byte</span>[] bytes = str.getBytes(encoding);     <span class="comment">// ����</span></span><br><span class="line">String str = <span class="keyword">new</span> String(bytes, encoding)�� <span class="comment">// ����</span></span><br></pre></td></tr></table></figure><p>GBK �����У�����ռ 2 ���ֽڣ�Ӣ��ռ 1 ���ֽڣ�UTF-8 �����У�����ռ 3 ���ֽڣ�Ӣ��ռ 1 ���ֽڣ�Java ʹ��˫�ֽڱ��� UTF-16be�����ĺ�Ӣ�Ķ�ռ 2 ���ֽڡ�</p><p>�������ͽ������ʹ�ò�ͬ�ı��뷽ʽ��ô�ͳ��������롣</p><h1 id="�������"><a href="#�������" class="headerlink" title="�������"></a>�������</h1><p>���л����ǽ�һ������ת�����ֽ����У�����洢�ʹ��䡣</p><p>���л���ObjectOutputStream.writeObject()</p><p>�����л���ObjectInputStream.readObject()</p><p>���л�������Ҫʵ�� Serializable �ӿڣ���ֻ��һ����׼��û���κη�����Ҫʵ�֡�</p><p>transient �ؼ��ֿ���ʹһЩ���Բ��ᱻ���л���</p><p><strong>ArrayList ���л��ͷ����л���ʵ��</strong>��ArrayList �д洢���ݵ��������� transient ���εģ���Ϊ��������Ƕ�̬��չ�ģ����������еĿռ䶼��ʹ�ã���˾Ͳ���Ҫ���е����ݶ������л���ͨ����д���л��ͷ����л�������ʹ�ÿ���ֻ���л������������ݵ��ǲ������ݡ�</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">private transient Object[] elementData;</span><br></pre></td></tr></table></figure><h1 id="�������-1"><a href="#�������-1" class="headerlink" title="�������"></a>�������</h1><p>Java �е�����֧�֣�</p><ol><li>InetAddress�����ڱ�ʾ�����ϵ�Ӳ����Դ���� IP ��ַ��</li><li>URL��ͳһ��Դ��λ����ͨ�� URL ����ֱ�Ӷ�ȡ����д�������ϵ����ݣ�</li><li>Sockets��ʹ�� TCP Э��ʵ������ͨ�ţ�</li><li>Datagram��ʹ�� UDP Э��ʵ������ͨ�š�</li></ol><h2 id="1-InetAddress"><a href="#1-InetAddress" class="headerlink" title="1. InetAddress"></a>1. InetAddress</h2><p>û�й��й��캯����ֻ��ͨ����̬����������ʵ�������� InetAddress.getByName(String host)��InetAddress.getByAddress(byte[] addr)��</p><h2 id="2-URL"><a href="#2-URL" class="headerlink" title="2. URL"></a>2. URL</h2><p>����ֱ�Ӵ� URL �ж�ȡ�ֽ�������</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">URL url = <span class="keyword">new</span> URL(<span class="string">"http://www.baidu.com"</span>);</span><br><span class="line">InputStream is = url.openStream(); <span class="comment">// �ֽ���</span></span><br><span class="line">InputStreamReader isr = <span class="keyword">new</span> InputStreamReader(is, <span class="string">"utf-8"</span>);                              <span class="comment">// �ַ���</span></span><br><span class="line">BufferedReader br = <span class="keyword">new</span> BufferedReader(isr);</span><br><span class="line">String line = br.readLine();</span><br><span class="line"><span class="keyword">while</span> (line != <span class="keyword">null</span>) &#123;</span><br><span class="line">    System.out.println(line);</span><br><span class="line">    line = br.readLine();</span><br><span class="line">&#125;</span><br><span class="line">br.close();</span><br><span class="line">isr.close();</span><br><span class="line">is.close();</span><br></pre></td></tr></table></figure><h2 id="3-Sockets"><a href="#3-Sockets" class="headerlink" title="3. Sockets"></a>3. Sockets</h2><p>Socket ͨ��ģ��</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/fa4101d7-19ce-4a69-a84f-20bbe64320e5.jpg" alt=""></p><ul><li>ServerSocket������������</li><li>Socket���ͻ�����</li></ul><p>�������Ϳͻ���ͨ�� InputStream �� OutputStream �������������</p><h2 id="4-Datagram"><a href="#4-Datagram" class="headerlink" title="4. Datagram"></a>4. Datagram</h2><ul><li>DatagramPacket�����ݰ���</li><li>DatagramSocket��ͨ����</li></ul><h1 id="NIO"><a href="#NIO" class="headerlink" title="NIO"></a>NIO</h1><p>NIO �����ʱ�� I/O ���� ( ��������ȡ������ ) ת�ƻز���ϵͳ����� ����Ҫ����Աȥ���ƾͿ��Լ������������ٶȡ�</p><h2 id="1-�����"><a href="#1-�����" class="headerlink" title="1. �����"></a>1. �����</h2><p>I/O �� NIO ����Ҫ�����������ݴ���ʹ���ķ�ʽ������ǰ���ᵽ�ģ�I/O �����ķ�ʽ�������ݣ��� NIO �Կ�ķ�ʽ�������ݡ�</p><p>�������� I/O һ��һ���ֽڽ��д������ݣ�һ������������һ���ֽڵ����ݣ�һ�����������һ���ֽڵ����ݡ�Ϊ��ʽ���ݴ����������ǳ����ף����Ӽ������������Ա�ÿ��������ֻ���𵥸����Ӵ�����Ƶ�һ���֣�����Ҳ����Լ򵥵ġ�������һ���ǣ��������� I/O ͨ���൱����</p><p>һ�������� I/O ϵͳ�Կ����ʽ�������ݣ�ÿһ����������һ���в�����������һ�����ݿ顣���鴦�����ݱȰ�����������Ҫ��öࡣ���������� I/O ȱ��һЩ�������� I/O �����е������Ժͼ��ԡ�</p><p>I/O ���� NIO �Ѿ��ܺõؼ����ˣ�java.io.* �Ѿ��� NIO Ϊ��������ʵ���ˣ������������������� NIO ��һЩ���ԡ����磬 java.io.* ���е�һЩ������Կ����ʽ��д���ݵķ�������ʹ�ü�ʹ�ڸ���������ϵͳ�У������ٶ�Ҳ����졣</p><h2 id="2-ͨ���뻺����"><a href="#2-ͨ���뻺����" class="headerlink" title="2. ͨ���뻺����"></a>2. ͨ���뻺����</h2><h3 id="2-1-ͨ��"><a href="#2-1-ͨ��" class="headerlink" title="2.1 ͨ��"></a>2.1 ͨ��</h3><p>ͨ�� Channel �Ƕ�ԭ I/O ���е�����ģ�⣬����ͨ������ȡ��д�����ݡ�</p><p>ͨ�������Ĳ�֮ͬ�����ڣ���ֻ����һ���������ƶ���(һ���������� InputStream ���� OutputStream ������)�� ��ͨ����˫��ģ��������ڶ���д����ͬʱ���ڶ�д��</p><p>ͨ�������������ͣ�</p><ul><li>FileChannel�����ļ��ж�д���ݣ�</li><li>DatagramChannel��ͨ�� UDP ��д���������ݣ�</li><li>SocketChannel��ͨ�� TCP ��д���������ݣ�</li><li>ServerSocketChannel�����Լ����½����� TCP ���ӣ���ÿһ���½��������Ӷ��ᴴ��һ�� SocketChannel��</li></ul><h3 id="2-2-������"><a href="#2-2-������" class="headerlink" title="2.2 ������"></a>2.2 ������</h3><p>���͸�һ��ͨ�������ж��󶼱������ȷŵ��������У�ͬ���أ���ͨ���ж�ȡ���κ����ݶ�Ҫ�����������С�Ҳ����˵������ֱ�Ӷ�ͨ�����ж�д���ݣ������Ⱦ�����������</p><p>������ʵ������һ�����飬������������һ�����顣�������ṩ�˶����ݵĽṹ�����ʣ����һ����Ը���ϵͳ�Ķ�/д���̡�</p><p>�����������������ͣ�</p><ul><li>ByteBuffer</li><li>CharBuffer</li><li>ShortBuffer</li><li>IntBuffer</li><li>LongBuffer</li><li>FloatBuffer</li><li>DoubleBuffer</li></ul><h2 id="3-������״̬����"><a href="#3-������״̬����" class="headerlink" title="3. ������״̬����"></a>3. ������״̬����</h2><ul><li>capacity�����������</li><li>position����ǰ�Ѿ���д���ֽ�����</li><li>limit�������Զ�д���ֽ�����</li></ul><p>״̬�����ĸı���̣�</p><p>1. �½�һ����СΪ 8 ���ֽڵĻ���������ʱ position Ϊ 0���� limit == capacity == 9��capacity ��������ı䣬��������ۻ��������</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/1bea398f-17a7-4f67-a90b-9e2d243eaa9a.png" alt=""></p><p>2. ������ͨ���ж�ȡ 3 ���ֽ�����д�뻺�����У���ʱ position �ƶ���Ϊ 3��limit ���ֲ��䡣</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/4628274c-25b6-4053-97cf-d1239b44c43d.png" alt=""></p><p>3. �ڽ�������������д�����ͨ��֮ǰ����Ҫ�ȵ��� flip() ��������������� limit ����Ϊ��ǰ position������ position ����Ϊ 0��</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/952e06bd-5a65-4cab-82e4-dd1536462f38.png" alt=""></p><p>4. �ӻ�������ȡ 4 ���ֽڵ���������У���ʱ position ��Ϊ 4��</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/b5bdcbe2-b958-4aef-9151-6ad963cb28b4.png" alt=""></p><p>5. �����Ҫ���� clear() ��������ջ���������ʱ position �� limit ��������Ϊ���λ�á�</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/67bf5487-c45d-49b6-b9c0-a058d8c68902.png" alt=""></p><h2 id="4-��д�l�ʵ��"><a href="#4-��д�l�ʵ��" class="headerlink" title="4. ��д�ļ�ʵ��"></a>4. ��д�ļ�ʵ��</h2><p>1. ΪҪ��ȡ���ļ����� FileInputStream��֮��ͨ�� FileInputStream ��ȡ���� FileChannel��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">FileInputStream fin = <span class="keyword">new</span> FileInputStream(<span class="string">"readandshow.txt"</span>);</span><br><span class="line">FileChannel fic = fin.getChannel();</span><br></pre></td></tr></table></figure><p>2. ����һ������Ϊ 1024 �� Buffer</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ByteBuffer buffer = ByteBuffer.allocate(<span class="number">1024</span>);</span><br></pre></td></tr></table></figure><p>3. �����ݴ����� FileChannel д�뵽 Buffer �У����û�����ݵĻ��� read() �����᷵�� -1</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> r = fcin.read(buffer);</span><br><span class="line"><span class="keyword">if</span> (r == -<span class="number">1</span>) &#123;</span><br><span class="line">     <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4. ΪҪд����ļ����� FileOutputStream��֮��ͨ�� FileOutputStream ��ȡ��� FileChannel</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">FileOutputStream fout = <span class="keyword">new</span> FileOutputStream(<span class="string">"writesomebytes.txt"</span>);</span><br><span class="line">FileChannel foc = fout.getChannel();</span><br></pre></td></tr></table></figure><p>5. ���� flip() �л���д</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">buffer.flip();</span><br></pre></td></tr></table></figure><p>6. �� Buffer �е����ݶ�ȡ����� FileChannel ��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">foc.write(buffer);</span><br></pre></td></tr></table></figure><p>7. ������ clear() ���û�����</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">buffer.clear();</span><br></pre></td></tr></table></figure><h2 id="5-�����������"><a href="#5-�����������" class="headerlink" title="5. �����������"></a>5. �����������</h2><p>Ӧ��ע�⣬FileChannel �����л���������ģʽ���׽��� Channel ���ԡ�</p><h3 id="5-1-����ʽ-I-O"><a href="#5-1-����ʽ-I-O" class="headerlink" title="5.1 ����ʽ I/O"></a>5.1 ����ʽ I/O</h3><p>����ʽ I/O �ڵ��� InputStream.read() ����ʱ��һֱ�ȵ����ݵ���ʱ����ʱ���Ż᷵�أ��ڵ��� ServerSocket.accept() ����ʱ��Ҳ��һֱ�������пͻ������ӲŻ᷵�أ�ÿ���ͻ������ӹ����󣬷���˶�����һ���߳�ȥ����ÿͻ��˵�����</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/edc23f99-c46c-4200-b64e-07516828720d.jpg" alt=""></p><h3 id="5-2-������ʽ-I-O"><a href="#5-2-������ʽ-I-O" class="headerlink" title="5.2 ������ʽ I/O"></a>5.2 ������ʽ I/O</h3><p>��һ��ר�ŵ��߳����������е� I/O �¼���������ַ���</p><p>�¼��������ƣ��¼�����ʱ�򴥷���������ͬ����ȥ�����¼���</p><p>�߳�ͨ�ţ��߳�֮��ͨ�� wait()��notify() �ȷ�ʽͨ�ţ���֤ÿ���������л�����������ģ�������ν���߳��л���</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/7fcb2fb0-2cd9-4396-bc2d-282becf963c3.jpg" alt=""></p><h2 id="6-�׽���ʵ��"><a href="#6-�׽���ʵ��" class="headerlink" title="6. �׽���ʵ��"></a>6. �׽���ʵ��</h2><h3 id="6-1-ServerSocketChannel"><a href="#6-1-ServerSocketChannel" class="headerlink" title="6.1 ServerSocketChannel"></a>6.1 ServerSocketChannel</h3><p>ÿһ���˿ڶ���Ҫ��һ�� ServerSocketChannel �����������ӡ�</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ServerSocketChannel ssc = ServerSocketChannel.open();</span><br><span class="line">ssc.configureBlocking(<span class="keyword">false</span>); <span class="comment">// ����Ϊ������</span></span><br><span class="line"></span><br><span class="line">ServerSocket ss = ssc.socket();</span><br><span class="line">InetSocketAddress address = <span class="keyword">new</span> InetSocketAddress(ports[i]);</span><br><span class="line">ss.bind(address); <span class="comment">// �󶨶˿ں�</span></span><br></pre></td></tr></table></figure><h3 id="6-2-Selectors"><a href="#6-2-Selectors" class="headerlink" title="6.2 Selectors"></a>6.2 Selectors</h3><p>�첽 I/O ͨ�� Selector ע����ض� I/O �¼�����Ȥ �D �ɶ������ݵĵ���µ��׽������ӵȵȣ��ڷ����������¼�ʱ��ϵͳ���ᷢ��֪ͨ��</p><p>���� Selectors ֮�󣬾Ϳ��ԶԲ�ͬ��ͨ��������� register() ������register() �ĵ�һ������������� Selector���ڶ��������� OP_ACCEPT��������ָ��������Ҫ���� accept �¼���Ҳ�������µ����ӽ���ʱ���������¼���</p><p>SelectionKey �������ͨ���ڴ� Selector �ϵ����ע�ᡣ��ĳ�� Selector ֪ͨ��ĳ�������¼�ʱ������ͨ���ṩ��Ӧ�ڸ��¼��� SelectionKey �����еġ�SelectionKey ����������ȡ��ͨ����ע�ᡣ</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Selector selector = Selector.open();</span><br><span class="line">SelectionKey key = ssc.register(selector, SelectionKey.OP_ACCEPT);</span><br></pre></td></tr></table></figure><h3 id="6-3-��ѭ��"><a href="#6-3-��ѭ��" class="headerlink" title="6.3 ��ѭ��"></a>6.3 ��ѭ��</h3><p>���ȣ����ǵ��� Selector �� select() ���������������������ֱ��������һ����ע����¼���������һ�����߸�����¼�����ʱ�� select() �������������������¼���������</p><p>�����������ǵ��� Selector �� selectedKeys() �����������ط������¼��� SelectionKey �����һ�� ���� ��</p><p>����ͨ������ SelectionKeys �����δ���ÿ�� SelectionKey �������¼�������ÿһ�� SelectionKey��������ȷ����������ʲô I/O �¼����Լ�����¼�Ӱ����Щ I/O ����</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> num = selector.select();</span><br><span class="line"> </span><br><span class="line">Set selectedKeys = selector.selectedKeys();</span><br><span class="line">Iterator it = selectedKeys.iterator();</span><br><span class="line"> </span><br><span class="line"><span class="keyword">while</span> (it.hasNext()) &#123;</span><br><span class="line">     SelectionKey key = (SelectionKey)it.next();</span><br><span class="line">     <span class="comment">// ... deal with I/O event ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-4-����������"><a href="#6-4-����������" class="headerlink" title="6.4 ����������"></a>6.4 ����������</h3><p>����ִ�е�������ǽ�ע���� ServerSocketChannel�����ҽ�ע�����ǡ����ա��¼���Ϊȷ����һ�㣬���Ƕ� SelectionKey ���� readyOps() ����������鷢����ʲô���͵��¼���</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ((key.readyOps() &amp; SelectionKey.OP_ACCEPT)</span><br><span class="line">     == SelectionKey.OP_ACCEPT) &#123;</span><br><span class="line">     <span class="comment">// Accept the new connection</span></span><br><span class="line">     <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>���Կ϶���˵�� readOps() �����������Ǹ��¼����µ����ӡ�</p><h3 id="6-5-�����µ�����"><a href="#6-5-�����µ�����" class="headerlink" title="6.5 �����µ�����"></a>6.5 �����µ�����</h3><p>��Ϊ����֪������������׽�������һ�����������ڵȴ������Կ��԰�ȫ�ؽ�������Ҳ����˵�����õ��� accept() ������������</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ServerSocketChannel ssc = (ServerSocketChannel)key.channel();</span><br><span class="line">SocketChannel sc = ssc.accept();</span><br></pre></td></tr></table></figure><p>��һ���ǽ������ӵ� SocketChannel ����Ϊ�������ġ��������ڽ���������ӵ�Ŀ����Ϊ�˶�ȡ�����׽��ֵ����ݣ��������ǻ����뽫 SocketChannel ע�ᵽ Selector�ϣ�������ʾ��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sc.configureBlocking( <span class="keyword">false</span> );</span><br><span class="line">SelectionKey newKey = sc.register( selector, SelectionKey.OP_READ );</span><br></pre></td></tr></table></figure><p>ע������ʹ�� register() �� OP_READ �������� SocketChannel ע������ ��ȡ ������ ���� �����ӡ�</p><h3 id="6-6-ɾ���������-SelectionKey"><a href="#6-6-ɾ���������-SelectionKey" class="headerlink" title="6.6 ɾ��������� SelectionKey"></a>6.6 ɾ��������� SelectionKey</h3><p>�ڴ��� SelectionKey ֮�����Ǽ������Է�����ѭ���ˡ��������Ǳ������Ƚ�������� SelectionKey ��ѡ���ļ�������ɾ�����������û��ɾ��������ļ�����ô����Ȼ��������������һ������ļ����֣���ᵼ�����ǳ����ٴδ����������ǵ��õ������� remove() ������ɾ��������� SelectionKey��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">it.remove();</span><br></pre></td></tr></table></figure><p>�������ǿ��Է�����ѭ�������ܴ�һ���׽����д��������(����һ������� I/O �¼�)�ˡ�</p><h3 id="6-7-�����-I-O"><a href="#6-7-�����-I-O" class="headerlink" title="6.7 ����� I/O"></a>6.7 ����� I/O</h3><p>������һ���׽��ֵ����ݵ���ʱ�����ᴥ��һ�� I/O �¼�����ᵼ������ѭ���е��� Selector.select()��������һ�����߶�� I/O �¼�����һ�Σ� SelectionKey �������Ϊ OP_READ �¼���������ʾ��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> ((key.readyOps() &amp; SelectionKey.OP_READ)</span><br><span class="line">     == SelectionKey.OP_READ) &#123;</span><br><span class="line">     <span class="comment">// Read the data</span></span><br><span class="line">     SocketChannel sc = (SocketChannel)key.channel();</span><br><span class="line">     <span class="comment">// ...</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="�ο�����"><a href="#�ο�����" class="headerlink" title="�ο�����"></a>�ο�����</h1><ul><li>Eckel B, ���˶� , ��� , �� . Java ���˼�� [M]. ��е��ҵ������ , 2002.</li><li><a href="https://www.ibm.com/developerworks/cn/education/java/j-nio/j-nio.html" target="_blank" rel="noopener">IBM: NIO ����</a></li><li><a href="https://www.ibm.com/developerworks/cn/java/j-lo-javaio/index.html" target="_blank" rel="noopener"> ������� Java I/O �Ĺ������� </a></li><li><a href="http://blog.csdn.net/shimiso/article/details/24990499" target="_blank" rel="noopener">NIO �봫ͳ IO ������ </a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- GFM-TOC --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#����&quot;&gt;����&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#���̲���&quot;&gt;���̲���&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#�ֽڲ���&quot;&gt;�ֽڲ���&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2018/03/29/programming-basics-master/notes/JVM/"/>
    <id>http://yoursite.com/2018/03/29/programming-basics-master/notes/JVM/</id>
    <published>2018-03-29T14:37:48.170Z</published>
    <updated>2018-02-26T04:13:28.000Z</updated>
    
    <content type="html"><![CDATA[<!-- GFM-TOC --><ul><li><a href="#�ڴ�ģ��">�ڴ�ģ��</a><ul><li><a href="#1-���������">1. ���������</a></li><li><a href="#2-java-�����ջ">2. Java �����ջ</a></li><li><a href="#3-���ط���ջ">3. ���ط���ջ</a></li><li><a href="#4-java-��">4. Java ��</a></li><li><a href="#5-������">5. ������</a></li><li><a href="#6-����ʱ������">6. ����ʱ������</a></li><li><a href="#7-ֱ���ڴ�">7. ֱ���ڴ�</a></li></ul></li><li><a href="#�����ռ�">�����ռ�</a><ul><li><a href="#1-�ж�һ�������Ƿ�ɻ���">1. �ж�һ�������Ƿ�ɻ���</a><ul><li><a href="#11-���ü���">1.1 ���ü���</a></li><li><a href="#12-�ɴ���">1.2 �ɴ���</a></li><li><a href="#13-��������">1.3 ��������</a><ul><li><a href="#131-ǿ����">1.3.1 ǿ����</a></li><li><a href="#132-������">1.3.2 ������</a></li><li><a href="#133-������">1.3.3 ������</a></li><li><a href="#134-������">1.3.4 ������</a></li></ul></li><li><a href="#13-�������Ļ���">1.3 �������Ļ���</a></li><li><a href="#14-finalize">1.4 finalize()</a></li></ul></li><li><a href="#2-�����ռ��㷨">2. �����ռ��㷨</a><ul><li><a href="#21-���---����㷨">2.1 ��� - ����㷨</a></li><li><a href="#22-�����㷨">2.2 �����㷨</a></li><li><a href="#23-���---�����㷨">2.3 ��� - �����㷨</a></li><li><a href="#24-�ִ��ռ��㷨">2.4 �ִ��ռ��㷨</a></li></ul></li><li><a href="#3-�����ռ���">3. �����ռ���</a><ul><li><a href="#31-serial-�ռ���">3.1 Serial �ռ���</a></li><li><a href="#32-parnew-�ռ���">3.2 ParNew �ռ���</a></li><li><a href="#33-parallel-scavenge-�ռ���">3.3 Parallel Scavenge �ռ���</a></li><li><a href="#34-serial-old-�ռ���">3.4 Serial Old �ռ���</a></li><li><a href="#35-parallel-old-�ռ���">3.5 Parallel Old �ռ���</a></li><li><a href="#36-cms-�ռ���">3.6 CMS �ռ���</a></li><li><a href="#37-g1-�ռ���">3.7 G1 �ռ���</a></li><li><a href="#38-���������ռ����ıȽ�">3.8 ���������ռ����ıȽ�</a></li></ul></li><li><a href="#4-�ڴ��������ղ���">4. �ڴ��������ղ���</a><ul><li><a href="#41-������-eden-����">4.1 ������ Eden ����</a></li><li><a href="#42-�����ֱ�ӽ��������">4.2 �����ֱ�ӽ��������</a></li><li><a href="#43-���ڴ��Ķ�����������">4.3 ���ڴ��Ķ�����������</a></li><li><a href="#44-��̬���������ж�">4.4 ��̬���������ж�</a></li><li><a href="#45-�ռ���䵣��">4.5 �ռ���䵣��</a></li></ul></li><li><a href="#46-full-gc-�Ĵ�������">4.6 Full GC �Ĵ�������</a><ul><li><a href="#461-����-systemgc">4.6.1 ���� System.gc()</a></li><li><a href="#462-������ռ䲻��">4.6.2 ������ռ䲻��</a></li><li><a href="#463-�ռ���䵣��ʧ��">4.6.3 �ռ���䵣��ʧ��</a></li><li><a href="#464-jdk-17-����ǰ�����ô��ռ䲻��">4.6.4 JDK 1.7 ����ǰ�����ô��ռ䲻��</a></li><li><a href="#465-concurrent-mode-failure">4.6.5 Concurrent Mode Failure</a></li></ul></li></ul></li><li><a href="#����ػ���">����ػ���</a><ul><li><a href="#1-�����������">1 �����������</a></li><li><a href="#2-���ʼ��ʱ��">2. ���ʼ��ʱ��</a></li><li><a href="#3-����ع���">3. ����ع���</a><ul><li><a href="#31-����">3.1 ����</a></li><li><a href="#32-��֤">3.2 ��֤</a></li><li><a href="#33-׼��">3.3 ׼��</a></li><li><a href="#34-����">3.4 ����</a></li><li><a href="#35-��ʼ��">3.5 ��ʼ��</a></li></ul></li><li><a href="#4-�������">4. �������</a><ul><li><a href="#41-�����������">4.1 �����������</a></li><li><a href="#42-�����������">4.2 �����������</a></li><li><a href="#43-˫��ί��ģ��">4.3 ˫��ί��ģ��</a></li></ul></li></ul></li><li><a href="#jvm-����">JVM ����</a><ul><li><a href="#gc-�Ż�����">GC �Ż�����</a></li><li><a href="#gc-��������">GC ��������</a><!-- GFM-TOC --></li></ul></li></ul><h1 id="�ڴ�g��"><a href="#�ڴ�g��" class="headerlink" title="�ڴ�ģ��"></a>�ڴ�ģ��</h1><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/dc695f48-4189-4fc7-b950-ed25f6c80f82.jpg" alt=""></p><p>ע����ɫ����Ϊ�߳�˽�еģ���ɫ����Ϊ�̹߳���ġ�</p><h2 id="1-���������"><a href="#1-���������" class="headerlink" title="1. ���������"></a>1. ���������</h2><p>��¼����ִ�е�������ֽ���ָ��ĵ�ַ���������ִ�е��� Native ������Ϊ�գ���</p><h2 id="2-Java-�����ջ"><a href="#2-Java-�����ջ" class="headerlink" title="2. Java �����ջ"></a>2. Java �����ջ</h2><p>ÿ�� Java ������ִ�е�ͬʱ�ᴴ��һ��ջ֡���ڴ洢�ֲ�������������ջ����̬���ӡ��������ڵ���Ϣ��ÿһ�������ӵ���ֱ��ִ����ɵĹ��̣��Ͷ�Ӧ��һ��ջ֡�� Java �����ջ����ջ�ͳ�ջ�Ĺ��̡�</p><p>����������׳������쳣��</p><ol><li>���߳������ջ��ȳ������ֵ�����׳� StackOverflowError �쳣��</li><li>ջ���ж�̬��չʱ����޷����뵼�㹻�ڴ棬���׳� OutOfMemoryError �쳣��</li></ol><h2 id="3-���ط���ջ"><a href="#3-���ط���ջ" class="headerlink" title="3. ���ط���ջ"></a>3. ���ط���ջ</h2><p>�� Java �����ջ���ƣ�����֮�������ֻ�����Ǳ��ط���ջΪ���ط�������</p><h2 id="4-Java-��"><a href="#4-Java-��" class="headerlink" title="4. Java ��"></a>4. Java ��</h2><p>���ж���ʵ��������������ڴ档</p><p>��������������ռ����������Ҫ����”GC �� “���������ռ����������ǲ��÷ִ��ռ��㷨��Java �ѻ����Էֳɣ���������������������������Էֳ� Eden �ռ䡢From Survivor �ռ䡢To Survivor �ռ�ȣ���</p><p>����Ҫ�����ڴ棬����ͨ�� -Xmx �� -Xms �����ƶ�̬��չ�ڴ��С�������̬��չʧ�ܻ��׳� OutOfMemoryError �쳣��</p><h2 id="5-������"><a href="#5-������" class="headerlink" title="5. ������"></a>5. ������</h2><p>���ڴ���ѱ���������ص�����Ϣ����������̬��������ʱ�����������Ĵ�������ݡ�</p><p>�� Java ��һ������Ҫ�������ڴ棬���ҿ��Զ�̬��չ����̬��չʧ��һ�����׳� OutOfMemoryError �쳣��</p><p>�������������������յ���ҪĿ���ǶԳ����صĻ��պͶ����ж�أ�����һ��Ƚ���ʵ�֣�HotSpot ����������������ô��������������ա�</p><h2 id="6-����ʱ������"><a href="#6-����ʱ������" class="headerlink" title="6. ����ʱ������"></a>6. ����ʱ������</h2><p>����ʱ�������Ƿ�������һ���֡�</p><p>����غ�Class �ļ��еĳ����أ����ڴ�ű��������ɵĸ����������ͷ������ã��ͻᱻ�ŵ��������</p><p>�������ڼ�Ҳ�����ù� String ��� intern() �������µĳ������������</p><h2 id="7-ֱ���ڴ�"><a href="#7-ֱ���ڴ�" class="headerlink" title="7. ֱ���ڴ�"></a>7. ֱ���ڴ�</h2><p>�� JDK 1.4 ���¼����� NIO �࣬������һ�ֻ���ͨ����Channel���뻺������Buffer���� I/O ��ʽ��������ʹ�� Native ������ֱ�ӷ�������ڴ棬Ȼ��ͨ��һ���洢�� Java ����� DirectByteBuffer ������Ϊ����ڴ�����ý��в�������������һЩ����������������ܣ���Ϊ�������� Java �Ѻ� Native �������ظ������ݡ�</p><h1 id="�����ռ�"><a href="#�����ռ�" class="headerlink" title="�����ռ�"></a>�����ռ�</h1><p>����������������ջ�ͱ��ط���ջ���������������߳�˽�еģ�ֻ�������̵߳����������ڣ��߳̽���֮��Ҳ����ʧ����˲���Ҫ����������������������ա�</p><p>����������Ҫ����� Java �Ѻͷ��������С�</p><h2 id="1-�ж�һ�������Ƿ�ɻ���"><a href="#1-�ж�һ�������Ƿ�ɻ���" class="headerlink" title="1. �ж�һ�������Ƿ�ɻ���"></a>1. �ж�һ�������Ƿ�ɻ���</h2><h3 id="1-1-���u���"><a href="#1-1-���u���" class="headerlink" title="1.1 ���ü���"></a>1.1 ���ü���</h3><p>���������һ�����ü�����������������һ������ʱ�������� 1������ʧЧʱ�������� 1��</p><p>���ü���Ϊ 0 �Ķ���ɱ����ա�</p><p>������������ѭ���������⣬��ʱ���ü�������Զ��Ϊ 0������ GC �ռ����޷����ա�</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">objA.instance = objB;</span><br><span class="line">objB.instance = objA;</span><br></pre></td></tr></table></figure><h3 id="1-2-�ɴ���"><a href="#1-2-�ɴ���" class="headerlink" title="1.2 �ɴ���"></a>1.2 �ɴ���</h3><p>ͨ�� GC Roots ��Ϊ��ʼ������������ܹ����ﵽ�Ķ����Ƕ��ǿ��õģ����ɴ�Ķ���ɱ����ա�</p><p>GC Roots һ������������ݣ�</p><ol><li>�����ջ�����õĶ���</li><li>���������ྲ̬�������õĶ���</li><li>�������еĳ������õĶ���</li><li>���ط���ջ�����õĶ���</li></ol><h3 id="1-3-��������"><a href="#1-3-��������" class="headerlink" title="1.3 ��������"></a>1.3 ��������</h3><p>������ͨ�����ü����㷨�ж϶������������������ͨ���ɴ��Է����㷨�ж϶�����������Ƿ�ɴ�ж������Ƿ���롰���á��йء�</p><h4 id="1-3-1-o����"><a href="#1-3-1-o����" class="headerlink" title="1.3.1 ǿ����"></a>1.3.1 ǿ����</h4><p>ֻҪǿ���ô��ڣ�������������Զ������յ������õĶ���</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Object obj = <span class="keyword">new</span> Object();</span><br></pre></td></tr></table></figure><h4 id="1-3-2-������"><a href="#1-3-2-������" class="headerlink" title="1.3.2 ������"></a>1.3.2 ������</h4><p>�Ǳ������ã��ڴ����֮ǰ���л��ա�</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Object obj = <span class="keyword">new</span> Object();</span><br><span class="line">SoftReference&lt;Object&gt; sf = <span class="keyword">new</span> SoftReference&lt;Object&gt;(obj);</span><br><span class="line">obj = <span class="keyword">null</span>;</span><br><span class="line">sf.get();</span><br></pre></td></tr></table></figure><p>sf �Ƕ� obj ��һ�������ã�ͨ�� sf.get() ��������ȡ��������󣬵�Ȼ����������󱻱��Ϊ��Ҫ���յĶ���ʱ���򷵻� null��</p><p>��������Ҫ�û�ʵ�����ƻ���Ĺ��ܣ����ڴ��㹻�������ֱ��ͨ��������ȡֵ������ӷ�æ����ʵ��Դ��ѯ���ݣ������ٶȣ����ڴ治��ʱ���Զ�ɾ���ⲿ�ֻ������ݣ�����������Դ��ѯ��Щ���ݡ�</p><h4 id="1-3-3-������"><a href="#1-3-3-������" class="headerlink" title="1.3.3 ������"></a>1.3.3 ������</h4><p>ֻ�����浽��һ�������ռ�����֮ǰ���������ռ�������ʱ�����۵�ǰ�ڴ��Ƿ��㹻�����ᱻ���ա�</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Object obj = <span class="keyword">new</span> Object();</span><br><span class="line">WeakReference&lt;Object&gt; wf = <span class="keyword">new</span> WeakReference&lt;Object&gt;(obj);</span><br><span class="line">obj = <span class="keyword">null</span>;</span><br><span class="line">wf.get();</span><br><span class="line">wf.isEnQueued();</span><br></pre></td></tr></table></figure><h4 id="1-3-4-������"><a href="#1-3-4-������" class="headerlink" title="1.3.4 ������"></a>1.3.4 ������</h4><p>�ֳ�Ϊ�������û��߻�Ӱ���ã�һ�������Ƿ��������õĴ��ڣ���ȫ�����������ʱ�乹��Ӱ�죬Ҳ�޷�ͨ��������ȡ��һ������ʵ����Ϊһ���������������ù�����ΨһĿ�ľ���������������ռ�������ʱ�յ�һ��ϵͳ֪ͨ��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Object obj = <span class="keyword">new</span> Object();</span><br><span class="line">PhantomReference&lt;Object&gt; pf = <span class="keyword">new</span> PhantomReference&lt;Object&gt;(obj);</span><br><span class="line">obj=<span class="keyword">null</span>;</span><br><span class="line">pf.get();</span><br><span class="line">pf.isEnQueued();</span><br></pre></td></tr></table></figure><h3 id="1-3-�������L���"><a href="#1-3-�������L���" class="headerlink" title="1.3 �������Ļ���"></a>1.3 �������Ļ���</h3><p>�ڷ�������Ҫ�ǶԳ����صĻ��պͶ����ж�ء�</p><p>�����صĻ��պͶ��ж���������ơ�</p><p>���ж�������ܶ࣬��Ҫ����������������������������Ҳ��һ���ᱻж�أ�</p><ol><li>�������е�ʵ�����Ѿ������գ�Ҳ���� Java ���в����ڸ�����κ�ʵ����</li><li>���ظ���� ClassLoader �Ѿ������ա�</li><li>�����Ӧ�� java.lang.Class ����û�����κεط������ã�Ҳ���޷����κεط�ͨ��������ʸ��෽����</li></ol><p>����ͨ�� -Xnoclassgc �����������Ƿ�������ж�ء�</p><p>�ڴ���ʹ�÷��䡢��̬����CGLib �� ByteCode ��ܡ���̬���� JSP �Լ� OSGo ����Ƶ���Զ��� ClassLoader �ĳ�������Ҫ������߱���ж�ع��ܣ��Ա�֤��������ڴ������</p><h3 id="1-4-finalize"><a href="#1-4-finalize" class="headerlink" title="1.4 finalize()"></a>1.4 finalize()</h3><p>��һ������ɱ�����ʱ������ö����б�Ҫִ�� finalize() ��������ô���п��ܿ���ͨ���ڸ÷������ö������±����ã��Ӷ�ʵ���Ծȡ�</p><p>finalize() ���� C++ ���鹹�������������ر��ⲿ��Դ�ȹ��������� try-finally �ȷ�ʽ�������ĸ��ã����Ҹ÷������д��۸߰�����ȷ���Դ��޷���֤��������ĵ���˳�������ò�Ҫʹ�á�</p><h2 id="2-�����ռ��㷨"><a href="#2-�����ռ��㷨" class="headerlink" title="2. �����ռ��㷨"></a>2. �����ռ��㷨</h2><h3 id="2-1-���-����㷨"><a href="#2-1-���-����㷨" class="headerlink" title="2.1 ��� - ����㷨"></a>2.1 ��� - ����㷨</h3><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/a4248c4b-6c1d-4fb8-a557-86da92d3a294.jpg" alt=""></p><p>����Ҫ���յĶ�����б�ǣ�Ȼ�������</p><p>���㣺</p><ol><li>��Ǻ��������Ч�ʶ�����</li><li>�����������Ƭ</li></ol><p>֮����㷨���ǻ��ڸ��㷨���иĽ���</p><h3 id="2-2-�����㷨"><a href="#2-2-�����㷨" class="headerlink" title="2.2 �����㷨"></a>2.2 �����㷨</h3><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/e6b733ad-606d-4028-b3e8-83c3a73a3797.jpg" alt=""></p><p>���ڴ滮��Ϊ��С��ȵ����飬ÿ��ֻʹ������һ�飬����һ���ڴ������˾ͽ������Ķ����Ƶ���һ�����棬Ȼ���ٰ�ʹ�ù����ڴ�ռ����һ������</p><p>��Ҫ������ֻʹ�����ڴ��һ�롣</p><p>���ڵ���ҵ����������������ռ��㷨�����������������ǲ����ǽ��ڴ滮��Ϊ��С��ȵ����飬���Ƿ�Ϊһ��ϴ�� Eden �ռ�������С�� Survior �ռ䣬ÿ��ʹ�� Eden �ռ������һ�� Survivor���ڻ���ʱ���� Eden �� Survivor �л�����ŵĶ���һ���Ը��Ƶ���һ�� Survivor �ռ��ϣ�������� Eden �� Survivor��HotSpot ������� Eden �� Survivor �Ĵ�С����Ĭ��Ϊ 8:1����֤���ڴ�������ʴﵽ 90 %�����ÿ�λ����ж��� 10% �Ķ������ôһ�� Survivor �ռ�Ͳ������ˣ���Ҫ��������������з��䵣����Ҳ���ǽ���������Ŀռ䡣</p><h3 id="2-3-���-�����㷨"><a href="#2-3-���-�����㷨" class="headerlink" title="2.3 ��� - �����㷨"></a>2.3 ��� - �����㷨</h3><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/902b83ab-8054-4bd2-898f-9a4a0fe52830.jpg" alt=""></p><p>�����д��Ķ�����һ���ƶ���Ȼ��ֱ�������˱߽�������ڴ档</p><h3 id="2-4-�ִ��ռ��㷨"><a href="#2-4-�ִ��ռ��㷨" class="headerlink" title="2.4 �ִ��ռ��㷨"></a>2.4 �ִ��ռ��㷨</h3><p>���ڵ���ҵ��������÷ִ��ռ��㷨����ʹ����ǰ����ܵļ����ռ��㷨�����ݶ��������ڽ��ڴ滮��Ϊ���飬��ͬ������ʵ����ռ��㷨��</p><p>һ�㽫 Java �ѷ�Ϊ���������������</p><ol><li>������ʹ�ã������㷨</li><li>�����ʹ�ã���� - ���� ���� ��� - ���� �㷨��</li></ol><h2 id="3-�����ռ���"><a href="#3-�����ռ���" class="headerlink" title="3. �����ռ���"></a>3. �����ռ���</h2><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/c625baa0-dde6-449e-93df-c3a67f2f430f.jpg" alt=""></p><p>������ HotSpot ������е� 7 �������ռ��������߱�ʾ�����ռ����������ʹ�á�</p><h3 id="3-1-Serial-�ռ���"><a href="#3-1-Serial-�ռ���" class="headerlink" title="3.1 Serial �ռ���"></a>3.1 Serial �ռ���</h3><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/22fda4ae-4dd5-489d-ab10-9ebfdad22ae0.jpg" alt=""></p><p>���ǵ��̵߳��ռ�����������ζ��ֻ��ʹ��һ���߳̽��������ռ�����������Ҫ�������ڽ��������ռ�ʱ��������ͣ�������������̣߳�������ɹ����ĵȴ�ʱ�䡣</p><p>�����ŵ��Ǽ򵥸�Ч�����ڵ��� CPU ������˵������û���߳̽����Ŀ��������ӵ����ߵĵ��߳��ռ�Ч�ʡ�</p><p>�� Client Ӧ�ó����У�����������������ڴ�һ����˵����ܴ󣬸��ռ����ռ���ʮ������һ�����׵�������ͣ��ʱ����Կ�����һ�ٶ�������ڣ�ֻҪ����̫Ƶ�������ͣ���ǿ��Խ��ܵġ�</p><h3 id="3-2-ParNew-�ռ���"><a href="#3-2-ParNew-�ռ���" class="headerlink" title="3.2 ParNew �ռ���"></a>3.2 ParNew �ռ���</h3><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/81538cd5-1bcf-4e31-86e5-e198df1e013b.jpg" alt=""></p><p>���� Serial �ռ����Ķ��̰߳汾��</p><p>�� Server ģʽ�µ��������ѡ�������ռ�������������ԭ���⣬��Ҫ����Ϊ���� Serial �ռ�����ֻ�������� CMS �ռ�����Ϲ�����</p><p>Ĭ�Ͽ�ʼ���߳������� CPU ������ͬ������ʹ�� -XX:ParallelGCThreads �����������߳�����</p><h3 id="3-3-Parallel-Scavenge-�ռ���"><a href="#3-3-Parallel-Scavenge-�ռ���" class="headerlink" title="3.3 Parallel Scavenge �ռ���"></a>3.3 Parallel Scavenge �ռ���</h3><p>�ǲ��еĶ��߳��ռ�����</p><p>�����ռ�����ע���Ǿ��������������ռ�ʱ�û��̵߳�ͣ��ʱ�䣬������Ŀ���Ǵﵽһ���ɿ��Ƶ���������������Ϊ�����������ȡ��ռ����������������ָ CPU ���������û������ʱ��ռ��ʱ��ı�ֵ��</p><p>ͣ��ʱ��Խ�̾�Խ�ʺ���Ҫ���û������ĳ������õ���Ӧ�ٶ��������û����顣��������������Ը�Ч�ʵ����� CPU ʱ�䣬������ɳ��������������Ҫ�ʺ��ں�̨���������Ҫ̫�ཻ��������</p><p>�ṩ�������������ھ�ȷ�������������ֱ��ǿ�����������ռ�ͣ��ʱ�� -XX:MaxGCPauseMillis �����Լ�ֱ��������������С�� -XX:GCTimeRatio ������ֵΪ���� 0 ��С�� 100 ��������������ͣ��ʱ�������������������������ռ�����ȡ�ģ��������ռ��С���������ձ��Ƶ���������������½���</p><p>���ṩ��һ������ -XX:+UseAdaptiveSizePolicy������һ�����ز������򿪲����󣬾Ͳ���Ҫ�ֹ�ָ���������Ĵ�С��-Xmn����Eden �� Survivor ���ı�����-XX:SurvivorRatio��������������������䣨-XX:PretenureSizeThreshold����ϸ�ڲ����ˣ����������ݵ�ǰϵͳ����������ռ����ܼ����Ϣ����̬������Щ�������ṩ����ʵ�ͣ��ʱ��������������������ַ�ʽ��Ϊ GC ����Ӧ�ĵ��ڲ��ԣ�GC Ergonomics��������Ӧ���ڲ���Ҳ������ ParNew �ռ�����һ����Ҫ����</p><h3 id="3-4-Serial-Old-�ռ���"><a href="#3-4-Serial-Old-�ռ���" class="headerlink" title="3.4 Serial Old �ռ���"></a>3.4 Serial Old �ռ���</h3><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/08f32fd3-f736-4a67-81ca-295b2a7972f2.jpg" alt=""></p><p>Serial Old �� Serial �ռ�����������汾��Ҳ�Ǹ� Client ģʽ�µ������ʹ�á�������� Server ģʽ�£�����������;��</p><ol><li>�� JDK 1.5 �Լ�֮ǰ�汾��Parallel Old ������ǰ������ Parallel Scavenge �ռ�������ʹ�á�</li><li>��Ϊ CMS �ռ����ĺ�Ԥ�����ڲ����ռ����� Concurrent Mode Failure ʱʹ�á�</li></ol><h3 id="3-5-Parallel-Old-�ռ���"><a href="#3-5-Parallel-Old-�ռ���" class="headerlink" title="3.5 Parallel Old �ռ���"></a>3.5 Parallel Old �ռ���</h3><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/278fe431-af88-4a95-a895-9c3b80117de3.jpg" alt=""></p><p>�� Parallel Scavenge �ռ�����������汾��</p><p>��ע���������Լ� CPU ��Դ��еĳ��ϣ����������ȿ��� Parallel Scavenge �� Parallel Old �ռ�����</p><h3 id="3-6-CMS-�ռ���"><a href="#3-6-CMS-�ռ���" class="headerlink" title="3.6 CMS �ռ���"></a>3.6 CMS �ռ���</h3><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/62e77997-6957-4b68-8d12-bfd609bb2c68.jpg" alt=""></p><p>CMS��Concurrent Mark Sweep������ Mark Sweep ����֪�����ǻ��� ��� - ��� �㷨ʵ�ֵġ�</p><p>�ص㣺�����ռ�����ͣ�١�</p><p>��Ϊ�����ĸ����̣�</p><ol><li>��ʼ��ǣ�����ֻ�Ǳ��һ�� GC Roots ��ֱ�ӹ������Ķ����ٶȺܿ죬��Ҫͣ�١�</li><li>������ǣ����� GC Roots Tracing �Ĺ��̣������������չ����к�ʱ�������Ҫͣ�١�</li><li>���±�ǣ�Ϊ��������������ڼ����û�����������������±�ǲ����䶯����һ���ֶ���ı�Ǽ�¼����Ҫͣ�١�</li><li>�������������Ҫͣ�١�</li></ol><p>�����������к�ʱ��Ĳ�����ǺͲ�����������У��ռ����̶߳��������û��߳�һ����������Ҫ����ͣ�١�</p><p>��������ȱ�㣺</p><ol><li><p>�� CPU ��Դ��С�CMS Ĭ����Ļ����߳����� (CPU ���� + 3) / 4���� CPU ���� 4 ��ʱ��CMS ���û������Ӱ��Ϳ��ܱ�úܴ�������� CPU ���ؾͱȽϴ󣬻�Ҫ�ֳ�һ�����������ȥִ���ռ����̣߳��Ϳ��ܵ����û������ִ���ٶȺ�Ȼ������ 50%����ʵҲ�����޷����ܡ����ҵ�ͣ��ʱ����������������Ϊ���۵ģ����� CPU �����ʱ�͡�</p></li><li><p>�޷����������������ڲ�������׶��û��̻߳��������ţ��������������Ȼ�ͻ������µ��������ϲ�������һ�������������ڱ�ǹ���֮��CMS �޷��ڵ����ռ��д�������ǣ�ֻ������һ�� GC ʱ���������һ���������ͱ���Ϊ��������������Ҳ�������������ռ��׶��û��̻߳���Ҫ���У���Ҳ�ͻ���ҪԤ�����㹻���ڴ�ռ���û��߳�ʹ�ã�����������������ռ��������ȵ������������ȫ���������ٽ����ռ�����ҪԤ��һ���ֿռ��ṩ�����ռ�ʱ�ĳ�������ʹ�á�����ʹ�� -XX:CMSInitiatingOccupancyFraction ��ֵ���ı䴥���ռ����������ڴ�ռ�ðٷֱȣ�JDK 1.5 Ĭ�������¸�ֵΪ 68��Ҳ���ǵ������ʹ���� 68% �Ŀռ�֮��ᴥ���ռ��������������ֵ���õ�̫�ߣ����¸��������޷����棬��ô�ͻ���� Concurrent Mode Failure����ʱ����������Ԥ������ʱ���� Serial Old �ռ��������½���������������ռ���</p></li><li><p>��� - ����㷨���µĿռ���Ƭ����������������ܴ��鷳����������������ռ�ʣ�࣬���޷��ҵ��㹻�������ռ������䵱ǰ���󣬲��ò���ǰ����һ�� Full GC��</p></li></ol><h3 id="3-7-G1-�ռ���"><a href="#3-7-G1-�ռ���" class="headerlink" title="3.7 G1 �ռ���"></a>3.7 G1 �ռ���</h3><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/f99ee771-c56f-47fb-9148-c0036695b5fe.jpg" alt=""></p><p>G1��Garbage-First���ռ����ǵ����ռ���������չ��ǰ�صĳɹ�֮һ������һ����������Ӧ�õ������ռ�����HotSpot �����ŶӸ�������ʹ���ǣ��ڱȽϳ��ڵģ�δ�������滻�� JDK 1.5 �з����� CMS �ռ�����</p><p>�߱������ص㣺</p><ul><li>�����벢�����ܳ�����ö� CPU �����µ�Ӳ�����ƣ�ʹ�ö�� CPU ������ͣ��ʱ�䣻</li><li>�ִ��ռ����ִ�������Ȼ���Ա�����Ȼ������Ҫ�����ռ�����Ͼ��ܶ����������� GC �ѣ������ܹ����ò�ͬ��ʽȥ�����´����Ķ�����Ѵ��һ��ʱ�䡢������� GC �ľɶ�������ȡ���õ��ռ�Ч����</li><li>�ռ����ϣ����������ǻ��ڡ���� - �����㷨ʵ�ֵ��ռ������Ӿֲ������� Region ֮�䣩�������ǻ��ڡ����ơ��㷨ʵ�ֵģ�����ζ�������ڼ䲻������ڴ�ռ���Ƭ��</li><li>��Ԥ���ͣ�٣���������� CMS ��һ�����ƣ�����ͣ��ʱ���� G1 �� CMS ��ͬ�Ĺ�ע�㣬�� G1 ���˽���ͣ���⣬���ܽ�����Ԥ���ͣ��ʱ��ģ�ͣ�����ʹ������ȷָ����һ������Ϊ M �����ʱ��Ƭ���ڣ������� GC �ϵ�ʱ�䲻�ó��� N ���룬�⼸���Ѿ���ʵʱ Java��RTSJ���������ռ����������ˡ�</li></ul><p>�� G1 ֮ǰ�������ռ��������ռ��ķ�Χ���������������������������� G1 ������������Java �ѵ��ڴ沼���������ռ����кܴ����𣬽����� Java �ѻ���Ϊ�����С��ȵĶ�������Region������Ȼ��������������������ĸ��������������������������������ˣ�������һ���� Region������Ҫ�������ļ��ϡ�</p><p>֮�����ܽ�����Ԥ���ͣ��ʱ��ģ�ͣ�����Ϊ�������мƻ��ر��������� Java ���н���ȫ����������ռ��������ٸ��� Region ����������ѻ��ļ�ֵ��С����������õĿռ��С�Լ���������ʱ��ľ���ֵ�����ں�̨ά��һ�������б�ÿ�θ���������ռ�ʱ�䣬���Ȼ��ռ�ֵ���� Region����Ҳ���� Garbage-First ���Ƶ����ɣ�������ʹ�� Region �����ڴ�ռ��Լ������ȼ���������շ�ʽ����֤���������޵�ʱ���ڿ��Ի�ȡ�����ܸߵ��ռ�Ч�ʡ�</p><p>Region �������ǹ����ģ�һ�����������ĳ�� Region �У����������� Java ������Ķ��������ù�ϵ�������ɴ��Է���ȷ�������Ƿ����ʱ����Ҫɨ������ Java �Ѳ��ܱ�֤׼ȷ�ԣ�����Ȼ�Ƕ� GC Ч�ʵļ����˺���Ϊ�˱���ȫ��ɨ��ķ�����ÿ�� Region ��ά����һ����֮��Ӧ�� Remembered Set����������ֳ����ڶ� Reference ���͵����ݽ���д����ʱ�������һ�� Write Barrier ��ʱ�ж�д��������� Reference ���õĶ����Ƿ��ڲ�ͬ�� Region ֮�У�����ǣ���ͨ�� CardTable �����������Ϣ��¼�������ö�������� Region �� Remembered Set ֮�С��������ڴ����ʱ���� GC ���ڵ��ö�ٷ�Χ�м��� Remembered Set ���ɱ�֤����ȫ��ɨ��Ҳ��������©��</p><p>���������ά�� Remembered Set �Ĳ�����G1 �ռ������������¿ɻ���Ϊ���¼������裺</p><ol><li>��ʼ���</li><li>�������</li><li>���ձ�ǣ�Ϊ�������ڲ�������ڼ����û�����������������±�ǲ����䶯����һ���ֱ�Ǽ�¼������������ʱ�����仯��¼���̵߳� Remembered Set Logs ���棬���ձ�ǽ׶���Ҫ�� Remembered Set Logs �����ݺϲ��� Remembered Set �С���׶���Ҫͣ���̣߳����ǿɲ���ִ�С�</li><li>ɸѡ���գ����ȶԸ��� Region �еĻ��ռ�ֵ�ͳɱ��������򣬸����û��������� GC ͣ����ʱ�����ƶ����ռƻ����˽׶���ʵҲ�����������û�����һ�𲢷�ִ�У�������Ϊֻ����һ���� Region��ʱ�����û��ɿ��Ƶģ�����ͣ���û��߳̽����������ռ�Ч�ʡ�</li></ol><h3 id="3-8-���������ռ����iL�"><a href="#3-8-���������ռ����iL�" class="headerlink" title="3.8 ���������ռ����ıȽ�"></a>3.8 ���������ռ����ıȽ�</h3><table><thead><tr><th>�ռ���</th><th>���С����� or ����</th><th>������ / �����</th><th>�㷨</th><th>Ŀ��</th><th>���ó���</th></tr></thead><tbody><tr><td><strong>Serial</strong></td><td>����</td><td>������</td><td>�����㷨</td><td>��Ӧ�ٶ�����</td><td>�� CPU �����µ� Client ģʽ</td></tr><tr><td><strong>Serial Old</strong></td><td>����</td><td>�����</td><td>��� - ����</td><td>��Ӧ�ٶ�����</td><td>�� CPU �����µ� Client ģʽ��CMS �ĺ�Ԥ��</td></tr><tr><td><strong>ParNew</strong></td><td>����</td><td>������</td><td>�����㷨</td><td>��Ӧ�ٶ�����</td><td>�� CPU ����ʱ�� Server ģʽ���� CMS ���</td></tr><tr><td><strong>Parallel Scavenge</strong></td><td>����</td><td>������</td><td>�����㷨</td><td>����������</td><td>�ں�̨���������Ҫ̫�ཻ��������</td></tr><tr><td><strong>Parallel Old</strong></td><td>����</td><td>�����</td><td>��� - ����</td><td>����������</td><td>�ں�̨���������Ҫ̫�ཻ��������</td></tr><tr><td><strong>CMS</strong></td><td>����</td><td>�����</td><td>��� - ���</td><td>��Ӧ�ٶ�����</td><td>�����ڻ�����վ�� B/S ϵͳ������ϵ� Java Ӧ��</td></tr><tr><td><strong>G1</strong></td><td>����</td><td>both</td><td>��� - ���� + �����㷨</td><td>��Ӧ�ٶ�����</td><td>��������Ӧ�ã������滻 CMS</td></tr></tbody></table><h2 id="4-�ڴ��������ղ���"><a href="#4-�ڴ��������ղ���" class="headerlink" title="4. �ڴ��������ղ���"></a>4. �ڴ��������ղ���</h2><h3 id="4-1-������-Eden-����"><a href="#4-1-������-Eden-����" class="headerlink" title="4.1 ������ Eden ����"></a>4.1 ������ Eden ����</h3><p>���������£������������� Eden �����䣬�� Eden ���ռ䲻��ʱ������ Minor GC��</p><h3 id="4-2-�����ֱ�ӽ��������"><a href="#4-2-�����ֱ�ӽ��������" class="headerlink" title="4.2 �����ֱ�ӽ��������"></a>4.2 �����ֱ�ӽ��������</h3><p>�ṩ -XX:PretenureSizeThreshold ���������ڴ�ֵ�Ķ���ֱ������������䣬������ Eden ���� Survivor ��֮��Ĵ����ڴ渴�ƣ�</p><h3 id="4-3-���ڴ��K�����������"><a href="#4-3-���ڴ��K�����������" class="headerlink" title="4.3 ���ڴ��Ķ�����������"></a>4.3 ���ڴ��Ķ�����������</h3><p>JVM Ϊ��������������������� Minor GC ��Ȼ����ұ� Survivor �����ɵģ��ƶ��� Survivor ��������� 1��ÿ����һ�� Minor GC ��������������� 1�����ӵ�һ���������ƶ�����������Ĭ�� 15 �꣬ͨ�� -XX:MaxTenuringThreshold ���ã���</p><h3 id="4-4-��̬���������ж�"><a href="#4-4-��̬���������ж�" class="headerlink" title="4.4 ��̬���������ж�"></a>4.4 ��̬���������ж�</h3><p>�� Survivor ����ͬ�������ж����С�ܺʹ��� Survivor �ռ�һ�룬��������ڵ��ڸ�����Ķ������ֱ�ӽ����������</p><h3 id="4-5-�ռ���䵣��"><a href="#4-5-�ռ���䵣��" class="headerlink" title="4.5 �ռ���䵣��"></a>4.5 �ռ���䵣��</h3><p>�ڷ��� Minor GC ֮ǰ��JVM �ȼ������������������ռ��Ƿ�������������ж����ܿռ䣬�����Ļ� Minor GC ȷ���ǰ�ȫ�ģ���������������������������ռ��Ƿ�������ν���������������ƽ����С�����ڵĻ����� Minor GC��С�ڵĻ����� Full GC��</p><h2 id="4-6-Full-GC-�J�������"><a href="#4-6-Full-GC-�J�������" class="headerlink" title="4.6 Full GC �Ĵ�������"></a>4.6 Full GC �Ĵ�������</h2><p>���� Minor GC���䴥�������ǳ��򵥣��� Eden ���ռ���ʱ���ͽ�����һ�� Minor GC���� Full GC ����Ը��ӣ�������������</p><h3 id="4-6-1-����-System-gc"><a href="#4-6-1-����-System-gc" class="headerlink" title="4.6.1 ���� System.gc()"></a>4.6.1 ���� System.gc()</h3><p>�˷����ĵ����ǽ��� JVM ���� Full GC����Ȼֻ�ǽ������һ�������ܶ���������ᴥ�� Full GC���Ӷ����� Full GC ��Ƶ�ʣ�Ҳ�������˼�Ъ��ͣ�ٵĴ��������ǿ�ҽ����ܲ�ʹ�ô˷����Ͳ�Ҫʹ�ã���������Լ�ȥ���������ڴ棬��ͨ�� -XX:+ DisableExplicitGC ����ֹ RMI ���� System.gc()��</p><h3 id="4-6-2-������ռ䲻��"><a href="#4-6-2-������ռ䲻��" class="headerlink" title="4.6.2 ������ռ䲻��"></a>4.6.2 ������ռ䲻��</h3><p>������ռ䲻��ĳ�������Ϊǰ�������Ĵ����ֱ�ӽ�������������ڴ��Ķ������������ȣ���ִ�� Full GC ��ռ���Ȼ���㣬���׳����´��� Java.lang.OutOfMemoryError: Java heap space Ϊ������������״������� Full GC������ʱӦ���������ö����� Minor GC �׶α����ա��ö���������������һ��ʱ�估��Ҫ��������Ķ������顣</p><h3 id="4-6-3-�ռ���䵣��ʧ��"><a href="#4-6-3-�ռ���䵣��ʧ��" class="headerlink" title="4.6.3 �ռ���䵣��ʧ��"></a>4.6.3 �ռ���䵣��ʧ��</h3><p>ʹ�ø����㷨�� Minor GC ��Ҫ��������ڴ�ռ������������������ HandlePromotionFailure ����ʧ�ܣ���ᴥ�� Full GC��</p><h3 id="4-6-4-JDK-1-7-����j�����o��ռ䲻��"><a href="#4-6-4-JDK-1-7-����j�����o��ռ䲻��" class="headerlink" title="4.6.4 JDK 1.7 ����ǰ�����ô��ռ䲻��"></a>4.6.4 JDK 1.7 ����ǰ�����ô��ռ䲻��</h3><p>�� JDK 1.7 ����ǰ��HotSpot ������еķ������������ô�ʵ�ֵģ����ô��д�ŵ�ΪһЩ class ����Ϣ����������̬���������ݣ���ϵͳ��Ҫ���ص��ࡢ�������͵��õķ����϶�ʱ��Permanet Generation ���ܻᱻռ������δ����Ϊ���� CMS GC �������Ҳ��ִ�� Full GC��������� Full GC ��Ȼ���ղ��ˣ���ô JVM ���׳����´�����Ϣ��java.lang.OutOfMemoryError: PermGen space Ϊ���� PermGen ռ����� Full GC ���󣬿ɲ��õķ���Ϊ���� PermGen �ռ��תΪʹ�� CMS GC��</p><p>�� JDK 1.8 ����Ԫ�ռ��滻�����ô���Ϊ��������ʵ�֣�Ԫ�ռ��Ǳ����ڴ棬��˼�����һ�� Full GC �����Ŀ����ԡ�</p><h3 id="4-6-5-Concurrent-Mode-Failure"><a href="#4-6-5-Concurrent-Mode-Failure" class="headerlink" title="4.6.5 Concurrent Mode Failure"></a>4.6.5 Concurrent Mode Failure</h3><p>ִ�� CMS GC �Ĺ�����ͬʱ�ж���Ҫ���������������ʱ������ռ䲻�㣨��ʱ�򡰿ռ䲻�㡱�� CMS GC ʱ��ǰ�ĸ����������ർ����ʱ�ԵĿռ䲻�㴥�� Full GC������ᱨ Concurrent Mode Failure ���󣬲����� Full GC��</p><h1 id="����ػ���"><a href="#����ػ���" class="headerlink" title="����ػ���"></a>����ػ���</h1><p>�����������ڼ䶯̬���صġ�</p><h2 id="1-�����������"><a href="#1-�����������" class="headerlink" title="1 �����������"></a>1 �����������</h2><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/32b8374a-e822-4720-af0b-c0f485095ea2.jpg" alt=""></p><p>�������� 7 ���׶Σ�</p><ul><li><strong>���أ�Loading��</strong></li><li><strong>��֤��Verification��</strong></li><li><strong>׼����Preparation��</strong></li><li><strong>������Resolution��</strong></li><li><strong>��ʼ����Initialization��</strong></li><li>ʹ�ã�Using��</li><li>ж�أ�Unloading��</li></ul><p>���н���������ĳЩ����¿����ڳ�ʼ���׶�֮���ٿ�ʼ������Ϊ��֧�� Java �Ķ�̬�󶨡�</p><h2 id="2-���ʼ��ʱ��"><a href="#2-���ʼ��ʱ��" class="headerlink" title="2. ���ʼ��ʱ��"></a>2. ���ʼ��ʱ��</h2><p>������淶�в�û��ǿ��Լ����ʱ���м��أ����ǹ淶�ϸ�涨������ֻ����������������������г�ʼ����( ���ء���֤��׼���������ŷ��� )</p><ol><li><p>���� new��getstatic��putstatic��invokestatic �������ֽ���ָ��ʱ�������û�н��й���ʼ����������ȴ������ʼ��������������� 4 ��ָ��ĳ����ǣ�ʹ�� new �ؼ���ʵ���������ʱ�򣻶�ȡ������һ����ľ�̬�ֶΣ��� final ���Ρ����ڱ������ѽ�����볣���صľ�̬�ֶγ��⣩��ʱ���Լ�����һ����ľ�̬������ʱ��</p></li><li><p>ʹ�� java.lang.reflect ���ķ���������з�����õ�ʱ�������û�н��г�ʼ��������Ҫ�ȴ������ʼ����</p></li><li><p>����ʼ��һ�����ʱ����������丸�໹û�н��й���ʼ��������Ҫ�ȴ����丸��ĳ�ʼ����</p></li><li><p>���������ʱ���û���Ҫָ��һ��Ҫִ�е����ࣨ���� main() �������Ǹ��ࣩ����������ȳ�ʼ��������ࣻ</p></li><li><p>��ʹ�� jdk1.7 �Ķ�̬����֧��ʱ�����һ�� java.lang.invoke.MethodHandle ʵ�����Ľ������Ϊ REF_getStatic, REF_putStatic, REF_invokeStatic �ķ��������������������������Ӧ����û�н��й���ʼ��������Ҫ�ȴ������ʼ����</p></li></ol><p>���� 5 �ֳ����е���Ϊ��Ϊ��һ��������������á�����֮�⣬����������ķ�ʽ�����ᴥ����ʼ������Ϊ�������á��������õĳ������Ӱ�����</p><p>1. ͨ���������ø���ľ�̬�ֶΣ����ᵼ�������ʼ����</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(SubClass.value); <span class="comment">// value �ֶ��� SuperClass �ж���</span></span><br></pre></td></tr></table></figure><p>2. ͨ�����鶨���������࣬���ᴥ������ĳ�ʼ�����ù��̻����������г�ʼ������������һ����������Զ����ɵġ�ֱ�Ӽ̳��� Object �����࣬���а�������������Ժͷ�����</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SuperClass[] sca = <span class="keyword">new</span> SuperClass[<span class="number">10</span>];</span><br></pre></td></tr></table></figure><p>3. �����ڱ���׶λ���������ĳ������У������ϲ�û��ֱ�����õ����峣�����࣬��˲��ᴥ�����峣������ĳ�ʼ����</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">System.out.println(ConstClass.HELLOWORLD);</span><br></pre></td></tr></table></figure><h2 id="3-����ع���"><a href="#3-����ع���" class="headerlink" title="3. ����ع���"></a>3. ����ع���</h2><p>�����˼��ء���֤��׼���������ͳ�ʼ���� 5 ���׶Ρ�</p><h3 id="3-1-����"><a href="#3-1-����" class="headerlink" title="3.1 ����"></a>3.1 ����</h3><p>����������ص�һ���׶Σ�ע�ⲻҪ������</p><p>���ع���������������£�</p><ol><li>ͨ��һ�����ȫ�޶�������ȡ�������Ķ������ֽ�����</li><li>������ֽ���������ľ�̬�洢�ṹת��Ϊ������������ʱ�洢�ṹ��</li><li>���ڴ�������һ������������ Class ������Ϊ�����������ĸ������ݵķ�����ڡ�</li></ol><p>���ж������ֽ������Դ����·�ʽ�л�ȡ��</p><ul><li>�� ZIP ����ȡ����ܳ��������ճ�Ϊ�պ� JAR��EAR��WAR ��ʽ�Ļ�����</li><li>�������л�ȡ�����ֳ�������͵�Ӧ���� Applet��</li><li>����ʱ�������ɣ����ֳ���ʹ�õ����þ��Ƕ�̬���������� java.lang.reflect.Proxy �У��������� ProxyGenerator.generateProxyClass �Ĵ�����Ķ������ֽ�����</li><li>�������ļ����ɣ����ͳ����� JSP Ӧ�ã����� JSP �ļ����ɶ�Ӧ�� Class �ࡣ</li><li>�����ݿ��ȡ�����ֳ�������ټ���������Щ�м������������ SAP Netweaver������ѡ��ѳ���װ�����ݿ�������ɳ�������ڼ�Ⱥ��ķַ���<br>…</li></ul><h3 id="3-2-��֤"><a href="#3-2-��֤" class="headerlink" title="3.2 ��֤"></a>3.2 ��֤</h3><p>ȷ�� Class �ļ����ֽ����а�������Ϣ���ϵ�ǰ�������Ҫ�󣬲��Ҳ���Σ�����������İ�ȫ��</p><p>��Ҫ������ 4 ���׶Σ�</p><ol><li>�ļ���ʽ��֤</li><li>Ԫ������֤�����ֽ�����������Ϣ�������������</li><li>�ֽ�����֤��ͨ���������Ϳ�����������ȷ�����������ǺϷ��������߼��ģ�������ķ��������У�������</li><li>����������֤</li></ol><h3 id="3-3-׼��"><a href="#3-3-׼��" class="headerlink" title="3.3 ׼��"></a>3.3 ׼��</h3><p>������Ǳ� static ���εı�����׼���׶�Ϊ����������ڴ沢���ó�ʼֵ��ʹ�õ��Ƿ��������ڴ档</p><p>ʵ��������������׶η����ڴ棬�������ڶ���ʵ����ʱ���Ŷ���һ������� Java ���С�</p><p>��ʼֵһ��Ϊ 0 ֵ���������������� value ����ʼ��Ϊ 0 ������ 123��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> value = <span class="number">123</span>;</span><br></pre></td></tr></table></figure><p>���������ǳ�������ô�ᰴ�ձ��ʽ�����г�ʼ���������Ǹ�ֵΪ 0��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> value = <span class="number">123</span>;</span><br></pre></td></tr></table></figure><h3 id="3-4-����"><a href="#3-4-����" class="headerlink" title="3.4 ����"></a>3.4 ����</h3><p>�������صķ��������滻Ϊֱ�����õĹ��̡�</p><h3 id="3-5-��ʼ��"><a href="#3-5-��ʼ��" class="headerlink" title="3.5 ��ʼ��"></a>3.5 ��ʼ��</h3><p>��ʼ���׶μ������ִ���๹���� &lt;clinit&gt;() �����Ĺ��̡�</p><p>��׼���׶Σ�������Ѿ�����һ��ϵͳҪ��ĳ�ʼֵ�����ڳ�ʼ���׶Σ����ݳ���Աͨ�������ƶ������ۼƻ�ȥ��ʼ���������������Դ��</p><p>&lt;clinit&gt;() �������������ص㣺</p><ul><li>���ɱ������Զ��ռ���������������ĸ�ֵ�����;�̬���飨static{} �飩�е����ϲ������ģ��������ռ���˳���������Դ�ļ��г��ֵ�˳��������ر�ע����ǣ���̬����ֻ�ܷ��ʵ���������֮ǰ�����������������֮��������ֻ�ܸ�ֵ�����ܷ��ʡ��������´��룺</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        i = <span class="number">0</span>;                <span class="comment">// ��������ֵ������������ͨ��</span></span><br><span class="line">        System.out.print(i);  <span class="comment">// ������������ʾ���Ƿ���ǰ���á�</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">int</span> i = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>����Ĺ��캯��������˵ʵ�������� &lt;init&gt;()����ͬ������Ҫ��ʽ�ĵ��ø���Ĺ���������������Զ���֤������� &lt;clinit&gt;() ��������֮ǰ������� &lt;clinit&gt;() �����Ѿ�ִ�н��������������е�һ��ִ�� &lt;clinit&gt;() ��������϶�Ϊ java.lang.Object��</p></li><li><p>���ڸ���� &lt;clinit&gt;() ������ִ�У�Ҳ����ζ�Ÿ����ж���ľ�̬����Ҫ��������ı�����ֵ�������������´��룺</p></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Parent</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> A = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">static</span> &#123;</span><br><span class="line">            A = <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Sub</span> <span class="keyword">extends</span> <span class="title">Parent</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> B = A;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        System.out.println(Sub.B);  <span class="comment">// �������Ǹ����еľ�̬����ֵ A��Ҳ���� 2</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p>&lt;clinit&gt;() �����������ӿڲ��Ǳ���ģ����һ�����в�������̬���飬Ҳû�ж�������ĸ�ֵ���������������Բ�Ϊ�������� &lt;clinit&gt;() ������</p></li><li><p>�ӿ��в�����ʹ�þ�̬���飬����Ȼ���������ʼ���ĸ�ֵ��������˽ӿ�����һ���������� &lt;clinit&gt;() ���������ӿ����಻ͬ���ǣ�ִ�нӿڵ� &lt;clinit&gt;() ��������Ҫ��ִ�и��ӿڵ� &lt;clinit&gt;() ������ֻ�е����ӿ��ж���ı���ʹ��ʱ�����ӿڲŻ��ʼ�������⣬�ӿڵ�ʵ�����ڳ�ʼ��ʱҲһ������ִ�нӿڵ� &lt;clinit&gt;() ������</p></li><li><p>������ᱣ֤һ����� &lt;clinit&gt;() �����ڶ��̻߳����±���ȷ�ļ�����ͬ�����������߳�ͬʱ��ʼ��һ���ֻ࣬����һ���߳�ִ�������� &lt;clinit&gt;() �����������̶߳��������ȴ���ֱ����߳�ִ�� &lt;clinit&gt;() ������ϡ������һ����� &lt;clinit&gt;() �������к�ʱ�Ĳ������Ϳ�����ɶ��������������ʵ�ʹ����д������������Ρ�</p></li></ul><h2 id="4-�������"><a href="#4-�������" class="headerlink" title="4. �������"></a>4. �������</h2><p>���������ŶӰ�����ؽ׶��еġ�ͨ��һ�����ȫ�޶�������ȡ��������Ķ������ֽ��� ( ���ֽ��� )����������ŵ� Java ������ⲿȥʵ�֣��Ա���Ӧ�ó����Լ��������ȥ��ȡ����Ҫ���ࡣʵ����������Ĵ���ģ���Ϊ�������������</p><h3 id="4-1-�����������"><a href="#4-1-�����������" class="headerlink" title="4.1 �����������"></a>4.1 �����������</h3><p>��������һ���࣬����Ҫ�ɼ��������������������౾��һͬȷ������ Java ������е�Ψһ�ԣ�ÿһ�������������ӵ��һ�������������ƿռ䡣ͨ�׶��ԣ��Ƚ��������Ƿ���ȡ���������ָ�ġ���ȡ���������� Class ����� equals() ������isAssignableFrom() ������isInstance() �����ķ��ؽ����Ҳ����ʹ�� instanceof() �ؼ��ֶ������������ϵ�ж����������ֻ������������ʱ��ͬһ������������ص�ǰ���²������壬���򣬼�ʹ����������Դ��ͬһ�� Class �ļ�����ͬһ����������أ�ֻҪ�������ǵ����������ͬ������������ͱض�����ȡ�</p><h3 id="4-2-�����������"><a href="#4-2-�����������" class="headerlink" title="4.2 �����������"></a>4.2 �����������</h3><p>�� Java ������ĽǶ�������ֻ�����������ֲ�ͬ�����������</p><p>һ���������������Bootstrap ClassLoader���������������� C++ ʵ�֣�������������һ���֣���һ�־�������������ļ���������Щ���� Java ʵ�֣�������������ⲿ������ȫ���̳��Գ����� java.lang.ClassLoader��</p><p>�� Java ������Ա�ĽǶȿ�������������Ի��ֵø�ϸ��һЩ��</p><ul><li><p>�����������Bootstrap ClassLoader�� ������������𽫴���� &lt;JAVA_HOME&gt;\lib Ŀ¼�еģ����߱� -Xbootclasspath ������ָ����·���еģ������������ʶ��ģ��������ļ���ʶ���� rt.jar�����ֲ����ϵ���⼴ʹ���� lib Ŀ¼��Ҳ���ᱻ���أ������ص�������ڴ��С� ����������޷��� Java ����ֱ�����ã��û��ڱ�д�Զ����������ʱ�������Ҫ�Ѽ�������ί�ɸ��������������ֱ��ʹ�� null ���漴�ɡ�</p></li><li><p>��չ���������Extension ClassLoader�� �������������� ExtClassLoader��sun.misc.Launcher$ExtClassLoader��ʵ�ֵġ������� &lt;Java_Home&gt;/lib/ext ���߱� java.ext.dir ϵͳ������ָ��·���е����������ص��ڴ��У������߿���ֱ��ʹ����չ���������</p></li><li><p>Ӧ�ó������������Application ClassLoader�� �������������� AppClassLoader��sun.misc.Launcher$AppClassLoader��ʵ�ֵġ����������������� ClassLoader �е� getSystemClassLoader() �����ķ���ֵ�����һ���Ϊϵͳ�������������������û���·����ClassPath������ָ������⣬�����߿���ֱ��ʹ�����������������Ӧ�ó�����û���Զ�����Լ������������һ�������������ǳ�����Ĭ�ϵ����������</p></li></ul><h3 id="4-3-˫��ί��g��"><a href="#4-3-˫��ί��g��" class="headerlink" title="4.3 ˫��ί��ģ��"></a>4.3 ˫��ί��ģ��</h3><p>Ӧ�ó�������������������໥��Ͻ��м��صģ�����б�Ҫ�������Լ����Լ�����������������ͼչʾ���������֮��Ĳ�ι�ϵ����Ϊ���������˫��ί��ģ�ͣ�Parents Delegation Model������ģ��Ҫ����˶��������������⣬��������������Ӧ���Լ��ĸ���������������������֮��ĸ��ӹ�ϵһ��ͨ����ϣ�Composition����ϵ��ʵ�֣�������ͨ���̳У�Inheritance���Ĺ�ϵʵ�֡�</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/2cdc3ce2-fa82-4c22-baaa-000c07d10473.jpg" alt=""></p><p><strong>��������</strong></p><p>���һ����������յ�������ص����������Ȳ����Լ�ȥ���Լ��أ����ǰ��������ί�ɸ������������ÿһ����εļ�����������ˣ����εݹ飬������еļ����������ն�Ӧ�ô��͵����������������У�ֻ�е��������������Լ��޷���ɴ˼���������������Χ��û���ҵ������ࣩʱ���Ӽ������Ż᳢���Լ����ء�</p><p><strong>�ô�</strong></p><p>ʹ��˫��ί��ģ������֯�������֮��Ĺ�ϵ��ʹ�� Java �����������������һ��߱���һ�ִ������ȼ��Ĳ�ι�ϵ�������� java.lang.Object��������� rt.jar �У������ĸ��������Ҫ��������࣬���ն���ί�ɸ�����ģ����˵�������������м��أ���� Object ���ڳ���ĸ���������������ж���ͬһ���ࡣ�෴�����û��˫��ί��ģ�ͣ��ɸ�������������м��صĻ�������û���д��һ����Ϊ��java.lang.Object ���࣬�����ڳ���� ClassPath �У���ϵͳ�н�����ֶ����ͬ�� Object �࣬���򽫱��һƬ���ҡ���������߳��Ա�дһ���� rt.jar ����������������� Java �࣬���ᷢ�ֿ����������룬������Զ�޷����������С�</p><p><strong>ʵ��</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">protected</span> <span class="keyword">synchronized</span> Class&lt;?&gt; loadClass(String name, <span class="keyword">boolean</span> resolve) <span class="keyword">throws</span> ClassNotFoundException&#123;</span><br><span class="line">    <span class="comment">//check the class has been loaded or not</span></span><br><span class="line">    Class c = findLoadedClass(name);</span><br><span class="line">    <span class="keyword">if</span>(c == <span class="keyword">null</span>) &#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(parent != <span class="keyword">null</span>) &#123;</span><br><span class="line">                c = parent.loadClass(name, <span class="keyword">false</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span>&#123;</span><br><span class="line">                c = findBootstrapClassOrNull(name);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span>(ClassNotFoundException e) &#123;</span><br><span class="line">            <span class="comment">//if throws the exception , the father can not complete the load</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(c == <span class="keyword">null</span>) &#123;</span><br><span class="line">            c = findClass(name);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(resolve) &#123;</span><br><span class="line">        resolveClass(c);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="JVM-����"><a href="#JVM-����" class="headerlink" title="JVM ����"></a>JVM ����</h1><h2 id="GC-�Z�����"><a href="#GC-�Z�����" class="headerlink" title="GC �Ż�����"></a>GC �Ż�����</h2><table><thead><tr><th>����</th><th>����</th></tr></thead><tbody><tr><td>-Xms</td><td>��ʼ�����ڴ��С</td></tr><tr><td>-Xmx</td><td>���ڴ����ֵ</td></tr><tr><td>-Xmn</td><td>��������С</td></tr><tr><td>-XX:PermSize</td><td>��ʼ�����ô���С</td></tr><tr><td>-XX:MaxPermSize</td><td>���ô��������</td></tr></tbody></table><h2 id="GC-��������"><a href="#GC-��������" class="headerlink" title="GC ��������"></a>GC ��������</h2><table><thead><tr><th>����</th><th>����</th></tr></thead><tbody><tr><td>-XX:+UseSerialGC</td><td>��������������</td></tr><tr><td>-XX:+UseParallelGC</td><td>��������������</td></tr><tr><td>-XX:+UseConcMarkSweepGC</td><td>�������ɨ������������</td></tr><tr><td>-XX:ParallelCMSThreads=</td><td>�������ɨ������������ = Ϊʹ�õ��߳�����</td></tr><tr><td>-XX:+UseG1GC</td><td>G1 ����������</td></tr></tbody></table><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -Xmx12m -Xms3m -Xmn1m -XX:PermSize=<span class="number">20</span>m -XX:MaxPermSize=<span class="number">20</span>m -XX:+UseSerialGC -jar java-application.jar</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- GFM-TOC --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#�ڴ�ģ��&quot;&gt;�ڴ�ģ��&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#1-���������&quot;&gt;1. ���������&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#2-java-�����ջ&quot;&gt;2. 
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2018/03/29/programming-basics-master/notes/HTTP/"/>
    <id>http://yoursite.com/2018/03/29/programming-basics-master/notes/HTTP/</id>
    <published>2018-03-29T14:37:48.169Z</published>
    <updated>2018-02-26T04:13:28.000Z</updated>
    
    <content type="html"><![CDATA[<!-- GFM-TOC --><ul><li><a href="#��������">��������</a><ul><li><a href="#web����">Web����</a></li><li><a href="#url">URL</a></li><li><a href="#�������Ӧ����">�������Ӧ����</a></li></ul></li><li><a href="#http-����">HTTP ����</a><ul><li><a href="#get��ȡ��Դ">GET����ȡ��Դ</a></li><li><a href="#post����ʵ������">POST������ʵ������</a></li><li><a href="#head��ȡ�����ײ�">HEAD����ȡ�����ײ�</a></li><li><a href="#put�ϴ��ļ�">PUT���ϴ��ļ�</a></li><li><a href="#deleteɾ���ļ�">DELETE��ɾ���ļ�</a></li><li><a href="#options��ѯ֧�ֵķ���">OPTIONS����ѯ֧�ֵķ���</a></li><li><a href="#trace׷��·��">TRACE��׷��·��</a></li><li><a href="#connectҪ�������Э�����Ӵ���">CONNECT��Ҫ�������Э�����Ӵ���</a></li></ul></li><li><a href="#http-״̬��">HTTP ״̬��</a><ul><li><a href="#2xx-�ɹ�">2XX �ɹ�</a></li><li><a href="#3xx-�ض���">3XX �ض���</a></li><li><a href="#4xx-�ͻ��˴���">4XX �ͻ��˴���</a></li><li><a href="#5xx-����������">5XX ����������</a></li></ul></li><li><a href="#http�ײ�">HTTP�ײ�</a><ul><li><a href="#ͨ���ײ��ֶ�">ͨ���ײ��ֶ�</a></li><li><a href="#�����ײ��ֶ�">�����ײ��ֶ�</a></li><li><a href="#��Ӧ�ײ��ֶ�">��Ӧ�ײ��ֶ�</a></li><li><a href="#ʵ���ײ��ֶ�">ʵ���ײ��ֶ�</a></li></ul></li><li><a href="#����Ӧ��">����Ӧ��</a><ul><li><a href="#cookie">Cookie</a></li><li><a href="#����">����</a></li><li><a href="#�־�����">�־�����</a></li><li><a href="#����">����</a></li><li><a href="#�ֿ鴫��">�ֿ鴫��</a></li><li><a href="#�ಿ�ֶ��󼯺�">�ಿ�ֶ��󼯺�</a></li><li><a href="#��Χ����">��Χ����</a></li><li><a href="#����Э��">����Э��</a></li><li><a href="#��������">��������</a></li><li><a href="#ͨ������ת��">ͨ������ת��</a></li></ul></li><li><a href="#https">HTTPs</a><ul><li><a href="#����">����</a></li><li><a href="#��֤">��֤</a></li><li><a href="#������">������</a></li></ul></li><li><a href="#http10-��-http11-������">HTTP/1.0 �� HTTP/1.1 ������</a><!-- GFM-TOC --></li></ul><h1 id="��������"><a href="#��������" class="headerlink" title="��������"></a>��������</h1><h2 id="Web����"><a href="#Web����" class="headerlink" title="Web����"></a>Web����</h2><p>HTTP��HyperText Transfer Protocol����Ϊ������Э�飩��</p><p>WWW��Word Wide Web�������ּ�����HTML��HTTP��URL��</p><p>RFC��Request for Comments��������������飩��������������ĵ���</p><h2 id="URL"><a href="#URL" class="headerlink" title="URL"></a>URL</h2><p>URI��Uniform Resource Indentifier��ͳһ��Դ��ʶ������URL��Uniform Resource Locator��ͳһ��Դ��λ������URN��Uniform Resource Name��ͳһ��Դ���ƣ������� urn:isbn:0-486-27557-4 ��URI ���� URL �� URN��Ŀǰ WEB ֻ�� URL �Ƚ����У����Լ����Ļ������� URL��</p><p>URL��ʽ��</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/4102b7d0-39b9-48d8-82ae-ac4addb7ebfb.jpg" alt=""></p><h2 id="�������Ӧ����"><a href="#�������Ӧ����" class="headerlink" title="�������Ӧ����"></a>�������Ӧ����</h2><p><strong>������</strong></p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/9dbb5fc2-936b-4c6d-b3a7-9617aae45080.jpg" alt=""></p><p><strong>��Ӧ����</strong></p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/c634b5ed-a14b-4302-b40e-3ee387dd3c8a.jpg" alt=""></p><h1 id="HTTP-����"><a href="#HTTP-����" class="headerlink" title="HTTP ����"></a>HTTP ����</h1><p>�ͻ��˷��͵������ĵ�һ��Ϊ�����У������˷����ֶΡ�</p><h2 id="GET����ȡ��Դ"><a href="#GET����ȡ��Դ" class="headerlink" title="GET����ȡ��Դ"></a>GET����ȡ��Դ</h2><h2 id="POST������ʵ������"><a href="#POST������ʵ������" class="headerlink" title="POST������ʵ������"></a>POST������ʵ������</h2><p>POST ��ҪĿ�Ĳ��ǻ�ȡ��Դ�����Ǵ���ʵ���������ݡ�</p><p>GET �� POST ��������ʹ�ö���Ĳ��������� GET �Ĳ������Բ�ѯ�ַ��������� URL�У��� POST �Ĳ����洢��ʵ�����岿�֡�</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GET /test/demo_form.asp?name1=value1&amp;name2=value2 HTTP/1.1</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">POST /test/demo_form.asp HTTP/1.1</span><br><span class="line">Host: w3schools.com</span><br><span class="line">name1=value1&amp;name2=value2</span><br></pre></td></tr></table></figure><p>GET �Ĵ��η�ʽ����� POST ��ȫ�Խϲ��Ϊ GET ���Ĳ����� URL �ǿɼ��ģ����ܻ�й¶˽����Ϣ������ GET ֻ֧�� ASCII �ַ����������Ϊ��������ܻ�������룬�� POST ֧�ֱ�׼�ַ�����</p><h2 id="HEAD����ȡ�����ײ�"><a href="#HEAD����ȡ�����ײ�" class="headerlink" title="HEAD����ȡ�����ײ�"></a>HEAD����ȡ�����ײ�</h2><p>�� GET ����һ�������ǲ����ر���ʵ�����岿�֡�</p><p>��Ҫ����ȷ�� URL ����Ч���Լ���Դ���µ�����ʱ��ȡ�</p><h2 id="PUT���ϴ��l�"><a href="#PUT���ϴ��l�" class="headerlink" title="PUT���ϴ��ļ�"></a>PUT���ϴ��ļ�</h2><p>������������֤���ƣ��κ��˶������ϴ��ļ�����˴��ڰ�ȫ�����⣬һ�� WEB ��վ��ʹ�ø÷�����</p><h2 id="DELETE��ɾ���l�"><a href="#DELETE��ɾ���l�" class="headerlink" title="DELETE��ɾ���ļ�"></a>DELETE��ɾ���ļ�</h2><p>�� PUT �����෴������ͬ��������֤���ơ�</p><h2 id="OPTIONS����ѯ֧�ֵk���"><a href="#OPTIONS����ѯ֧�ֵk���" class="headerlink" title="OPTIONS����ѯ֧�ֵķ���"></a>OPTIONS����ѯ֧�ֵķ���</h2><p>��ѯָ���� URL �ܹ�֧�ֵķ�����</p><p>�᷵�� Allow: GET, POST, HEAD, OPTIONS ���������ݡ�</p><h2 id="TRACE��׷��·��"><a href="#TRACE��׷��·��" class="headerlink" title="TRACE��׷��·��"></a>TRACE��׷��·��</h2><p>�������Ὣͨ��·�����ظ��ͻ��ˡ�</p><p>��������ʱ���� Max-Forwards �ײ��ֶ���������ֵ��ÿ����һ���������ͻ�� 1������ֵΪ 0 ʱ��ֹͣ���䡣</p><p>TRACE һ�㲻��ʹ�ã������������ܵ� XST ������Cross-Site Tracing����վ׷�٣�����˸�����ȥʹ������</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/ca711108-e937-4d7d-99aa-61b325c61f1a.jpg" alt=""></p><h2 id="CONNECT��Ҫ�������Э�����Ӵ���"><a href="#CONNECT��Ҫ�������Э�����Ӵ���" class="headerlink" title="CONNECT��Ҫ�������Э�����Ӵ���"></a>CONNECT��Ҫ�������Э�����Ӵ���</h2><p>�����Э����� TCP ͨ�š�</p><p>��Ҫʹ�� SSL��Secure Sokets Layer����ȫ�׽��֣��� TLS��Transport Layer Security������㰲ȫ��Э���ͨ�����ݼ��ܺ�����������䡣</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/d8355d56-aa2b-4452-8001-8475cc095af1.jpg" alt=""></p><h1 id="HTTP-״̬��"><a href="#HTTP-״̬��" class="headerlink" title="HTTP ״̬��"></a>HTTP ״̬��</h1><p>���������ص���Ӧ�����е�һ��Ϊ״̬�У�������״̬���Լ�ԭ��������֪�ͻ�������Ľ����</p><table><thead><tr><th>״̬��</th><th>���</th><th>ԭ�����</th></tr></thead><tbody><tr><td>1XX</td><td>Informational����Ϣ��״̬�룩</td><td>���յ��������ڴ���</td></tr><tr><td>2XX</td><td>Success���ɹ�״̬�룩</td><td>���������������</td></tr><tr><td>3XX</td><td>Redirection���ض���״̬�룩</td><td>��Ҫ���и��Ӳ������������</td></tr><tr><td>4XX</td><td>Client Error���ͻ��˴���״̬�룩</td><td>�������޷���������</td></tr><tr><td>5XX</td><td>Server Error������������״̬�룩</td><td>�����������������</td></tr></tbody></table><h2 id="2XX-�ɹ�"><a href="#2XX-�ɹ�" class="headerlink" title="2XX �ɹ�"></a>2XX �ɹ�</h2><p><strong>200 OK</strong></p><p><strong>204 No Content</strong>�������Ѿ��ɹ��������Ƿ��ص���Ӧ���Ĳ�����ʵ������岿�֡�һ����ֻ��Ҫ�ӿͻ�����������������Ϣ��������Ҫ��������ʱʹ�á�</p><p><strong>206 Partial Content</strong></p><h2 id="3XX-�ض���"><a href="#3XX-�ض���" class="headerlink" title="3XX �ض���"></a>3XX �ض���</h2><p><strong>301 Moved Permanently</strong>���������ض���</p><p><strong>302 Found</strong>����ʱ���ض���</p><p><strong>303 See Other</strong></p><p>ע����Ȼ HTTP Э��涨 301��302 ״̬���ض���ʱ������� POST �����ĳ� GET ���������Ǵ�������������� 301��302 �� 303 ״̬�µ��ض���� POST �����ĳ� GET ������</p><p><strong>304 Not Modified</strong>������������ײ�����һЩ���������磺If-Match��If-ModifiedSince��If-None-Match��If-Range��If-Unmodified-Since�����ǲ�������������������᷵�� 304 ״̬�롣</p><p><strong>307 Temporary Redirect</strong>����ʱ�ض����� 302 �ĺ������ƣ����� 307 Ҫ�������������ض�������� POST �����ĳ� GET ������</p><h2 id="4XX-�ͻ��˴���"><a href="#4XX-�ͻ��˴���" class="headerlink" title="4XX �ͻ��˴���"></a>4XX �ͻ��˴���</h2><p><strong>400 Bad Request</strong>���������д����﷨����</p><p><strong>401 Unauthorized</strong>����״̬���ʾ���͵�������Ҫ��ͨ�� HTTP ��֤��BASIC ��֤��DIGEST ��֤������֤��Ϣ�����֮ǰ�ѽ��й�һ���������ʾ�û���֤ʧ�ܡ�</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/b1b4cf7d-c54a-4ff1-9741-cd2eea331123.jpg" alt=""></p><p><strong>403 Forbidden</strong>�����󱻾ܾ�����������û�б�Ҫ�����ܾ�����ϸ���ɡ�</p><p><strong>404 Not Found</strong></p><h2 id="5XX-����������"><a href="#5XX-����������" class="headerlink" title="5XX ����������"></a>5XX ����������</h2><p><strong>500 Internal Server Error</strong>������������ִ������ʱ��������</p><p><strong>503 Service Unavilable</strong>����״̬�������������ʱ���ڳ����ػ����ڽ���ͣ��ά���������޷���������</p><h1 id="HTTP�ײ�"><a href="#HTTP�ײ�" class="headerlink" title="HTTP�ײ�"></a>HTTP�ײ�</h1><p>HTTP ���İ������ײ������������֡��� 4 �����͵��ײ��ֶΣ�ͨ���ײ��ֶΡ������ײ��ֶΡ���Ӧ�ײ��ֶκ�ʵ���ײ��ֶΡ������ײ��ֶμ��京�����£�����Ҫȫ�ǣ��������ģ���</p><h2 id="ͨ���ײ��ֶ�"><a href="#ͨ���ײ��ֶ�" class="headerlink" title="ͨ���ײ��ֶ�"></a>ͨ���ײ��ֶ�</h2><table><thead><tr><th>�ײ��ֶ���</th><th>˵��</th></tr></thead><tbody><tr><td>Cache-Control</td><td>���ƻ������Ϊ</td></tr><tr><td>Connection</td><td>�����ײ��� ���ӵĹ���</td></tr><tr><td>Date</td><td>�������ĵ�����ʱ��</td></tr><tr><td>Pragma</td><td>����ָ��</td></tr><tr><td>Trailer</td><td>����ĩ�˵��ײ�һ��</td></tr><tr><td>Transfer-Encoding</td><td>ָ����������Ĵ�����뷽ʽ</td></tr><tr><td>Upgrade</td><td>����Ϊ����Э��</td></tr><tr><td>Via</td><td>����������������Ϣ</td></tr><tr><td>Warning</td><td>����֪ͨ</td></tr></tbody></table><h2 id="�����ײ��ֶ�"><a href="#�����ײ��ֶ�" class="headerlink" title="�����ײ��ֶ�"></a>�����ײ��ֶ�</h2><table><thead><tr><th>�ײ��ֶ���</th><th>˵��</th></tr></thead><tbody><tr><td>Accept</td><td>�û�����ɴ����ý������</td></tr><tr><td>Accept-Charset</td><td>���ȵ��ַ���</td></tr><tr><td>Accept-Encoding</td><td>���ȵ����ݱ���</td></tr><tr><td>Accept-Language</td><td>���ȵ����ԣ���Ȼ���ԣ�</td></tr><tr><td>Authorization</td><td>Web��֤��Ϣ</td></tr><tr><td>Expect</td><td>�ڴ����������ض���Ϊ</td></tr><tr><td>From</td><td>�û��ĵ��������ַ</td></tr><tr><td>Host</td><td>������Դ���ڷ�����</td></tr><tr><td>If-Match</td><td>�Ƚ�ʵ���ǣ�ETag��</td></tr><tr><td>If-Modified-Since</td><td>�Ƚ���Դ�ĸ���ʱ��</td></tr><tr><td>If-None-Match</td><td>�Ƚ�ʵ���ǣ��� If-Match �෴��</td></tr><tr><td>If-Range</td><td>��Դδ����ʱ����ʵ�� Byte �ķ�Χ����</td></tr><tr><td>If-Unmodified-Since</td><td>�Ƚ���Դ�ĸ���ʱ�䣨��If-Modified-Since�෴��</td></tr><tr><td>Max-Forwards</td><td>�����������</td></tr><tr><td>Proxy-Authorization</td><td>���������Ҫ��ͻ��˵���֤��Ϣ</td></tr><tr><td>Range</td><td>ʵ����ֽڷ�Χ����</td></tr><tr><td>Referer</td><td>�������� URI ��ԭʼ��ȡ��</td></tr><tr><td>TE</td><td>�����������ȼ�</td></tr><tr><td>User-Agent</td><td>HTTP �ͻ��˳������Ϣ</td></tr></tbody></table><h2 id="��Ӧ�ײ��ֶ�"><a href="#��Ӧ�ײ��ֶ�" class="headerlink" title="��Ӧ�ײ��ֶ�"></a>��Ӧ�ײ��ֶ�</h2><table><thead><tr><th>�ײ��ֶ���</th><th>˵��</th></tr></thead><tbody><tr><td>Accept-Ranges</td><td>�Ƿ�����ֽڷ�Χ����</td></tr><tr><td>Age</td><td>������Դ��������ʱ��</td></tr><tr><td>ETag</td><td>��Դ��ƥ����Ϣ</td></tr><tr><td>Location</td><td>��ͻ����ض�����ָ��URI</td></tr><tr><td>Proxy-Authenticate</td><td>����������Կͻ��˵���֤��Ϣ</td></tr><tr><td>Retry-After</td><td>���ٴη��������ʱ��Ҫ��</td></tr><tr><td>Server</td><td>HTTP�������İ�װ��Ϣ</td></tr><tr><td>Vary</td><td>�������������Ĺ�����Ϣ</td></tr><tr><td>WWW-Authenticate</td><td>�������Կͻ��˵���֤��Ϣ</td></tr></tbody></table><h2 id="ʵ���ײ��ֶ�"><a href="#ʵ���ײ��ֶ�" class="headerlink" title="ʵ���ײ��ֶ�"></a>ʵ���ײ��ֶ�</h2><table><thead><tr><th>�ײ��ֶ���</th><th>˵��</th></tr></thead><tbody><tr><td>Allow</td><td>��Դ��֧�ֵ�HTTP����</td></tr><tr><td>Content-Encoding</td><td>ʵ���������õı��뷽ʽ</td></tr><tr><td>Content-Language</td><td>ʵ���������Ȼ����</td></tr><tr><td>Content-Length</td><td>ʵ������Ĵ�С����λ�� �ֽڣ�</td></tr><tr><td>Content-Location</td><td>�����Ӧ��Դ��URI</td></tr><tr><td>Content-MD5</td><td>ʵ������ı���ժҪ</td></tr><tr><td>Content-Range</td><td>ʵ�������λ�÷�Χ</td></tr><tr><td>Content-Type</td><td>ʵ�������ý������</td></tr><tr><td>Expires</td><td>ʵ��������ڵ�����ʱ��</td></tr><tr><td>Last-Modified</td><td>��Դ������޸�����ʱ��</td></tr></tbody></table><h1 id="����Ӧ��"><a href="#����Ӧ��" class="headerlink" title="����Ӧ��"></a>����Ӧ��</h1><h2 id="Cookie"><a href="#Cookie" class="headerlink" title="Cookie"></a>Cookie</h2><p>HTTP Э������״̬�ģ���Ҫ��Ϊ���� HTTP Э�龡���ܼ򵥣�ʹ�����ܹ������������HTTP/1.1 ���� Cookie ������״̬��Ϣ��</p><p>�������ᷢ�͵���Ӧ���İ��� Set-Cookie �ֶΣ��ͻ��˵õ�����Ӧ��� Cookie ���ݱ��浽������С��´��ٷ�������ʱ����������ж��� Cookie ֵ�����������а��� Cookie �ֶΣ�������������֪���ͻ��˵�״̬��Ϣ�ˡ�Cookie ״̬��Ϣ�����ڿͻ���������У������Ƿ������ϡ�</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/ff17c103-750a-4bb8-9afa-576327023af9.png" alt=""></p><p>Set-Cookie �ֶ����������ԣ�</p><table><thead><tr><th>����</th><th>˵��</th></tr></thead><tbody><tr><td>NAME=VALUE</td><td>���� Cookie �����ƺ���ֵ�������</td></tr><tr><td>expires=DATE</td><td>Cookie ����Ч�ڣ�����ȷָ����Ĭ��Ϊ������ر�ǰΪֹ��</td></tr><tr><td>path=PATH</td><td>���������ϵ��ļ�Ŀ¼��Ϊ Cookie �����ö�����ָ����Ĭ��Ϊ�ĵ����ڵ��ļ�Ŀ¼��</td></tr><tr><td>domain=����</td><td>��Ϊ Cookie ���ö������������ָ����Ĭ��Ϊ���� Cookie �ķ�������������</td></tr><tr><td>Secure</td><td>���� HTTPS ��ȫͨ��ʱ�Żᷢ�� Cookie</td></tr><tr><td>HttpOnly</td><td>�������ƣ�ʹ Cookie ���ܱ� JavaScript �ű�����</td></tr></tbody></table><p><strong>Session �� Cookie ����</strong></p><p>Session �Ƿ��������������û���һ���ֶΣ�ÿ�� Session ����һ��Ψһ��ʶ��Session ID����������������һ�� Session ʱ�����ͻ��˷��͵���Ӧ���ľͰ����� Set-Cookie �ֶΣ�������һ����Ϊ sid �ļ�ֵ�ԣ������ֵ�Ծ��� Session ID���ͻ����յ���Ͱ� Cookie ������������У�����֮���͵������Ķ����� Session ID��HTTP ���� Session �� Cookie �����ַ�ʽһ�������ʵ�ָ����û�״̬�ģ��� Session ���ڷ������ˣ�Cookie ���ڿͻ��ˡ�</p><p><strong>��������� Cookie �����</strong></p><p>��ʹ�� URL ��д�������� URL ������� sid=xxx ��</p><p><strong>ʹ�� Cookie ʵ���û�����������Զ���д</strong></p><p>��վ�ű����Զ��� Cookie �ж�ȡ�û��������룬�Ӷ�ʵ���Զ���д��</p><h2 id="����"><a href="#����" class="headerlink" title="����"></a>����</h2><p>�����ֻ��淽�����ô�����������л�����ÿͻ�����������л��档</p><p>Cache-Control ���ڿ��ƻ������Ϊ��</p><p>Cache-Control: no-cache �����ֺ��壬����ǿͻ����򻺴���������͵��������к��и�ָ���ʾ�ͻ��˲���Ҫ�������Դ�������Դ�������򻺴���������͵���Ӧ�����к��и�ָ���ʾ������������ܶ���Դ���л��档</p><p>Expires �ֶο������ڸ�֪�������������Դʲôʱ�����ڡ����ײ��ֶ� Cache-Control ��ָ�� max-age ָ��ʱ�������ײ��ֶ� Expires�������ȴ��� max-age ָ�</p><h2 id="�־�����"><a href="#�־�����" class="headerlink" title="�־�����"></a>�־�����</h2><p>�����������һ����������ͼƬ�� HTML ҳ��ʱ������������� HTML ҳ����Դ����������ͼƬ��Դ�����ÿ����һ�� HTTP ͨ�ž�Ҫ�Ͽ�һ�� TCP ���ӣ����ӽ����ͶϿ��Ŀ�����ܴ�<strong>�־�����</strong> ֻ��Ҫ����һ�� TCP ���Ӿ��ܽ��ж�� HTTP ͨ�š�HTTP/1.1��ʼ�����е�����Ĭ�϶��ǳ־����ӡ�</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/c73a0b78-5f46-4d2d-a009-dab2a999b5d8.jpg" alt=""></p><p>�־�������Ҫʹ�� Connection �ײ��ֶν��й���HTTP/1.1 ��ʼHTTP Ĭ���ǳ־û����ӵģ����Ҫ�Ͽ� TCP ���ӣ���Ҫ�ɿͻ��˻��߷�����������Ͽ���ʹ�� Connection: close ������HTTP/1.1֮ǰĬ���Ƿǳ־û����ӵģ����Ҫά�ֳ������ӣ���Ҫʹ�� Keep-Alive��</p><p>���߻���ʽ����ͬʱ���Ͷ���������Ӧ��������Ҫ����һ������Ȼ��ȴ���Ӧ֮���ٷ���һ������</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/6943e2af-5a70-4004-8bee-b33d60f39da3.jpg" alt=""></p><h2 id="����-1"><a href="#����-1" class="headerlink" title="����"></a>����</h2><p>���루Encoding����Ҫ��Ϊ�˶�ʵ�����ѹ�������õı����У�gzip��compress��deflate��identity������ identity ��ʾ��ִ��ѹ���ı����ʽ��</p><h2 id="�ֿ鴫��"><a href="#�ֿ鴫��" class="headerlink" title="�ֿ鴫��"></a>�ֿ鴫��</h2><p>�ֿ鴫�䣨Chunked Transfer Coding�����԰����ݷָ�ɶ�飬�����������ʾҳ�档</p><h2 id="�ಿ�ֶ��󼯺�"><a href="#�ಿ�ֶ��󼯺�" class="headerlink" title="�ಿ�ֶ��󼯺�"></a>�ಿ�ֶ��󼯺�</h2><p>һ�ݱ��������ڿɺ��ж����͵�ʵ��ͬʱ���ͣ�ÿ������֮���� boundary �ֶζ���ķָ�����зָ�ÿ�����ֶ��������ײ��ֶΡ�</p><p>���磬�ϴ������ʱ����ʹ�����·�ʽ��</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/decb0936-e83c-4a55-840a-fe8aa101ac61.png" alt=""></p><h2 id="��Χ����"><a href="#��Χ����" class="headerlink" title="��Χ����"></a>��Χ����</h2><p>�����������жϣ�������ֻ������һ�������ݣ���Χ����ʹ�ÿͻ����ܹ�ֻ����δ���͵��ǲ������ݣ��Ӷ���������������·����������ݡ�</p><p>���������ײ������ Range �ֶΣ�Ȼ��ָ������ķ�Χ������  Range : bytes = 5001-10000������ɹ��Ļ����������� 206 Partial Content ״̬��</p><h2 id="����Э��"><a href="#����Э��" class="headerlink" title="����Э��"></a>����Э��</h2><p>ͨ������Э�̷�������ʵ����ݣ���������������Ĭ������ѡ�񷵻����Ľ��滹��Ӣ�Ľ��档</p><p>�漰�����ײ��ֶΣ�Accept��Accept-Charset��Accept-Encoding��Accept-Language��Content-Language��</p><h2 id="��������-1"><a href="#��������-1" class="headerlink" title="��������"></a>��������</h2><p>ʹ����������������ʹ��һ̨������ӵ�ж���������������߼��Ͽ��Կ��ɶ����������</p><h2 id="ͨ������ת��"><a href="#ͨ������ת��" class="headerlink" title="ͨ������ת��"></a>ͨ������ת��</h2><p><strong>����</strong></p><p>������������ܿͻ��˵����󣬲���ת�������������������������һ����͸���ģ�����ı� URL��</p><p>ʹ�ô������ҪĿ���ǣ����桢������ʿ����Լ���¼������־��</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/c07035c3-a9ba-4508-8e3c-d8ae4c6ee9ee.jpg" alt=""></p><p><strong>����</strong></p><p>������������ͬ���ǣ����ط������Ὣ HTTP ת��Ϊ����Э�����ͨ�ţ��Ӷ������� HTTP �������ķ���</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/81375888-6be1-476f-9521-42eea3e3154f.jpg" alt=""></p><p><strong>���</strong></p><p>ʹ�� SSL �ȼ����ֶΣ�Ϊ�ͻ��˺ͷ�����֮�佨��һ����ȫ��ͨ����·��</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/64b95403-d976-421a-8b45-bac89c0b5185.jpg" alt=""></p><h1 id="HTTPs"><a href="#HTTPs" class="headerlink" title="HTTPs"></a>HTTPs</h1><p>HTTP �����°�ȫ�����⣺</p><ol><li>ͨ��ʹ�����ģ����ݿ��ܻᱻ������</li><li>����֤ͨ�ŷ�����ݣ�����п�������αװ��</li><li>�޷�֤�����ĵ������ԣ������п�������۸ġ�</li></ol><p>HTTPs ��������Э�飬���� HTTP �Ⱥ� SSL��Secure Socket Layer��ͨ�ţ����� SSL �� TCP ͨ�š�ͨ��ʹ�� SSL��HTTPs �ṩ�˼��ܡ���֤�������Ա�����</p><h2 id="����-2"><a href="#����-2" class="headerlink" title="����"></a>����</h2><p>�����ּ��ܷ�ʽ���Գ���Կ���ܺ͹�����Կ���ܡ��Գ���Կ���ܵļ��ܺͽ���ʹ��ͬһ��Կ����������Կ����ʹ��һ����Կ���ڼ��ܺͽ��ܣ��ֱ�Ϊ������Կ��˽����Կ��������Կ�����˶����Ի�ã�ͨ�ŷ��ͷ���ý��շ��Ĺ�����Կ֮�󣬾Ϳ���ʹ�ù�����Կ���м��ܣ����շ��յ�ͨ�����ݺ�ʹ��˽����Կ���ܡ�</p><p>�Գ���Կ���ܵ�ȱ�㣺�޷���ȫ������Կ��������Կ���ܵ�ȱ�㣺�����˵����ʱ��</p><p>HTTPs ���� <strong>��ϵļ��ܻ���</strong>��ʹ�ù�����Կ�������ڴ���Գ���Կ��֮��ʹ�öԳ���Կ���ܽ���ͨ�š�����ͼ�У�������Կ���Գ���Կ��</p><p><img src="https://github.com/CyC2018/InterviewNotes/blob/master/pics/110b1a9b-87cd-45c3-a21d-824623715b33.jpg" alt=""></p><h2 id="��֤"><a href="#��֤" class="headerlink" title="��֤"></a>��֤</h2><p>ͨ��ʹ�� <strong>֤��</strong> ����ͨ�ŷ�������֤��֤�����й�����Կ���ݣ����������֤������Կ��ȷ����ͨ�ŷ��ģ���ô�Ϳ���ȷ��ͨ�ŷ��ǿɿ��ġ�</p><p>����֤����֤������CA��Certificate<br>Authority���䷢�Ĺ�����Կ֤�飬����ͨ�� CA ���������֤��</p><p>���� HTTPs ͨ��ʱ�����������֤�鷢�͸��ͻ��ˣ��ͻ���ȡ�����еĹ�����Կ֮�󣬾Ϳ��Կ�ʼ���ܹ��̡�</p><p>ʹ�� OpenSSL ���׿�Դ����ÿ���˶����Թ���һ�������Լ�����֤�������Ӷ��Լ����Լ��䷢������֤�顣������ڷ��ʸ÷�����ʱ������ʾ���޷�ȷ�����Ӱ�ȫ�ԡ��򡰸���վ�İ�ȫ֤��������⡱�Ⱦ�����Ϣ��</p><p>�ͻ���֤����Ҫ�û����а�װ��ֻ����ҵ����Ҫ�ǳ��߰�ȫ��ʱ��ʹ�ÿͻ���֤�飬�����������С�</p><h2 id="������"><a href="#������" class="headerlink" title="������"></a>������</h2><p>SSL �ṩժҪ��������֤�����ԡ�</p><h1 id="HTTP-1-0-��-HTTP-1-1-������"><a href="#HTTP-1-0-��-HTTP-1-1-������" class="headerlink" title="HTTP/1.0 �� HTTP/1.1 ������"></a>HTTP/1.0 �� HTTP/1.1 ������</h1><ul><li>HTTP/1.1 Ĭ���ǳ����ӣ�</li><li>HTTP/1.1 �ṩ�˷�Χ�����ܣ�</li><li>HTTP/1.1 �ṩ�����������Ĺ��ܣ�</li><li>HTTP/1.1 ����һЩ���洦���ֶΣ�</li><li>HTTP/1.1 ����һЩ״̬�룻</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- GFM-TOC --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#��������&quot;&gt;��������&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#web����&quot;&gt;Web����&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#url&quot;&gt;URL&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2018/03/29/programming-basics-master/notes/2016%20%E6%A0%A1%E6%8B%9B%E7%9C%9F%E9%A2%98%E9%A2%98%E8%A7%A3/"/>
    <id>http://yoursite.com/2018/03/29/programming-basics-master/notes/2016 校招真题题解/</id>
    <published>2018-03-29T14:37:48.168Z</published>
    <updated>2018-02-26T04:13:28.000Z</updated>
    
    <content type="html"><![CDATA[<!-- GFM-TOC --><ul><li><a href="#ǰ��">ǰ��</a></li><li><a href="#1-С��-С��git">1. С��-С��Git</a></li><li><a href="#2-С��-��������">2. С��-��������</a></li><li><a href="#3-С��-�й�ţ��">3. С��-�й�ţ��</a></li><li><a href="#4-΢��-lucky-string">4. ΢��-LUCKY STRING</a></li><li><a href="#5-΢��-numeric-keypad">5. ΢��-Numeric Keypad</a></li><li><a href="#6-΢��-spring-outing">6. ΢��-Spring Outing</a></li><li><a href="#7-΢��-s-expression">7. ΢��-S-expression</a></li><li><a href="#8-��Ϊ-��߷��Ƕ���">8. ��Ϊ-��߷��Ƕ���</a></li><li><a href="#9-��Ϊ-�򵥴����¼">9. ��Ϊ-�򵥴����¼</a></li><li><a href="#10-��Ϊ-�˿��ƴ�С">10. ��Ϊ-�˿��ƴ�С</a></li><li><a href="#11-ȥ�Ķ�-���ֲ���">11. ȥ�Ķ�-���ֲ���</a></li><li><a href="#12-ȥ�Ķ�-�׸��ظ��ַ�">12. ȥ�Ķ�-�׸��ظ��ַ�</a></li><li><a href="#13-ȥ�Ķ�-Ѱ��coder">13. ȥ�Ķ�-Ѱ��Coder</a></li><li><a href="#14-����-����ֵ">14. ����-����ֵ</a></li><li><a href="#15-����-���ӷ�ת">15. ����-���ӷ�ת</a></li><li><a href="#16-����-�ݷ�">16. ����-�ݷ�</a></li><li><a href="#17-����-ֱ��ͼ��������">17. ����-ֱ��ͼ��������</a></li><li><a href="#18-����-�ַ�������">18. ����-�ַ�������</a></li><li><a href="#19-����-ƽ������">19. ����-ƽ������</a></li><li><a href="#20-�ٶ�-�ﷸת��">20. �ٶ�-�ﷸת��</a></li><li><a href="#22-�ٶ�-�ü�����ֽ">22. �ٶ�-�ü�����ֽ</a></li><li><a href="#23-�ٶ�-�������">23. �ٶ�-�������</a></li><li><a href="#24-�ٶ�-Ģ����">24. �ٶ�-Ģ����</a><!-- GFM-TOC --></li></ul><h1 id="j��"><a href="#j��" class="headerlink" title="ǰ��"></a>ǰ��</h1><p>ʡ�ԵĴ��룺</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">while</span> (in.hasNext()) &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="1-С��-С��Git"><a href="#1-С��-С��Git" class="headerlink" title="1. С��-С��Git"></a>1. С��-С��Git</h1><ul><li>�ؽ������</li><li>ʹ�� LCA</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">TreeNode</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> id;</span><br><span class="line">    List&lt;TreeNode&gt; childs = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    TreeNode(<span class="keyword">int</span> id) &#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getSplitNode</span><span class="params">(String[] matrix, <span class="keyword">int</span> indexA, <span class="keyword">int</span> indexB)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = matrix.length;</span><br><span class="line">    <span class="keyword">boolean</span>[][] linked = <span class="keyword">new</span> <span class="keyword">boolean</span>[n][n]; <span class="comment">// �ؽ��ڽӾ���</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++) &#123;</span><br><span class="line">            linked[i][j] = matrix[i].charAt(j) == <span class="string">'1'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    TreeNode tree = constructTree(linked, <span class="number">0</span>);</span><br><span class="line">    TreeNode ancestor = LCA(tree, <span class="keyword">new</span> TreeNode(indexA), <span class="keyword">new</span> TreeNode(indexB));</span><br><span class="line">    <span class="keyword">return</span> ancestor.id;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> TreeNode <span class="title">constructTree</span><span class="params">(<span class="keyword">boolean</span>[][] linked, <span class="keyword">int</span> root)</span> </span>&#123;</span><br><span class="line">    TreeNode tree = <span class="keyword">new</span> TreeNode(root);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; linked[root].length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (linked[root][i]) &#123;</span><br><span class="line">            linked[i][root] = <span class="keyword">false</span>; <span class="comment">//  ��Ϊ��Ŀ�����ڽӾ�����˫��ģ���������Ҫ����תΪ�����</span></span><br><span class="line">            tree.childs.add(constructTree(links, i));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> tree;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> TreeNode <span class="title">LCA</span><span class="params">(TreeNode root, TreeNode p, TreeNode q)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (root == <span class="keyword">null</span> || root.id == p.id || root.id == q.id) <span class="keyword">return</span> root;</span><br><span class="line">    TreeNode ancestor = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; root.childs.size(); i++) &#123;</span><br><span class="line">        TreeNode tmp = LCA(root.childs.get(i), p, q);</span><br><span class="line">        <span class="keyword">if</span> (tmp != <span class="keyword">null</span>) &#123;</span><br><span class="line">            ancestor = tmp;</span><br><span class="line">            cnt++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> cnt == <span class="number">2</span> ? root : ancestor;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="2-С��-��������"><a href="#2-С��-��������" class="headerlink" title="2. С��-��������"></a>2. С��-��������</h1><p>��������������򣬽���Ķ����Ʊ�ʾΪ 1 ����һλ������������ͬ��λ��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">countBitDiff</span><span class="params">(<span class="keyword">int</span> m, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> Integer.bitCount(m ^ n);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="3-С��-�й�t��"><a href="#3-С��-�й�t��" class="headerlink" title="3. С��-�й�ţ��"></a>3. С��-�й�ţ��</h1><p>�������⣬������һ����СΪ 2 �ı�����</p><p>״̬ת�Ʒ������£�</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dp[i, j] = max(dp[i, j-1], prices[j] - prices[jj] + dp[i-1, jj]) &#123; jj in range of [0, j-1] &#125; = max(dp[i, j-1], prices[j] + max(dp[i-1, jj] - prices[jj]))</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">calculateMax</span><span class="params">(<span class="keyword">int</span>[] prices)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n = prices.length;</span><br><span class="line">    <span class="keyword">int</span>[][] dp = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">3</span>][n];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">2</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> localMax = dp[i - <span class="number">1</span>][<span class="number">0</span>] - prices[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; n; j++) &#123;</span><br><span class="line">            dp[i][j] = Math.max(dp[i][j - <span class="number">1</span>], prices[j] + localMax);</span><br><span class="line">            localMax = Math.max(localMax, dp[i - <span class="number">1</span>][j] - prices[j]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> dp[<span class="number">2</span>][n - <span class="number">1</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="4-΢��-LUCKY-STRING"><a href="#4-΢��-LUCKY-STRING" class="headerlink" title="4. ΢��-LUCKY STRING"></a>4. ΢��-LUCKY STRING</h1><ul><li>쳲��������п���Ԥ���㣻</li><li>��ͷ��β�����ַ����Ĺ��̣�ÿһ��ѭ����ʹ��һ�� Set ������� i �� j ���ֵ��ַ������� Set ��֤���ַ�����ͬ����� Set �Ĵ�С���ǲ�ͬ�ַ��ĸ�����</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">Set&lt;Integer&gt; fibSet = <span class="keyword">new</span> HashSet&lt;&gt;(Arrays.asList(<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">8</span>, <span class="number">13</span>, <span class="number">21</span>, <span class="number">34</span>, <span class="number">55</span>, <span class="number">89</span>));</span><br><span class="line">Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">String str = in.nextLine();</span><br><span class="line"><span class="keyword">int</span> n = str.length();</span><br><span class="line">Set&lt;String&gt; ret = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">    Set&lt;Character&gt; set = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &lt; n; j++) &#123;</span><br><span class="line">        set.add(str.charAt(j));</span><br><span class="line">        <span class="keyword">int</span> cnt = set.size();</span><br><span class="line">        <span class="keyword">if</span> (fibSet.contains(cnt)) &#123;</span><br><span class="line">            ret.add(str.substring(i, j + <span class="number">1</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">String[] arr = ret.toArray(<span class="keyword">new</span> String[ret.size()]);</span><br><span class="line">Arrays.sort(arr);</span><br><span class="line"><span class="keyword">for</span> (String s : arr) &#123;</span><br><span class="line">    System.out.println(s);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="5-΢��-Numeric-Keypad"><a href="#5-΢��-Numeric-Keypad" class="headerlink" title="5. ΢��-Numeric Keypad"></a>5. ΢��-Numeric Keypad</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">int</span>[][] canReach = &#123;</span><br><span class="line">        &#123;<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;, <span class="comment">// 0</span></span><br><span class="line">        &#123;<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>&#125;, <span class="comment">// 1</span></span><br><span class="line">        &#123;<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>&#125;, <span class="comment">// 2</span></span><br><span class="line">        &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>&#125;, <span class="comment">// 3</span></span><br><span class="line">        &#123;<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>&#125;, <span class="comment">// 4</span></span><br><span class="line">        &#123;<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>&#125;, <span class="comment">// 5</span></span><br><span class="line">        &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>&#125;, <span class="comment">// 6</span></span><br><span class="line">        &#123;<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>&#125;, <span class="comment">// 7</span></span><br><span class="line">        &#123;<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>&#125;, <span class="comment">// 8</span></span><br><span class="line">        &#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>&#125;  <span class="comment">// 9</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isLegal</span><span class="params">(<span class="keyword">char</span>[] chars, <span class="keyword">int</span> idx)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (idx &gt;= chars.length || idx &lt; <span class="number">0</span>) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    <span class="keyword">int</span> cur = chars[idx] - <span class="string">'0'</span>;</span><br><span class="line">    <span class="keyword">int</span> next = chars[idx + <span class="number">1</span>] - <span class="string">'0'</span>;</span><br><span class="line">    <span class="keyword">return</span> canReach[cur][next] == <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">    <span class="keyword">int</span> T = Integer.valueOf(in.nextLine());</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; T; i++) &#123;</span><br><span class="line">        String line = in.nextLine();</span><br><span class="line">        <span class="keyword">char</span>[] chars = line.toCharArray();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; chars.length - <span class="number">1</span>; j++) &#123;</span><br><span class="line">            <span class="keyword">while</span> (!isLegal(chars, j)) &#123;</span><br><span class="line">                <span class="keyword">if</span> (--chars[j + <span class="number">1</span>] &lt; <span class="string">'0'</span>) &#123;</span><br><span class="line">                    chars[j--]--;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> k = j + <span class="number">2</span>; k &lt; chars.length; k++) &#123;</span><br><span class="line">                    chars[k] = <span class="string">'9'</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(<span class="keyword">new</span> String(chars));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="6-΢��-Spring-Outing"><a href="#6-΢��-Spring-Outing" class="headerlink" title="6. ΢��-Spring Outing"></a>6. ΢��-Spring Outing</h1><p>������ N = 3��K = 4 ���������ۡ�</p><p>��ʼʱ����� 0 ���ط���Ϊ�����ص㣬Ҳ���Ǵ��ڼ��</p><p>�ӵ� 4 ���ص㿪ʼͶƱ��ÿ����ֻ��Ҫ�Ƚϵ� 4 ���ط��͵� 0 ���ط������ȼ�������������������ѡ���˵� 4 ���ط�����ô���µ� 4 ���ط���Ϊ�����ص㡣</p><p>�Ӻ���ǰ�����ظ����ϲ��裬���ϸ��´����ص㣬ֱ�����еط����Ѿ�ͶƱ��</p><p>����������У������ 0 ���ص��Ϊ�����ص㣬����Ϊ�����Ļ��� 4 ���ص��ֻ��Ҫ������ص���бȽϣ������ÿ����������������ʼ����� 1 ���ص��Ϊ�����ص㣬��ô�ڶԵ� 2 ���ص����ͶƱʱ��ÿ���˲���Ҫ���ǵ� 2 ���ص���� 1 ���ص�����ȼ���ҲҪ���������ͶƱ�ص�����ȼ���</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> N = in.nextInt();</span><br><span class="line"><span class="keyword">int</span> K = in.nextInt();</span><br><span class="line"><span class="keyword">int</span>[][] votes = <span class="keyword">new</span> <span class="keyword">int</span>[N][K + <span class="number">1</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; K + <span class="number">1</span>; j++) &#123;</span><br><span class="line">        <span class="keyword">int</span> place = in.nextInt();</span><br><span class="line">        votes[i][place] = j;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> ret = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> place = K; place &gt; <span class="number">0</span>; place--) &#123;</span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (votes[i][place] &lt; votes[i][ret]) &#123;</span><br><span class="line">            cnt++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (cnt &gt; N / <span class="number">2</span>) &#123;</span><br><span class="line">        ret = place;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(ret == <span class="number">0</span> ? <span class="string">"otaku"</span> : ret);</span><br></pre></td></tr></table></figure><h1 id="7-΢��-S-expression"><a href="#7-΢��-S-expression" class="headerlink" title="7. ΢��-S-expression"></a>7. ΢��-S-expression</h1><h1 id="8-��Ϊ-��߷��Ƕ���"><a href="#8-��Ϊ-��߷��Ƕ���" class="headerlink" title="8. ��Ϊ-��߷��Ƕ���"></a>8. ��Ϊ-��߷��Ƕ���</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> N = in.nextInt();</span><br><span class="line"><span class="keyword">int</span> M = in.nextInt();</span><br><span class="line"><span class="keyword">int</span>[] scores = <span class="keyword">new</span> <span class="keyword">int</span>[N];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++) &#123;</span><br><span class="line">    scores[i] = in.nextInt();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; M; i++) &#123;</span><br><span class="line">    String str = in.next();</span><br><span class="line">    <span class="keyword">if</span> (str.equals(<span class="string">"U"</span>)) &#123;</span><br><span class="line">        <span class="keyword">int</span> id = in.nextInt() - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> newScore = in.nextInt();</span><br><span class="line">        scores[id] = newScore;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">int</span> idBegin = in.nextInt() - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> idEnd = in.nextInt() - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> ret = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (idBegin &gt; idEnd) &#123;</span><br><span class="line">            <span class="keyword">int</span> t = idBegin;</span><br><span class="line">            idBegin = idEnd;</span><br><span class="line">            idEnd = t;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = idBegin; j &lt;= idEnd; j++) &#123;</span><br><span class="line">            ret = Math.max(ret, scores[j]);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(ret);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="9-��Ϊ-�򵥴����¼"><a href="#9-��Ϊ-�򵥴����¼" class="headerlink" title="9. ��Ϊ-�򵥴����¼"></a>9. ��Ϊ-�򵥴����¼</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">HashMap&lt;String, Integer&gt; map = <span class="keyword">new</span> LinkedHashMap&lt;&gt;();</span><br><span class="line"><span class="keyword">while</span> (in.hasNextLine()) &#123;</span><br><span class="line">    String s = in.nextLine();</span><br><span class="line">    String key = s.substring(s.lastIndexOf(<span class="string">'\\'</span>) + <span class="number">1</span>);</span><br><span class="line">    map.put(key, map.containsKey(key) ? map.get(key) + <span class="number">1</span> : <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">List&lt;Map.Entry&lt;String, Integer&gt;&gt; list = <span class="keyword">new</span> LinkedList&lt;&gt;(map.entrySet());</span><br><span class="line">Collections.sort(list, (o1, o2) -&gt; o2.getValue() - o1.getValue());</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">8</span> &amp;&amp; i &lt; list.size(); i++) &#123;</span><br><span class="line">    String[] token = list.get(i).getKey().split(<span class="string">" "</span>);</span><br><span class="line">    String filename = token[<span class="number">0</span>];</span><br><span class="line">    String line = token[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">if</span> (filename.length() &gt; <span class="number">16</span>) filename = filename.substring(filename.length() - <span class="number">16</span>);</span><br><span class="line">    System.out.println(filename + <span class="string">" "</span> + line + <span class="string">" "</span> + list.get(i).getValue());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="10-��Ϊ-�˿��y�С"><a href="#10-��Ϊ-�˿��y�С" class="headerlink" title="10. ��Ϊ-�˿��ƴ�С"></a>10. ��Ϊ-�˿��ƴ�С</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Map&lt;String, Integer&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        map.put(<span class="string">"3"</span>, <span class="number">0</span>);</span><br><span class="line">        map.put(<span class="string">"4"</span>, <span class="number">1</span>);</span><br><span class="line">        map.put(<span class="string">"5"</span>, <span class="number">2</span>);</span><br><span class="line">        map.put(<span class="string">"6"</span>, <span class="number">3</span>);</span><br><span class="line">        map.put(<span class="string">"7"</span>, <span class="number">4</span>);</span><br><span class="line">        map.put(<span class="string">"8"</span>, <span class="number">5</span>);</span><br><span class="line">        map.put(<span class="string">"9"</span>, <span class="number">6</span>);</span><br><span class="line">        map.put(<span class="string">"10"</span>, <span class="number">7</span>);</span><br><span class="line">        map.put(<span class="string">"J"</span>, <span class="number">8</span>);</span><br><span class="line">        map.put(<span class="string">"Q"</span>, <span class="number">9</span>);</span><br><span class="line">        map.put(<span class="string">"K"</span>, <span class="number">10</span>);</span><br><span class="line">        map.put(<span class="string">"A"</span>, <span class="number">11</span>);</span><br><span class="line">        map.put(<span class="string">"2"</span>, <span class="number">12</span>);</span><br><span class="line">        map.put(<span class="string">"joker"</span>, <span class="number">13</span>);</span><br><span class="line">        map.put(<span class="string">"JOKER "</span>, <span class="number">14</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> String <span class="title">play</span><span class="params">(String s1, String s2)</span> </span>&#123;</span><br><span class="line">        String[] token1 = s1.split(<span class="string">" "</span>);</span><br><span class="line">        String[] token2 = s2.split(<span class="string">" "</span>);</span><br><span class="line">        CardType type1 = computeCardType(token1);</span><br><span class="line">        CardType type2 = computeCardType(token2);</span><br><span class="line">        <span class="keyword">if</span> (type1 == CardType.DoubleJoker) <span class="keyword">return</span> s1;</span><br><span class="line">        <span class="keyword">if</span> (type2 == CardType.DoubleJoker) <span class="keyword">return</span> s2;</span><br><span class="line">        <span class="keyword">if</span> (type1 == CardType.Bomb &amp;&amp; type2 != CardType.Bomb) <span class="keyword">return</span> s1;</span><br><span class="line">        <span class="keyword">if</span> (type2 == CardType.Bomb &amp;&amp; type1 != CardType.Bomb) <span class="keyword">return</span> s2;</span><br><span class="line">        <span class="keyword">if</span> (type1 != type2 || token1.length != token2.length) <span class="keyword">return</span> <span class="string">"ERROR"</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; token1.length; i++) &#123;</span><br><span class="line">            <span class="keyword">int</span> val1 = map.get(token1[i]);</span><br><span class="line">            <span class="keyword">int</span> val2 = map.get(token2[i]);</span><br><span class="line">            <span class="keyword">if</span> (val1 != val2) <span class="keyword">return</span> val1 &gt; val2 ? s1 : s2;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"ERROR"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> CardType <span class="title">computeCardType</span><span class="params">(String[] token)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">boolean</span> hasjoker = <span class="keyword">false</span>, hasJOKER = <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; token.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (token[i].equals(<span class="string">"joker"</span>)) hasjoker = <span class="keyword">true</span>;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (token[i].equals(<span class="string">"JOKER"</span>)) hasJOKER = <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (hasjoker &amp;&amp; hasJOKER) <span class="keyword">return</span> CardType.DoubleJoker;</span><br><span class="line">        <span class="keyword">int</span> maxContinueLen = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> curContinueLen = <span class="number">1</span>;</span><br><span class="line">        String curValue = token[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; token.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (token[i].equals(curValue)) curContinueLen++;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                curContinueLen = <span class="number">1</span>;</span><br><span class="line">                curValue = token[i];</span><br><span class="line">            &#125;</span><br><span class="line">            maxContinueLen = Math.max(maxContinueLen, curContinueLen);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (maxContinueLen == <span class="number">4</span>) <span class="keyword">return</span> CardType.Bomb;</span><br><span class="line">        <span class="keyword">if</span> (maxContinueLen == <span class="number">3</span>) <span class="keyword">return</span> CardType.Triple;</span><br><span class="line">        <span class="keyword">if</span> (maxContinueLen == <span class="number">2</span>) <span class="keyword">return</span> CardType.Double;</span><br><span class="line">        <span class="keyword">boolean</span> isStraight = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; token.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (map.get(token[i]) - map.get(token[i - <span class="number">1</span>]) != <span class="number">1</span>) &#123;</span><br><span class="line">                isStraight = <span class="keyword">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (isStraight &amp;&amp; token.length == <span class="number">5</span>) <span class="keyword">return</span> CardType.Straight;</span><br><span class="line">        <span class="keyword">return</span> CardType.Sigal;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">enum</span> CardType &#123;</span><br><span class="line">        DoubleJoker, Bomb, Sigal, Double, Triple, Straight;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Main main = <span class="keyword">new</span> Main();</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        <span class="keyword">while</span> (in.hasNextLine()) &#123;</span><br><span class="line">            String s = in.nextLine();</span><br><span class="line">            String[] token = s.split(<span class="string">"-"</span>);</span><br><span class="line">            System.out.println(main.play(token[<span class="number">0</span>], token[<span class="number">1</span>]));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="11-z�K�-���ֲ���"><a href="#11-z�K�-���ֲ���" class="headerlink" title="11. ȥ�Ķ�-���ֲ���"></a>11. ȥ�Ķ�-���ֲ���</h1><p>�������ظ�Ԫ�ص��������飬���ֲ�����Ҫע������Ҫ�㣺</p><ul><li>if (val &lt;= A[m]) h = m;</li><li>��Ϊ h �ĸ�ֵΪ m ������ m - 1����� while ѭ��������Ҳ��Ϊ l &lt; h��������� m - 1 ѭ������Ϊ l &lt;= h��</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getPos</span><span class="params">(<span class="keyword">int</span>[] A, <span class="keyword">int</span> n, <span class="keyword">int</span> val)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> l = <span class="number">0</span>, h = n - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (l &lt; h) &#123;</span><br><span class="line">        <span class="keyword">int</span> m = l + (h - l) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (val &lt;= A[m]) h = m;</span><br><span class="line">        <span class="keyword">else</span> l = m + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> A[h] == val ? h : -<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="12-z�K�-�׸��ظ��ַ�"><a href="#12-z�K�-�׸��ظ��ַ�" class="headerlink" title="12. ȥ�Ķ�-�׸��ظ��ַ�"></a>12. ȥ�Ķ�-�׸��ظ��ַ�</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">char</span> <span class="title">findFirstRepeat</span><span class="params">(String A, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">boolean</span>[] hasAppear = <span class="keyword">new</span> <span class="keyword">boolean</span>[<span class="number">256</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">char</span> c = A.charAt(i);</span><br><span class="line">        <span class="keyword">if</span>(hasAppear[c]) <span class="keyword">return</span> c;</span><br><span class="line">        hasAppear[c] = <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">' '</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="13-z�K�-Ѱ��Coder"><a href="#13-z�K�-Ѱ��Coder" class="headerlink" title="13. ȥ�Ķ�-Ѱ��Coder"></a>13. ȥ�Ķ�-Ѱ��Coder</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> String[] findCoder(String[] A, <span class="keyword">int</span> n) &#123;</span><br><span class="line">    List&lt;Pair&lt;String, Integer&gt;&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span> (String s : A) &#123;</span><br><span class="line">        <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">        String t = s.toLowerCase();</span><br><span class="line">        <span class="keyword">int</span> idx = -<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            idx = t.indexOf(<span class="string">"coder"</span>, idx + <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span> (idx == -<span class="number">1</span>) <span class="keyword">break</span>;</span><br><span class="line">            cnt++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (cnt != <span class="number">0</span>) &#123;</span><br><span class="line">            list.add(<span class="keyword">new</span> Pair&lt;&gt;(s, cnt));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    Collections.sort(list, (o1, o2) -&gt; (o2.getValue() - o1.getValue()));</span><br><span class="line">    String[] ret = <span class="keyword">new</span> String[list.size()];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; list.size(); i++) &#123;</span><br><span class="line">        ret[i] = list.get(i).getKey();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ţ�����޷����� javafx.util.Pair��������Լ�ʵ��һ�� Pair ��</span></span><br><span class="line"><span class="keyword">private</span> <span class="class"><span class="keyword">class</span> <span class="title">Pair</span>&lt;<span class="title">T</span>, <span class="title">K</span>&gt; </span>&#123;</span><br><span class="line">    T t;</span><br><span class="line">    K k;</span><br><span class="line"></span><br><span class="line">    Pair(T t, K k) &#123;</span><br><span class="line">        <span class="keyword">this</span>.t = t;</span><br><span class="line">        <span class="keyword">this</span>.k = k;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">T <span class="title">getKey</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> t;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function">K <span class="title">getValue</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> k;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="14-����-����ֵ"><a href="#14-����-����ֵ" class="headerlink" title="14. ����-����ֵ"></a>14. ����-����ֵ</h1><p>̰�Ĳ��ԡ�</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getDis</span><span class="params">(<span class="keyword">int</span>[] A, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> max = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> soFarMin = A[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(soFarMin &gt; A[i]) soFarMin = A[i];</span><br><span class="line">        <span class="keyword">else</span> max = Math.max(max, A[i]- soFarMin);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> max;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="15-����-���ӷ�ת"><a href="#15-����-���ӷ�ת" class="headerlink" title="15. ����-���ӷ�ת"></a>15. ����-���ӷ�ת</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">int</span>[][] flipChess(<span class="keyword">int</span>[][] A, <span class="keyword">int</span>[][] f) &#123;</span><br><span class="line">    <span class="keyword">int</span>[][] direction = &#123;&#123;<span class="number">0</span>, <span class="number">1</span>&#125;, &#123;<span class="number">0</span>, -<span class="number">1</span>&#125;, &#123;<span class="number">1</span>, <span class="number">0</span>&#125;, &#123;-<span class="number">1</span>, <span class="number">0</span>&#125;&#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span>[] ff : f) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span>[] dd : direction) &#123;</span><br><span class="line">            <span class="keyword">int</span> r = ff[<span class="number">0</span>] + dd[<span class="number">0</span>] - <span class="number">1</span>, c = ff[<span class="number">1</span>] + dd[<span class="number">1</span>] - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(r &lt; <span class="number">0</span> || r &gt; <span class="number">3</span> || c &lt; <span class="number">0</span> || c &gt; <span class="number">3</span>) <span class="keyword">continue</span>;</span><br><span class="line">            A[r][c] ^= <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> A;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="16-����-�ݷ�"><a href="#16-����-�ݷ�" class="headerlink" title="16. ����-�ݷ�"></a>16. ����-�ݷ�</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> Set&lt;String&gt; paths;</span><br><span class="line"><span class="keyword">private</span> List&lt;Integer&gt; curPath;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">countPath</span><span class="params">(<span class="keyword">int</span>[][] map, <span class="keyword">int</span> n, <span class="keyword">int</span> m)</span> </span>&#123;</span><br><span class="line">    paths = <span class="keyword">new</span> HashSet&lt;&gt;();</span><br><span class="line">    curPath = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m; j++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (map[i][j] == <span class="number">1</span>) &#123;</span><br><span class="line">                map[i][j] = -<span class="number">1</span>;</span><br><span class="line">                <span class="keyword">int</span>[][] leftRightDirection = &#123;&#123;<span class="number">1</span>, <span class="number">0</span>&#125;, &#123;-<span class="number">1</span>, <span class="number">0</span>&#125;&#125;;</span><br><span class="line">                <span class="keyword">int</span>[][] topDownDirection = &#123;&#123;<span class="number">0</span>, <span class="number">1</span>&#125;, &#123;<span class="number">0</span>, -<span class="number">1</span>&#125;&#125;;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span>[] lr : leftRightDirection) &#123;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span>[] td : topDownDirection) &#123;</span><br><span class="line">                        <span class="keyword">int</span>[][] directions = &#123;lr, td&#125;;</span><br><span class="line">                        backtracking(map, n, m, i, j, directions);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> paths.size();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">backtracking</span><span class="params">(<span class="keyword">int</span>[][] map, <span class="keyword">int</span> n, <span class="keyword">int</span> m, <span class="keyword">int</span> r, <span class="keyword">int</span> c, <span class="keyword">int</span>[][] directions)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (map[r][c] == <span class="number">2</span>) &#123;</span><br><span class="line">        String path = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> num : curPath) &#123;</span><br><span class="line">            path += num;</span><br><span class="line">        &#125;</span><br><span class="line">        paths.add(path);</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; directions.length; i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> nextR = r + directions[i][<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">int</span> nextC = c + directions[i][<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span> (nextR &lt; <span class="number">0</span> || nextR &gt;= n || nextC &lt; <span class="number">0</span> || nextC &gt;= m || map[nextR][nextC] == -<span class="number">1</span>) <span class="keyword">continue</span>;</span><br><span class="line">        map[nextR][nextC] = map[nextR][nextC] == <span class="number">2</span> ? <span class="number">2</span> : -<span class="number">1</span>;</span><br><span class="line">        curPath.add(nextR);</span><br><span class="line">        curPath.add(nextC);</span><br><span class="line">        backtracking(map, n, m, nextR, nextC, directions);</span><br><span class="line">        curPath.remove(curPath.size() - <span class="number">1</span>);</span><br><span class="line">        curPath.remove(curPath.size() - <span class="number">1</span>);</span><br><span class="line">        map[nextR][nextC] = map[nextR][nextC] == <span class="number">2</span> ? <span class="number">2</span> : <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="17-����-ֱ��ͼ��������"><a href="#17-����-ֱ��ͼ��������" class="headerlink" title="17. ����-ֱ��ͼ��������"></a>17. ����-ֱ��ͼ��������</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">countArea</span><span class="params">(<span class="keyword">int</span>[] A, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> max = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> min = A[i];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &lt; n; j++) &#123;</span><br><span class="line">            min = Math.min(min, A[j]);</span><br><span class="line">            max = Math.max(max, min * (j - i + <span class="number">1</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> max;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="18-����-�ַ�������"><a href="#18-����-�ַ�������" class="headerlink" title="18. ����-�ַ�������"></a>18. ����-�ַ�������</h1><p>�ַ�������Сд�ַ������԰��ַ��������� 26 ���ơ������ֵ���ıȽϺ���ͨ�������Ƚϲ�ͬ���Ǵ������ҽ��бȽϣ����� “ac” �� “abc”���ֵ���ıȽϽ��Ϊ “ac” &gt; “abc”������������������Ƚϣ���Ϊ “abc” ����λ������Ȼ����</p><p>���������ַ����ĳ��ȿ��ܲ���ȣ��� s1 �հײ��ֺ� s2 ��Ӧ���ֽ��бȽ�ʱ��Ӧ�ð� s1 �Ŀհײ��ֿ����� ‘a’ �ַ��������ġ�</p><p>����һ��Ҫע����ǣ�s1 �� s2 ����Ϊ len<sub>i</sub> ���ַ�������ֻ�Ƚ�ǰ�� i ���ַ������� ‘aaa’ �� ‘bbb’ ������Ϊ 2 �ĸ���Ϊ ‘aa’ �� ‘bb’ ���ַ�������������Ҫ���Ǻ��沿�ֵ��ַ���</p><p>��ͳ�Ƹ���ʱ���� len1 ��ʼһֱ���������Ϸ����ȣ�ÿ��ѭ����ͳ�Ƴ���Ϊ i �����ַ���������</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">String s1 = in.next();</span><br><span class="line">String s2 = in.next();</span><br><span class="line"><span class="keyword">int</span> len1 = in.nextInt();</span><br><span class="line"><span class="keyword">int</span> len2 = in.nextInt();</span><br><span class="line"><span class="keyword">int</span> len = Math.min(s2.length(), len2);</span><br><span class="line"><span class="keyword">int</span>[] subtractArr = <span class="keyword">new</span> <span class="keyword">int</span>[len];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">    <span class="keyword">char</span> c1 = i &lt; s1.length() ? s1.charAt(i) : <span class="string">'a'</span>;</span><br><span class="line">    <span class="keyword">char</span> c2 = s2.charAt(i);</span><br><span class="line">    subtractArr[i] = c2 - c1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> ret = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = len1; i &lt;= len; i++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; i; j++) &#123;</span><br><span class="line">        ret += subtractArr[j] * Math.pow(<span class="number">26</span>, i - j - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(ret - <span class="number">1</span>);</span><br></pre></td></tr></table></figure><h1 id="19-����-ƽ������"><a href="#19-����-ƽ������" class="headerlink" title="19. ����-ƽ������"></a>19. ����-ƽ������</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> W = in.nextInt();</span><br><span class="line"><span class="keyword">double</span> Y = in.nextDouble();</span><br><span class="line"><span class="keyword">double</span> x = in.nextDouble();</span><br><span class="line"><span class="keyword">int</span> N = in.nextInt();</span><br><span class="line"><span class="keyword">while</span> (N-- &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    Y++; <span class="comment">// ��Ա��ÿ�����䶼Ҫ�� 1</span></span><br><span class="line">    Y += (<span class="number">21</span> - Y) * x;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println((<span class="keyword">int</span>) Math.ceil(Y));</span><br></pre></td></tr></table></figure><h1 id="20-�ٶ�-�ﷸת��"><a href="#20-�ٶ�-�ﷸת��" class="headerlink" title="20. �ٶ�-�ﷸת��"></a>20. �ٶ�-�ﷸת��</h1><p>���ֺ����⣬��ÿ����Ĳ��ֺͻ���������</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> n = in.nextInt();</span><br><span class="line"><span class="keyword">int</span> t = in.nextInt();</span><br><span class="line"><span class="keyword">int</span> c = in.nextInt();</span><br><span class="line"><span class="keyword">int</span>[] values = <span class="keyword">new</span> <span class="keyword">int</span>[n];</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">    values[i] = in.nextInt();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> totalValue = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> s = <span class="number">0</span>, e = c - <span class="number">1</span>; e &lt; n; s++, e++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (s == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; c; j++) totalValue += values[j];</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        totalValue = totalValue - values[s - <span class="number">1</span>] + values[e];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (totalValue &lt;= t) cnt++;</span><br><span class="line">&#125;</span><br><span class="line">System.out.println(cnt);</span><br></pre></td></tr></table></figure><h1 id="22-�ٶ�-�u�����ֽ"><a href="#22-�ٶ�-�u�����ֽ" class="headerlink" title="22. �ٶ�-�ü�����ֽ"></a>22. �ٶ�-�ü�����ֽ</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> n = in.nextInt();</span><br><span class="line"><span class="keyword">int</span> minX, minY, maxX, maxY;</span><br><span class="line">minX = minY = Integer.MAX_VALUE;</span><br><span class="line">maxX = maxY = Integer.MIN_VALUE;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++) &#123;</span><br><span class="line">    <span class="keyword">int</span> x = in.nextInt();</span><br><span class="line">    <span class="keyword">int</span> y = in.nextInt();</span><br><span class="line">    minX = Math.min(minX, x);</span><br><span class="line">    minY = Math.min(minY, y);</span><br><span class="line">    maxX = Math.max(maxX, x);</span><br><span class="line">    maxY = Math.max(maxY, y);</span><br><span class="line">&#125;</span><br><span class="line">System.out.println((<span class="keyword">int</span>) Math.pow(Math.max(maxX - minX, maxY - minY), <span class="number">2</span>));</span><br></pre></td></tr></table></figure><h1 id="23-�ٶ�-�������"><a href="#23-�ٶ�-�������" class="headerlink" title="23. �ٶ�-�������"></a>23. �ٶ�-�������</h1><p>P ( ���ٵ�һ���� ) = 1 - P ( һ��Ҳ������ )</p><p>�ӣ���ȡ���ʾ����ʱ����Ҫһ��һ�н��ж�ȡ��������ֱ���� in.nextDouble()��</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">    <span class="keyword">while</span> (in.hasNext()) &#123;</span><br><span class="line">        <span class="keyword">int</span> n = in.nextInt();</span><br><span class="line">        <span class="keyword">int</span> m = in.nextInt();</span><br><span class="line">        <span class="keyword">int</span> x = in.nextInt();</span><br><span class="line">        <span class="keyword">int</span> y = in.nextInt();</span><br><span class="line">        <span class="keyword">int</span> t = in.nextInt();</span><br><span class="line">        in.nextLine(); <span class="comment">// ��</span></span><br><span class="line">        <span class="keyword">double</span> pcc = <span class="number">0.0</span>;</span><br><span class="line">        <span class="keyword">double</span> sum = <span class="number">0.0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">            String[] token = in.nextLine().split(<span class="string">" "</span>); <span class="comment">// ��</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= m; j++) &#123;</span><br><span class="line">                <span class="keyword">double</span> p = Double.parseDouble(token[j - <span class="number">1</span>]);</span><br><span class="line">                <span class="comment">//  double p = in.nextDouble();</span></span><br><span class="line">                sum += p;</span><br><span class="line">                <span class="keyword">if</span> (i == x &amp;&amp; j == y) &#123;</span><br><span class="line">                    pcc = p;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">double</span> pss = sum / (n * m);</span><br><span class="line">        pcc = computePOfIRT(pcc, t);</span><br><span class="line">        pss = computePOfIRT(pss, t);</span><br><span class="line">        System.out.println(pcc &gt; pss ? <span class="string">"cc"</span> : pss &gt; pcc ? <span class="string">"ss"</span> : <span class="string">"equal"</span>);</span><br><span class="line">        System.out.printf(<span class="string">"%.2f\n"</span>, Math.max(pcc, pss));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// compute probability of independent repeated trials</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">double</span> <span class="title">computePOfIRT</span><span class="params">(<span class="keyword">double</span> p, <span class="keyword">int</span> t)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span> - Math.pow((<span class="number">1</span> - p), t);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="24-�ٶ�-G����"><a href="#24-�ٶ�-G����" class="headerlink" title="24. �ٶ�-Ģ����"></a>24. �ٶ�-Ģ����</h1><p>�����û��ݻᳬʱ����Ҫ�� DP��</p><p>dp[i][j] ��ʾ���� (i,j) λ�ò��ᴥ��Ģ���ĸ��ʡ����� N*M ������� i == N || j == M����ô (i,j) ֻ����һ���ƶ�����������������������ƶ�����</p><p>�������¾������е� 3 �к͵� 3 ��ֻ����һ�������ƶ���������λ�ÿ��������������ƶ���</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> N = in.nextInt();</span><br><span class="line"><span class="keyword">int</span> M = in.nextInt();</span><br><span class="line"><span class="keyword">int</span> K = in.nextInt();</span><br><span class="line"><span class="keyword">boolean</span>[][] mushroom = <span class="keyword">new</span> <span class="keyword">boolean</span>[N][M];</span><br><span class="line"><span class="keyword">while</span> (K-- &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">int</span> x = in.nextInt();</span><br><span class="line">    <span class="keyword">int</span> y = in.nextInt();</span><br><span class="line">    mushroom[x - <span class="number">1</span>][y - <span class="number">1</span>] = <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">double</span>[][] dp = <span class="keyword">new</span> <span class="keyword">double</span>[N][M];</span><br><span class="line">dp[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; N; i++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; M; j++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (mushroom[i][j]) dp[i][j] = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">double</span> cur = dp[i][j];</span><br><span class="line">            <span class="keyword">if</span> (i == N - <span class="number">1</span> &amp;&amp; j == M - <span class="number">1</span>) <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">if</span> (i == N - <span class="number">1</span>) dp[i][j + <span class="number">1</span>] += cur;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (j == M - <span class="number">1</span>) dp[i + <span class="number">1</span>][j] += cur;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                dp[i][j + <span class="number">1</span>] += cur / <span class="number">2</span>;</span><br><span class="line">                dp[i + <span class="number">1</span>][j] += cur / <span class="number">2</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">System.out.printf(<span class="string">"%.2f\n"</span>, dp[N - <span class="number">1</span>][M - <span class="number">1</span>]);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!-- GFM-TOC --&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;#ǰ��&quot;&gt;ǰ��&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#1-С��-С��git&quot;&gt;1. С��-С��Git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;#2-С��-��������&quot;&gt;2. С�
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2018/03/29/programming-basics-master/README/"/>
    <id>http://yoursite.com/2018/03/29/programming-basics-master/README/</id>
    <published>2018-03-29T14:37:48.166Z</published>
    <updated>2018-02-26T04:13:28.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数据结构与算法"><a href="#数据结构与算法" class="headerlink" title="数据结构与算法"></a>数据结构与算法</h1><blockquote><p><a href="https://github.com/CyC2018/InnterviewNotes/blob/master/notes/算法.md" target="_blank" rel="noopener">算法</a></p></blockquote><p>整理自《算法 第四版》</p><blockquote><p><a href="https://github.com/CyC2018/InnterviewNotes/blob/master/notes/Leetcode%20题解.md" target="_blank" rel="noopener">Leetcode 题解</a></p></blockquote><p>对题目做了一个分类，并对每种题型的解题思想做了总结。</p><p>已经整理了 300+ 的题目，基本涵盖所有经典题目，持续整理中。</p><blockquote><p><a href="https://github.com/CyC2018/InnterviewNotes/blob/master/notes/剑指%20offer%20题解.md" target="_blank" rel="noopener">剑指 offer 题解</a></p></blockquote><p>目录按《剑指 Offer 第二版》编排，在牛客网的在线编程中出现的题目都已经 AC。</p><p>很多题目都在 Leetcode 中出现过，所以一些解题思路就不在这里重复写了。想要看解题思路的话，可以看《剑指 Offer》原书，或者先看 Leetcode 题解，看完 Leetcode 题解再看剑指 Offer 会觉得很容易。</p><h1 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h1><blockquote><p><a href="https://github.com/CyC2018/InnterviewNotes/blob/master/notes/计算机网络.md" target="_blank" rel="noopener">计算机网络</a></p></blockquote><p>整理自《计算机网络 第七版》，重点内容会在标题之后加 *。</p><blockquote><p><a href="https://github.com/CyC2018/InnterviewNotes/blob/master/notes/HTTP.md" target="_blank" rel="noopener">HTTP</a></p></blockquote><p>整理自《图解 HTTP》</p><h1 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h1><blockquote><p><a href="https://github.com/CyC2018/InnterviewNotes/blob/master/notes/计算机操作系统.md" target="_blank" rel="noopener">计算机操作系统</a></p></blockquote><p>整理自《现代操作系统》</p><blockquote><p><a href="https://github.com/CyC2018/InnterviewNotes/blob/master/notes/Linux.md" target="_blank" rel="noopener">Linux</a></p></blockquote><p>整理自《鸟哥的 Linux 私房菜》</p><h1 id="面向对象"><a href="#面向对象" class="headerlink" title="面向对象"></a>面向对象</h1><blockquote><p><a href="https://github.com/CyC2018/InnterviewNotes/blob/master/notes/设计模式.md" target="_blank" rel="noopener">设计模式</a></p></blockquote><p>整理自《Head First 设计模式》，这本书内容废话太多，笔记内容提取了重点部分。</p><blockquote><p><a href="https://github.com/CyC2018/InnterviewNotes/blob/master/notes/面向对象思想.md" target="_blank" rel="noopener">面向对象思想</a></p></blockquote><p>一些面向对象思想和原则</p><h1 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h1><blockquote><p><a href="https://github.com/CyC2018/InnterviewNotes/blob/master/notes/SQL%20语法.md" target="_blank" rel="noopener">SQL 语法</a></p></blockquote><p>整理自《SQL 必知必会》，原书内容不多，笔记内容会更简洁。</p><blockquote><p><a href="https://github.com/CyC2018/InnterviewNotes/blob/master/notes/MySQL.md" target="_blank" rel="noopener">MySQL</a></p></blockquote><p>整理自《高性能 MySQL》，重点整理。</p><h1 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h1><blockquote><p><a href="https://github.com/CyC2018/InnterviewNotes/blob/master/notes/JVM.md" target="_blank" rel="noopener">JVM</a></p></blockquote><p>整理自《深入理解 Java 虚拟机》，包括内存模型、垃圾回收和类加载机制。</p><blockquote><p><a href="https://github.com/CyC2018/InnterviewNotes/blob/master/notes/Java%20容器.md" target="_blank" rel="noopener">Java 容器</a></p></blockquote><p>容器的一些总结，包含容器源码的分析。</p><blockquote><p><a href="https://github.com/CyC2018/InnterviewNotes/blob/master/notes/Java%20IO.md" target="_blank" rel="noopener">Java IO</a></p></blockquote><p>File、InputStream 和 OutputStream、Reader 和 Writer、Serializable、Socket 以及 NIO</p><h1 id="编码实践"><a href="#编码实践" class="headerlink" title="编码实践"></a>编码实践</h1><blockquote><p><a href="https://github.com/CyC2018/InnterviewNotes/blob/master/notes/重构.md" target="_blank" rel="noopener">重构</a></p></blockquote><p>重构是对软件内部结构的一种调整，目的是在不改变软件可观察行为的前提下，提高其可理解性，降低其修改成本。</p><blockquote><p><a href="https://github.com/CyC2018/InnterviewNotes/blob/master/notes/编写可读代码的艺术.md" target="_blank" rel="noopener">编写可读代码的艺术</a></p></blockquote><p>编程有很大一部分时间是在阅读代码，可读性良好的代码能够大大提高编程效率。</p><h1 id="资料下载"><a href="#资料下载" class="headerlink" title="资料下载"></a>资料下载</h1><blockquote><p><a href="https://pan.baidu.com/s/1o9oD1s2#list/path=%2F" target="_blank" rel="noopener">百度网盘</a></p></blockquote><p>一些 PDF 书籍</p><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>原文发表在 <a href="https://www.nowcoder.com/discuss/66985" target="_blank" rel="noopener">牛客网：计算机基础知识整理</a></p><p>:star: :star: :star:</p><p>牛客网上有很多优质面经，面经往往会给出一些面试需要准备的知识列表，但是这些知识列表都很零散，不适合系统地进行学习。为此，楼主选取了一些计算机经典书籍和材料，对面试相关的计算机基础知识做了比较系统整理，希望对大家有所帮助。</p><p>整理的笔记开源在 Github 上，包括数据结构与算法、网络、操作系统、面向对象。 Github 仓库提供相关 PDF 书籍的下载，基本都是高清版本。</p><p>如有笔误，直接在 Github 上进行编辑修改就行，楼主会及时 Merge。</p><p>想要支持楼主的话，在 Github 仓库点个 Star 即可。</p><p>笔记基本是楼主一个字一个字打上去的，笔记内容可供个人随意使用，转载请注明出处，毕竟写了这么久没那么轻松~</p><p>楼主作为一个轻度强迫症患者，笔记内容会尽量保证排版美观，可读性好。有时候找不到好看的图，会选择自己画一个，可见楼主的强迫症多严重。为了让笔记内容更整洁，前前后后做了很多次修改，也写了一个为中英混排文档进行排版的脚本，来提高笔记的可读性。</p><p>为了上传笔记到 Github 上，也花了不少时间。楼主使用的笔记软件是为知笔记，怎么把笔记内容提取成文本文档，并且提取笔记中的图片就是一个问题。Github 使用的是 GFM 来渲染 md 文档，和普通的 Markdown 不太一样，例如 GFM 不支持 MathJax 公式，也不支持 TOC 标记，为此需要替换 MathJax 公式为 Codecogs 的云服务和重新生成 TOC 目录。楼主实现了脚本解决了上述的问题，并且整个过程可以一键进行，包括 Git 同步到仓库中。有需要该工具的话可以在我的 Github 中找到。</p><p>:star: :star: :star:</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;数据结构与算法&quot;&gt;&lt;a href=&quot;#数据结构与算法&quot; class=&quot;headerlink&quot; title=&quot;数据结构与算法&quot;&gt;&lt;/a&gt;数据结构与算法&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/CyC2018/I
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>微信小程序一些常用方法</title>
    <link href="http://yoursite.com/2017/09/30/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E6%96%B9%E6%B3%95/"/>
    <id>http://yoursite.com/2017/09/30/微信小程序方法/</id>
    <published>2017-09-30T03:16:12.000Z</published>
    <updated>2018-03-29T10:23:38.000Z</updated>
    
    <content type="html"><![CDATA[<h4 id="微信小程序"><a href="#微信小程序" class="headerlink" title="微信小程序"></a>微信小程序</h4><hr><blockquote><p>最近一个月都在写小程序，有用到一些封装方法和深坑记录一下</p></blockquote><p>1.微信小程序路由跳转<code>navigateTo</code>封装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">const parse = (query) =&gt; &#123;</span><br><span class="line">  return Object.keys(query).map(key =&gt; `$&#123;key&#125;=$&#123;query[key]&#125;`).join(&apos;&amp;&apos;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">module.exports = &#123;</span><br><span class="line">  go(url, query = &#123;&#125;) &#123;</span><br><span class="line">    console.log(url)</span><br><span class="line">    return new Promise((resolve, reject) =&gt; &#123;</span><br><span class="line">      wx.navigateTo(&#123;</span><br><span class="line">        url: `$&#123;url&#125;?$&#123;parse(query)&#125;`,</span><br><span class="line">        success: resolve,</span><br><span class="line">        fail: reject</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">  replace(url, query = &#123;&#125;) &#123;</span><br><span class="line">    return new Promise((resolve, reject) =&gt; &#123;</span><br><span class="line">      wx.redirectTo(&#123;</span><br><span class="line">        url: `$&#123;url&#125;?$&#123;parse(query)&#125;`,</span><br><span class="line">        success: resolve,</span><br><span class="line">        fail: reject</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;,</span><br><span class="line">  back(delta) &#123;</span><br><span class="line">    wx.navigateBack(&#123; delta &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.<code>promise</code>封装<code>request</code>请求</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">var Promise = require(&apos;../plugins/es6-promise.js&apos;)</span><br><span class="line"></span><br><span class="line">function wxPromisify(fn) &#123;</span><br><span class="line">  return function (obj = &#123;&#125;) &#123;</span><br><span class="line">    return new Promise((resolve, reject) =&gt; &#123;</span><br><span class="line">      obj.success = function (res) &#123;</span><br><span class="line">        //成功</span><br><span class="line">        resolve(res)</span><br><span class="line">      &#125;</span><br><span class="line">      obj.fail = function (res) &#123;</span><br><span class="line">        //失败</span><br><span class="line">        reject(res)</span><br><span class="line">      &#125;</span><br><span class="line">      fn(obj)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">//无论promise对象最后状态如何都会执行</span><br><span class="line">Promise.prototype.finally = function (callback) &#123;</span><br><span class="line">  let P = this.constructor;</span><br><span class="line">  return this.then(</span><br><span class="line">    value =&gt; P.resolve(callback()).then(() =&gt; value),</span><br><span class="line">    reason =&gt; P.resolve(callback()).then(() =&gt; &#123; throw reason &#125;)</span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line">/**</span><br><span class="line"> * 微信请求get方法</span><br><span class="line"> * url</span><br><span class="line"> * data 以对象的格式传入</span><br><span class="line"> */</span><br><span class="line">function getRequest(url, data) &#123;</span><br><span class="line">  var getRequest = wxPromisify(wx.request)</span><br><span class="line">  return getRequest(&#123;</span><br><span class="line">    url: url,</span><br><span class="line">    method: &apos;GET&apos;,</span><br><span class="line">    data: data,</span><br><span class="line">    header: &#123;</span><br><span class="line">      &apos;Content-Type&apos;: &apos;application/json&apos;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * 微信请求post方法封装</span><br><span class="line"> * url</span><br><span class="line"> * data 以对象的格式传入</span><br><span class="line"> */</span><br><span class="line">function postRequest(url, data) &#123;</span><br><span class="line">  var postRequest = wxPromisify(wx.request)</span><br><span class="line">  return postRequest(&#123;</span><br><span class="line">    url: url,</span><br><span class="line">    method: &apos;POST&apos;,</span><br><span class="line">    data: data,</span><br><span class="line">    header: &#123;</span><br><span class="line">      &quot;content-type&quot;: &quot;application/x-www-form-urlencoded&quot;</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">module.exports = &#123;</span><br><span class="line">  postRequest: postRequest,</span><br><span class="line">  getRequest: getRequest</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>小程序不支持<code>promise</code>所以先引入<code>promise</code>库才行<br>3.<code>promise</code>封装<code>storage</code>请求</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">var Promise = require(&apos;../plugins/es6-promise.js&apos;)</span><br><span class="line"></span><br><span class="line">function wxPromisify(fn) &#123;</span><br><span class="line">  return function (obj = &#123;&#125;) &#123;</span><br><span class="line">    return new Promise((resolve, reject) =&gt; &#123;</span><br><span class="line">      obj.success = function (res) &#123;</span><br><span class="line">        //成功</span><br><span class="line">        resolve(res)</span><br><span class="line">      &#125;</span><br><span class="line">      obj.fail = function (res) &#123;</span><br><span class="line">        //失败</span><br><span class="line">        reject(res)</span><br><span class="line">      &#125;</span><br><span class="line">      fn(obj)</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">//无论promise对象最后状态如何都会执行</span><br><span class="line">Promise.prototype.finally = function (callback) &#123;</span><br><span class="line">  let P = this.constructor;</span><br><span class="line">  return this.then(</span><br><span class="line">    value =&gt; P.resolve(callback()).then(() =&gt; value),</span><br><span class="line">    reason =&gt; P.resolve(callback()).then(() =&gt; &#123; throw reason &#125;)</span><br><span class="line">  );</span><br><span class="line">&#125;;</span><br><span class="line">//异步设置storage</span><br><span class="line">function setStorage(keys, value) &#123;</span><br><span class="line">  wx.setStorage(&#123;</span><br><span class="line">    key: keys,</span><br><span class="line">    data: value</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//同步设置storage</span><br><span class="line">function setStorageSync(keys, value) &#123;</span><br><span class="line">  try &#123;</span><br><span class="line">    wx.setStorageSync(kes, value)</span><br><span class="line">  &#125; catch (e) &#123;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//异步获取stotage</span><br><span class="line">function getStorage(keys) &#123;</span><br><span class="line">  let getStorage = wxPromisify(wx.getStorage)</span><br><span class="line">  return getStorage(&#123;</span><br><span class="line">    key: keys</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//同步获取storage</span><br><span class="line">function getStorageSync(keys) &#123;</span><br><span class="line">  try &#123;</span><br><span class="line">    var value = wx.getStorageSync(keys)</span><br><span class="line">    if (value) &#123;</span><br><span class="line">      // Do something with return value</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; catch (e) &#123;</span><br><span class="line">    // Do something when catch error</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//移除指定key storage</span><br><span class="line">function removeStorage(obj) &#123;</span><br><span class="line">  let removeStorage = wxPromisify(wx.removeStorage);</span><br><span class="line">  return removeStorage(&#123;</span><br><span class="line">    key: obj</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//</span><br><span class="line">module.exports = &#123;</span><br><span class="line">  setStorage,</span><br><span class="line">  setStorageSync,</span><br><span class="line">  getStorage,</span><br><span class="line">  getStorageSync,</span><br><span class="line">  removeStorage,</span><br><span class="line">  clearStorageSync: wx.clearStorageSync(),</span><br><span class="line">  clearStorage: wx.clearStorage()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>项目中还遇到html转wxml用wxParse解决<a href="https://github.com/icindy/wxParse；" target="_blank" rel="noopener">https://github.com/icindy/wxParse；</a></li><li>微信小程序启动时，调用生命周期方法为：<code>onLaunch</code>方法<code>（app.js）</code>—<code>onShow</code>方法<code>（app.js）---onLoad</code>方法（首页面：<code>index.js</code>的<code>onLoad</code>方法）；所以如果在<code>app.js</code>里面去获取用户信息操作<code>token</code>，在<code>index</code>页面使用会出现异步还没获取到数据就执行,一般情况用<code>promise</code>就可以直接解决问题，稍微麻烦的一般使用<code>settimeout</code>去解决。</li><li>项目中还用上了<code>socket</code>实时更新数据，比较坑的地方就是小程序的<code>socket</code>只能连接60秒就断，可以让用户上拉刷新，试了定时器方法，但是由于会频繁的去操作<code>setData</code>考虑到性能问题并没有使用.</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;微信小程序&quot;&gt;&lt;a href=&quot;#微信小程序&quot; class=&quot;headerlink&quot; title=&quot;微信小程序&quot;&gt;&lt;/a&gt;微信小程序&lt;/h4&gt;&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;最近一个月都在写小程序，有用到一些封装方法和深坑记录一下&lt;/p&gt;
&lt;/block
      
    
    </summary>
    
      <category term="Wechat" scheme="http://yoursite.com/categories/Wechat/"/>
    
    
      <category term="Wechat" scheme="http://yoursite.com/tags/Wechat/"/>
    
  </entry>
  
</feed>
